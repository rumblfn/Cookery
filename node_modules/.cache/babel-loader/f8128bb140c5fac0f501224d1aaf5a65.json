{"ast":null,"code":"var _jsxFileName = \"/Users/samilvaliahmetov/education/programming/schoolProject/my-app/src/routes/Recipes/recipes.js\",\n    _s = $RefreshSig$();\n\nimport { Footer } from \"../../components/Footer/footer\";\nimport { useState, useEffect } from 'react'; // import './style.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet collectProducts = [];\n\nconst Resipes = () => {\n  _s();\n\n  async function getRecipes() {\n    const url = 'https://raw.githubusercontent.com/rumblfn/Cookery/main/jsonSettings/recipes.json';\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      collectProducts = [];\n      let i = 0;\n\n      for (let elem of data) {\n        collectProducts.push(elem);\n        collectProducts[i].currentImage = 0;\n        i++;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  const changeImage = item => {\n    console.log(item);\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products_container\",\n      children: collectProducts.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeImage,\n          children: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.images[item.currentImage],\n          alt: \"food_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeImage,\n          children: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Resipes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Resipes;\nexport default Resipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resipes\");","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/src/routes/Recipes/recipes.js"],"names":["Footer","useState","useEffect","collectProducts","Resipes","getRecipes","url","response","fetch","data","json","i","elem","push","currentImage","e","console","error","changeImage","item","log","map","images","title","id"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,gCAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;;AAEA,IAAIC,eAAe,GAAG,EAAtB;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,iBAAeC,UAAf,GAA4B;AACxB,UAAMC,GAAG,GAAG,kFAAZ;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,MAAAA,eAAe,GAAG,EAAlB;AACA,UAAIQ,CAAC,GAAG,CAAR;;AACA,WAAK,IAAIC,IAAT,IAAiBH,IAAjB,EAAuB;AACnBN,QAAAA,eAAe,CAACU,IAAhB,CAAqBD,IAArB;AACAT,QAAAA,eAAe,CAACQ,CAAD,CAAf,CAAmBG,YAAnB,GAAkC,CAAlC;AACAH,QAAAA,CAAC;AACJ;AACJ,KAVD,CAUE,OAAOI,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ;;AAED,QAAMG,WAAW,GAAIC,IAAD,IAAU;AAC1BH,IAAAA,OAAO,CAACI,GAAR,CAAYD,IAAZ;AACH,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBACKF,eAAe,CAACkB,GAAhB,CAAqBF,IAAD,iBACjB;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCAGI;AAAQ,UAAA,OAAO,EAAED,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAMQ;AAAK,UAAA,GAAG,EAAEC,IAAI,CAACG,MAAL,CAAYH,IAAI,CAACL,YAAjB,CAAV;AAA0C,UAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBANR,eAOI;AAAQ,UAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAA,oBAAKC,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA,SACSJ,IAAI,CAACK,EADd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA/CD;;GAAMpB,O;;KAAAA,O;AAgDN,eAAeA,OAAf","sourcesContent":["import { Footer } from \"../../components/Footer/footer\";\nimport { useState, useEffect } from 'react';\n// import './style.css';\n\nlet collectProducts = [];\nconst Resipes = () => {\n    async function getRecipes() {\n        const url = 'https://raw.githubusercontent.com/rumblfn/Cookery/main/jsonSettings/recipes.json';\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            collectProducts = [];\n            let i = 0\n            for (let elem of data) {\n                collectProducts.push(elem);\n                collectProducts[i].currentImage = 0\n                i++;\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    const changeImage = (item) => {\n        console.log(item);\n    }\n\n    useEffect(() => {\n        getRecipes();\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"products_container\">\n                {collectProducts.map((item) => (\n                    <div className=\"product_box\"\n                        key={item.id}\n                    >\n                        <button onClick={changeImage}>\n                            left\n                        </button>\n                            <img src={item.images[item.currentImage]} alt='food_image'/>\n                        <button onClick={changeImage}>\n                            right\n                        </button>\n                        <h3>{item.title}</h3>\n                    </div>\n                ))}\n            </div>\n\n        </div >\n    )\n}\nexport default Resipes;"]},"metadata":{},"sourceType":"module"}