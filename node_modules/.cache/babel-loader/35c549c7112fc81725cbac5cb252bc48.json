{"ast":null,"code":"var _jsxFileName = \"/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/components/HomePage/listOfProducts/listOfProducts.js\",\n    _s = $RefreshSig$();\n\nimport { productsConnect } from '../../../connect/products/products';\nimport CheckIcon from '@mui/icons-material/Check';\nimport './style.css';\nimport '../style.css';\nimport Paper from '@mui/material/Paper';\nimport InputBase from \"@mui/material/InputBase\";\nimport Axios from 'axios';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect } from 'react';\nimport { auth } from '../../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Widget = productsConnect(_c = _ref => {\n  let {\n    isLoading,\n    toggleClass,\n    setInputValue,\n    inputValue,\n    checkEmail,\n    products,\n    changeSelectedState,\n    filterState,\n    marginRightProp,\n    maxHeightProp\n  } = _ref;\n  let default_size = '70vh';\n  console.log(products);\n\n  const checkProduct = item => {\n    changeSelectedState(item);\n  };\n\n  const filterProducts = event => {\n    setInputValue(event.target.value);\n    filterState(event.target.value);\n  };\n\n  const addNewProduct = () => {\n    Axios.post('http://localhost:3001/products/insert', {\n      productName: inputValue\n    }).then(() => {\n      console.log(`${inputValue} added`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [checkEmail ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '16px',\n        marginLeft: '16px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        sx: {\n          color: 'black',\n          backgroundColor: 'white',\n          borderColor: 'black',\n          \"&:hover\": {\n            backgroundColor: 'rgb(17,17,50)',\n            color: 'white',\n            borderColor: 'white'\n          }\n        },\n        onClick: addNewProduct,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Paper, {\n      className: toggleClass ? \"blob\" : null,\n      elevation: 3,\n      style: {\n        borderRadius: '7px',\n        padding: '10px',\n        marginRight: marginRightProp,\n        overflow: 'auto',\n        maxHeight: maxHeightProp || default_size\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginBottom: '25px'\n        },\n        children: /*#__PURE__*/_jsxDEV(InputBase, {\n          onChange: filterProducts,\n          sx: {\n            m: 0,\n            width: '100%',\n            borderBottom: '2px solid black'\n          },\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), isLoading ? null : Object.keys(products).map(elKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        onClick: () => checkProduct(elKey),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: products[elKey].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CheckIcon, {\n          hidden: !products[elKey].selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, elKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n});\n_c2 = Widget;\nexport const ListOfProducts = _ref2 => {\n  _s();\n\n  let {\n    toggleClass\n  } = _ref2;\n  const [checkEmail, setCheckEmail] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const initialProducts = {};\n  useEffect(() => {\n    try {\n      if (auth.currentUser.email === 'toshamilgis@gmail.com') {\n        setCheckEmail(true);\n      }\n    } catch {\n      setCheckEmail(false);\n    }\n\n    Axios.get('http://localhost:3001/products/get').then(response => {\n      setIsLoading(true);\n      setTimeout(() => {\n        for (let prod of response.data) {\n          if (prod.name) {\n            initialProducts[prod.id] = {\n              name: prod.name,\n              selected: Boolean(+prod.selected)\n            };\n          }\n        }\n\n        setIsLoading(false);\n        console.log(initialProducts);\n      }, 3000);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    isLoading: isLoading,\n    toggleClass: toggleClass,\n    checkEmail: checkEmail,\n    setInputValue: setInputValue,\n    inputValue: inputValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListOfProducts, \"Kx2mwNk6Ux5OlprT8PhIzLUD5C8=\");\n\n_c3 = ListOfProducts;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Widget$productsConnect\");\n$RefreshReg$(_c2, \"Widget\");\n$RefreshReg$(_c3, \"ListOfProducts\");","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/components/HomePage/listOfProducts/listOfProducts.js"],"names":["productsConnect","CheckIcon","Paper","InputBase","Axios","Button","useState","useEffect","auth","Widget","isLoading","toggleClass","setInputValue","inputValue","checkEmail","products","changeSelectedState","filterState","marginRightProp","maxHeightProp","default_size","console","log","checkProduct","item","filterProducts","event","target","value","addNewProduct","post","productName","then","marginBottom","marginLeft","color","backgroundColor","borderColor","borderRadius","padding","marginRight","overflow","maxHeight","display","justifyContent","m","width","borderBottom","Object","keys","map","elKey","name","selected","ListOfProducts","setCheckEmail","setIsLoading","initialProducts","currentUser","email","get","response","setTimeout","prod","data","id","Boolean"],"mappings":"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","sourcesContent":["import { productsConnect } from '../../../connect/products/products'\nimport CheckIcon from '@mui/icons-material/Check';\nimport './style.css';\nimport '../style.css'\nimport Paper from '@mui/material/Paper';\nimport InputBase from \"@mui/material/InputBase\";\nimport Axios from 'axios';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect } from 'react';\nimport { auth } from '../../../firebase';\n\n\nconst Widget = productsConnect(({isLoading, toggleClass, setInputValue, inputValue, checkEmail, products, changeSelectedState, filterState, marginRightProp, maxHeightProp}) => {\n    let default_size = '70vh'\n    console.log(products)\n\n    const checkProduct = (item) => {\n        changeSelectedState(item)\n    }\n\n    const filterProducts = (event) => {\n        setInputValue(event.target.value)\n        filterState(event.target.value);\n    }\n\n    const addNewProduct = () => {\n        Axios.post('http://localhost:3001/products/insert', {\n            productName: inputValue\n        }).then(() => {\n            console.log(`${inputValue} added`);\n        })\n    }\n\n    return (\n        <>\n        {checkEmail ?\n        <div style={{marginBottom: '16px', marginLeft: '16px'}}>\n            <Button variant=\"outlined\" sx={{\n                color: 'black', backgroundColor: 'white', borderColor: 'black',\n                \"&:hover\": {\n                    backgroundColor: 'rgb(17,17,50)',\n                    color: 'white',\n                    borderColor: 'white',\n                }\n            }} onClick={addNewProduct}>\n                Добавить\n            </Button>\n        </div> : null\n        }\n        <Paper className={toggleClass ? \"blob\": null} elevation={3} style={{borderRadius: '7px', padding: '10px', marginRight: marginRightProp, overflow: 'auto', maxHeight: maxHeightProp || default_size}}>\n            <div style={{display: 'flex', justifyContent: 'space-between', marginBottom: '25px'}}>\n                <InputBase\n                    onChange={filterProducts}\n                    sx={{m: 0, width: '100%', borderBottom: '2px solid black'}} placeholder=\"Введите название продукта\"\n                />\n            </div>\n            {isLoading ? null :\n            (Object.keys(products).map(elKey => (\n                <div key={elKey} className=\"block\" onClick={() => checkProduct(elKey)}>\n                    <p>{products[elKey].name}</p>\n                    <CheckIcon hidden={!products[elKey].selected}/>\n                </div>))\n            )}\n        </Paper>\n        </>\n    )\n})\n\nexport const ListOfProducts = ({toggleClass}) => {\n    const [checkEmail, setCheckEmail] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const [isLoading, setIsLoading] = useState(false)\n    const initialProducts = {}\n\n    useEffect(() => {\n        try {\n            if (auth.currentUser.email === 'toshamilgis@gmail.com') {\n                setCheckEmail(true)\n            }\n        } catch {\n            setCheckEmail(false)\n        }\n        Axios.get('http://localhost:3001/products/get').then((response) => {\n            setIsLoading(true)\n            setTimeout(() => {\n                for (let prod of response.data) {\n                    if (prod.name) {\n                        initialProducts[prod.id] = {\n                            name: prod.name,\n                            selected: Boolean(+prod.selected)\n                        }\n                    }\n                }\n                setIsLoading(false)\n                console.log(initialProducts)\n            }, 3000)\n        })\n    }, [])\n\n    return (\n        <Widget isLoading={isLoading} toggleClass={toggleClass} checkEmail={checkEmail} setInputValue={setInputValue} inputValue={inputValue}/>\n    )\n}"]},"metadata":{},"sourceType":"module"}