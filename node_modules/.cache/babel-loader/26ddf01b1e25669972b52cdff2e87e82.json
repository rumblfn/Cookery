{"ast":null,"code":"import { ADD_NEW_RECIPE, SET_RECIPES, SET_RECIPES_ALL, CLEAR_REDUCER, STAR_RECIPE } from './actions';\nimport Axios from 'axios';\nconst initialState = {\n  userRecipes: {},\n  recipes: {}\n};\nexport const recipesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case STAR_RECIPE:\n      {\n        switch (action.payload.starred) {\n          case true:\n            {\n              let userRecipeCopy = { ...state.userRecipes\n              };\n              let recipesCopy = { ...state.recipes\n              };\n              const recipeId = action.payload.recipeId;\n\n              if (recipeId in userRecipeCopy) {\n                userRecipeCopy[recipeId].rating -= 1;\n              }\n\n              if (recipeId in recipesCopy) {\n                recipesCopy[recipeId].rating -= 1;\n              }\n\n              return {\n                userRecipes: userRecipeCopy,\n                recipes: recipesCopy\n              };\n            }\n\n          case false:\n            {\n              let userRecipeCopy = { ...state.userRecipes\n              };\n              let recipesCopy = { ...state.recipes\n              };\n              const recipeId = action.payload.recipeId;\n\n              if (recipeId in userRecipeCopy) {\n                userRecipeCopy[recipeId].rating += 1;\n              }\n\n              if (recipeId in recipesCopy) {\n                recipesCopy[recipeId].rating += 1;\n              }\n\n              return {\n                userRecipes: userRecipeCopy,\n                recipes: recipesCopy\n              };\n            }\n\n          default:\n            {\n              return state;\n            }\n        }\n      }\n\n    case SET_RECIPES_ALL:\n      {\n        const settedRecipes = {};\n        Object.values(action.payload).forEach(item => {\n          settedRecipes[item.id] = {\n            comments: JSON.parse(item.comments),\n            cook: JSON.parse(item.cook),\n            description: JSON.parse(item.description),\n            id: item.id,\n            images: JSON.parse(item.images) || [],\n            lstOfProducts: JSON.parse(item.lstOfProducts),\n            products: JSON.parse(item.products),\n            rating: item.rating,\n            time: item.time,\n            title: item.title,\n            userId: item.userId\n          };\n        });\n        return { ...state,\n          recipes: { ...state.recipes,\n            ...settedRecipes\n          }\n        };\n      }\n\n    case SET_RECIPES:\n      {\n        console.log('62str');\n        const settedUserRecipes = {};\n        Object.values(action.payload).forEach(item => {\n          settedUserRecipes[item.id] = {\n            comments: JSON.parse(item.comments),\n            cook: JSON.parse(item.cook),\n            description: JSON.parse(item.description),\n            id: item.id,\n            images: JSON.parse(item.images) || [],\n            lstOfProducts: JSON.parse(item.lstOfProducts),\n            products: JSON.parse(item.products),\n            rating: item.rating,\n            time: item.time,\n            title: item.title,\n            userId: item.userId\n          };\n        });\n        return { ...state,\n          userRecipes: { ...state.userRecipes,\n            ...settedUserRecipes\n          }\n        };\n      }\n\n    case ADD_NEW_RECIPE:\n      {\n        Axios.post('http://localhost:3001/reciepes/insert', { ...action.payload,\n          images: JSON.stringify(action.payload.images)\n        }).then(() => {});\n        return { ...state,\n          userRecipes: { ...state.userRecipes,\n            [action.payload.id]: action.payload\n          },\n          recipes: { ...state.recipes,\n            [action.payload.id]: action.payload\n          }\n        };\n      }\n\n    case CLEAR_REDUCER:\n      {\n        return { ...state,\n          userRecipes: {}\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/store/recipes/reducer.js"],"names":["ADD_NEW_RECIPE","SET_RECIPES","SET_RECIPES_ALL","CLEAR_REDUCER","STAR_RECIPE","Axios","initialState","userRecipes","recipes","recipesReducer","state","action","type","payload","starred","userRecipeCopy","recipesCopy","recipeId","rating","settedRecipes","Object","values","forEach","item","id","comments","JSON","parse","cook","description","images","lstOfProducts","products","time","title","userId","console","log","settedUserRecipes","post","stringify","then"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,EAAsCC,eAAtC,EAAuDC,aAAvD,EAAsEC,WAAtE,QAAyF,WAAzF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,OAAO,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAL;AAAkB;AACd,gBAAQO,MAAM,CAACE,OAAP,CAAeC,OAAvB;AACI,eAAK,IAAL;AAAW;AACP,kBAAIC,cAAc,GAAG,EAAC,GAAGL,KAAK,CAACH;AAAV,eAArB;AACA,kBAAIS,WAAW,GAAG,EAAC,GAAGN,KAAK,CAACF;AAAV,eAAlB;AACA,oBAAMS,QAAQ,GAAGN,MAAM,CAACE,OAAP,CAAeI,QAAhC;;AACA,kBAAIA,QAAQ,IAAIF,cAAhB,EAAgC;AAC5BA,gBAAAA,cAAc,CAACE,QAAD,CAAd,CAAyBC,MAAzB,IAAmC,CAAnC;AACH;;AACD,kBAAID,QAAQ,IAAID,WAAhB,EAA6B;AACzBA,gBAAAA,WAAW,CAACC,QAAD,CAAX,CAAsBC,MAAtB,IAAgC,CAAhC;AACH;;AACD,qBAAO;AAACX,gBAAAA,WAAW,EAAEQ,cAAd;AAA8BP,gBAAAA,OAAO,EAAEQ;AAAvC,eAAP;AACH;;AACD,eAAK,KAAL;AAAY;AACR,kBAAID,cAAc,GAAG,EAAC,GAAGL,KAAK,CAACH;AAAV,eAArB;AACA,kBAAIS,WAAW,GAAG,EAAC,GAAGN,KAAK,CAACF;AAAV,eAAlB;AACA,oBAAMS,QAAQ,GAAGN,MAAM,CAACE,OAAP,CAAeI,QAAhC;;AACA,kBAAIA,QAAQ,IAAIF,cAAhB,EAAgC;AAC5BA,gBAAAA,cAAc,CAACE,QAAD,CAAd,CAAyBC,MAAzB,IAAmC,CAAnC;AACH;;AACD,kBAAID,QAAQ,IAAID,WAAhB,EAA6B;AACzBA,gBAAAA,WAAW,CAACC,QAAD,CAAX,CAAsBC,MAAtB,IAAgC,CAAhC;AACH;;AACD,qBAAO;AAACX,gBAAAA,WAAW,EAAEQ,cAAd;AAA8BP,gBAAAA,OAAO,EAAEQ;AAAvC,eAAP;AACH;;AACD;AAAS;AACL,qBAAON,KAAP;AACH;AA3BL;AA6BH;;AACD,SAAKR,eAAL;AAAsB;AAClB,cAAMiB,aAAa,GAAG,EAAtB;AACAC,QAAAA,MAAM,CAACC,MAAP,CAAcV,MAAM,CAACE,OAArB,EAA8BS,OAA9B,CAAuCC,IAAD,IAAU;AAC5CJ,UAAAA,aAAa,CAACI,IAAI,CAACC,EAAN,CAAb,GAAyB;AACrBC,YAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACE,QAAhB,CADW;AAErBG,YAAAA,IAAI,EAAEF,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACK,IAAhB,CAFe;AAGrBC,YAAAA,WAAW,EAAEH,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACM,WAAhB,CAHQ;AAIrBL,YAAAA,EAAE,EAAED,IAAI,CAACC,EAJY;AAKrBM,YAAAA,MAAM,EAAEJ,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACO,MAAhB,KAA2B,EALd;AAMrBC,YAAAA,aAAa,EAAEL,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACQ,aAAhB,CANM;AAOrBC,YAAAA,QAAQ,EAAEN,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACS,QAAhB,CAPW;AAQrBd,YAAAA,MAAM,EAAEK,IAAI,CAACL,MARQ;AASrBe,YAAAA,IAAI,EAAEV,IAAI,CAACU,IATU;AAUrBC,YAAAA,KAAK,EAAEX,IAAI,CAACW,KAVS;AAWrBC,YAAAA,MAAM,EAAEZ,IAAI,CAACY;AAXQ,WAAzB;AAaH,SAdD;AAeA,eAAO,EAAC,GAAGzB,KAAJ;AAAWF,UAAAA,OAAO,EAAE,EAAC,GAAGE,KAAK,CAACF,OAAV;AAAmB,eAAGW;AAAtB;AAApB,SAAP;AACH;;AACD,SAAKlB,WAAL;AAAkB;AACdmC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,cAAMC,iBAAiB,GAAG,EAA1B;AACAlB,QAAAA,MAAM,CAACC,MAAP,CAAcV,MAAM,CAACE,OAArB,EAA8BS,OAA9B,CAAuCC,IAAD,IAAU;AAC5Ce,UAAAA,iBAAiB,CAACf,IAAI,CAACC,EAAN,CAAjB,GAA6B;AACzBC,YAAAA,QAAQ,EAAEC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACE,QAAhB,CADe;AAEzBG,YAAAA,IAAI,EAAEF,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACK,IAAhB,CAFmB;AAGzBC,YAAAA,WAAW,EAAEH,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACM,WAAhB,CAHY;AAIzBL,YAAAA,EAAE,EAAED,IAAI,CAACC,EAJgB;AAKzBM,YAAAA,MAAM,EAAEJ,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACO,MAAhB,KAA2B,EALV;AAMzBC,YAAAA,aAAa,EAAEL,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACQ,aAAhB,CANU;AAOzBC,YAAAA,QAAQ,EAAEN,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACS,QAAhB,CAPe;AAQzBd,YAAAA,MAAM,EAAEK,IAAI,CAACL,MARY;AASzBe,YAAAA,IAAI,EAAEV,IAAI,CAACU,IATc;AAUzBC,YAAAA,KAAK,EAAEX,IAAI,CAACW,KAVa;AAWzBC,YAAAA,MAAM,EAAEZ,IAAI,CAACY;AAXY,WAA7B;AAaH,SAdD;AAeA,eAAO,EAAC,GAAGzB,KAAJ;AAAWH,UAAAA,WAAW,EAAE,EAAC,GAAGG,KAAK,CAACH,WAAV;AAAuB,eAAG+B;AAA1B;AAAxB,SAAP;AACH;;AACD,SAAKtC,cAAL;AAAqB;AACjBK,QAAAA,KAAK,CAACkC,IAAN,CAAW,uCAAX,EAAoD,EAChD,GAAG5B,MAAM,CAACE,OADsC;AAC7BiB,UAAAA,MAAM,EAAEJ,IAAI,CAACc,SAAL,CAAe7B,MAAM,CAACE,OAAP,CAAeiB,MAA9B;AADqB,SAApD,EAEGW,IAFH,CAEQ,MAAM,CAAE,CAFhB;AAGA,eAAO,EAAC,GAAG/B,KAAJ;AACHH,UAAAA,WAAW,EAAE,EAAC,GAAGG,KAAK,CAACH,WAAV;AAAuB,aAACI,MAAM,CAACE,OAAP,CAAeW,EAAhB,GAAqBb,MAAM,CAACE;AAAnD,WADV;AAEHL,UAAAA,OAAO,EAAE,EAAC,GAAGE,KAAK,CAACF,OAAV;AAAmB,aAACG,MAAM,CAACE,OAAP,CAAeW,EAAhB,GAAqBb,MAAM,CAACE;AAA/C;AAFN,SAAP;AAGH;;AACD,SAAKV,aAAL;AAAoB;AAChB,eAAO,EAAC,GAAGO,KAAJ;AAAWH,UAAAA,WAAW,EAAE;AAAxB,SAAP;AACH;;AACD;AAAS;AACL,eAAOG,KAAP;AACH;AApFL;AAsFH,CAvFM","sourcesContent":["import { ADD_NEW_RECIPE, SET_RECIPES, SET_RECIPES_ALL, CLEAR_REDUCER, STAR_RECIPE } from './actions';\nimport Axios from 'axios';\n\nconst initialState = {\n    userRecipes: {},\n    recipes: {},\n}\n\nexport const recipesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case STAR_RECIPE: {\n            switch (action.payload.starred) {\n                case true: {\n                    let userRecipeCopy = {...state.userRecipes}\n                    let recipesCopy = {...state.recipes}\n                    const recipeId = action.payload.recipeId\n                    if (recipeId in userRecipeCopy) {\n                        userRecipeCopy[recipeId].rating -= 1;\n                    }\n                    if (recipeId in recipesCopy) {\n                        recipesCopy[recipeId].rating -= 1;\n                    }\n                    return {userRecipes: userRecipeCopy, recipes: recipesCopy}\n                }\n                case false: {\n                    let userRecipeCopy = {...state.userRecipes}\n                    let recipesCopy = {...state.recipes}\n                    const recipeId = action.payload.recipeId\n                    if (recipeId in userRecipeCopy) {\n                        userRecipeCopy[recipeId].rating += 1;\n                    }\n                    if (recipeId in recipesCopy) {\n                        recipesCopy[recipeId].rating += 1;\n                    }\n                    return {userRecipes: userRecipeCopy, recipes: recipesCopy}\n                }\n                default: {\n                    return state\n                }\n            }\n        }\n        case SET_RECIPES_ALL: {\n            const settedRecipes = {}\n            Object.values(action.payload).forEach((item) => {\n                settedRecipes[item.id] = {\n                    comments: JSON.parse(item.comments),\n                    cook: JSON.parse(item.cook),\n                    description: JSON.parse(item.description),\n                    id: item.id,\n                    images: JSON.parse(item.images) || [],\n                    lstOfProducts: JSON.parse(item.lstOfProducts),\n                    products: JSON.parse(item.products),\n                    rating: item.rating,\n                    time: item.time,\n                    title: item.title,\n                    userId: item.userId\n                }\n            })\n            return {...state, recipes: {...state.recipes, ...settedRecipes}}\n        }\n        case SET_RECIPES: {\n            console.log('62str')\n            const settedUserRecipes = {}\n            Object.values(action.payload).forEach((item) => {\n                settedUserRecipes[item.id] = {\n                    comments: JSON.parse(item.comments),\n                    cook: JSON.parse(item.cook),\n                    description: JSON.parse(item.description),\n                    id: item.id,\n                    images: JSON.parse(item.images) || [],\n                    lstOfProducts: JSON.parse(item.lstOfProducts),\n                    products: JSON.parse(item.products),\n                    rating: item.rating,\n                    time: item.time,\n                    title: item.title,\n                    userId: item.userId\n                }\n            })\n            return {...state, userRecipes: {...state.userRecipes, ...settedUserRecipes}}\n        }\n        case ADD_NEW_RECIPE: {\n            Axios.post('http://localhost:3001/reciepes/insert', {\n                ...action.payload, images: JSON.stringify(action.payload.images)\n            }).then(() => {})\n            return {...state,\n                userRecipes: {...state.userRecipes, [action.payload.id]: action.payload},\n                recipes: {...state.recipes, [action.payload.id]: action.payload}}\n        }\n        case CLEAR_REDUCER: {\n            return {...state, userRecipes: {}}\n        }\n        default: {\n            return state\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}