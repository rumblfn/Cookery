{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { productsReducer } from './products';\nimport { recipesReducer } from './recipes';\nimport { userReducer } from './user/reducer';\nimport { userRecipeReducer } from './newRecipe/reducer';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\"; // import persistReducer from \"redux-persist/es/persistReducer\";\n// import persistStore from \"redux-persist/es/persistStore\";\n// const persistConfig = {\n//     key: 'root',\n//     storage,\n//     whitelist: ['user']\n// }\n\nconst rootReducer = combineReducers({\n  products: productsReducer,\n  recipes: recipesReducer,\n  user: userReducer,\n  newRecipe: userRecipeReducer\n}); // const persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk))); // export const persistedStore = persistStore(store)","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/local-github/Cookery/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","productsReducer","recipesReducer","userReducer","userRecipeReducer","storage","composeWithDevTools","thunk","rootReducer","products","recipes","user","newRecipe","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGT,eAAe,CAAC;AAChCU,EAAAA,QAAQ,EAAER,eADsB;AAEhCS,EAAAA,OAAO,EAAER,cAFuB;AAGhCS,EAAAA,IAAI,EAAER,WAH0B;AAIhCS,EAAAA,SAAS,EAAER;AAJqB,CAAD,CAAnC,C,CAOA;;AAEA,OAAO,MAAMS,KAAK,GAAGf,WAAW,CAC5BU,WAD4B,EAE5BF,mBAAmB,CAACN,eAAe,CAACO,KAAD,CAAhB,CAFS,CAAzB,C,CAKP","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { productsReducer } from './products';\nimport { recipesReducer } from './recipes';\nimport { userReducer } from './user/reducer';\nimport { userRecipeReducer } from './newRecipe/reducer';\nimport storage from 'redux-persist/lib/storage';\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n// import persistReducer from \"redux-persist/es/persistReducer\";\n// import persistStore from \"redux-persist/es/persistStore\";\n\n// const persistConfig = {\n//     key: 'root',\n//     storage,\n//     whitelist: ['user']\n// }\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    recipes: recipesReducer,\n    user: userReducer,\n    newRecipe: userRecipeReducer,\n})\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\n// export const persistedStore = persistStore(store)"]},"metadata":{},"sourceType":"module"}