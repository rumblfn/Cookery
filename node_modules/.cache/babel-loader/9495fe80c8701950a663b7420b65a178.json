{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import{productsReducer}from'./products';import{recipesReducer}from'./recipes';import{userReducer}from'./user/reducer';import{userRecipeReducer}from'./newRecipe/reducer';import storage from'redux-persist/lib/storage';import{composeWithDevTools}from\"redux-devtools-extension\";import thunk from\"redux-thunk\";// import persistReducer from \"redux-persist/es/persistReducer\";\n// import persistStore from \"redux-persist/es/persistStore\";\n// const persistConfig = {\n//     key: 'root',\n//     storage,\n//     whitelist: ['user']\n// }\nvar rootReducer=combineReducers({products:productsReducer,recipes:recipesReducer,user:userReducer,newRecipe:userRecipeReducer});// const persistedReducer = persistReducer(persistConfig, rootReducer)\nexport var store=createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)));// export const persistedStore = persistStore(store)","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/local-github/cookkery/client/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","productsReducer","recipesReducer","userReducer","userRecipeReducer","storage","composeWithDevTools","thunk","rootReducer","products","recipes","user","newRecipe","store"],"mappings":"AAAA,OAAQA,WAAR,CAAqBC,eAArB,CAAsCC,eAAtC,KAA4D,OAA5D,CACA,OAASC,eAAT,KAAgC,YAAhC,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,iBAAT,KAAkC,qBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAAQC,mBAAR,KAAkC,0BAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,WAAW,CAAGT,eAAe,CAAC,CAChCU,QAAQ,CAAER,eADsB,CAEhCS,OAAO,CAAER,cAFuB,CAGhCS,IAAI,CAAER,WAH0B,CAIhCS,SAAS,CAAER,iBAJqB,CAAD,CAAnC,CAOA;AAEA,MAAO,IAAMS,CAAAA,KAAK,CAAGf,WAAW,CAC5BU,WAD4B,CAE5BF,mBAAmB,CAACN,eAAe,CAACO,KAAD,CAAhB,CAFS,CAAzB,CAKP","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { productsReducer } from './products';\nimport { recipesReducer } from './recipes';\nimport { userReducer } from './user/reducer';\nimport { userRecipeReducer } from './newRecipe/reducer';\nimport storage from 'redux-persist/lib/storage';\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n// import persistReducer from \"redux-persist/es/persistReducer\";\n// import persistStore from \"redux-persist/es/persistStore\";\n\n// const persistConfig = {\n//     key: 'root',\n//     storage,\n//     whitelist: ['user']\n// }\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    recipes: recipesReducer,\n    user: userReducer,\n    newRecipe: userRecipeReducer,\n})\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n)\n\n// export const persistedStore = persistStore(store)"]},"metadata":{},"sourceType":"module"}