{"ast":null,"code":"import { TOGGLE_SELECTED_STATE } from './actions';\nimport { FILTER_PRODUCTS } from './actions';\nconst initialState = {\n  products: {\n    1: {\n      name: 'яблоко',\n      selected: false\n    },\n    2: {\n      name: 'орехи',\n      selected: false\n    },\n    3: {\n      name: 'печенье',\n      selected: false\n    }\n  },\n  selectedProducts: {}\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FILTER_PRODUCTS:\n      {\n        const newProducts = {};\n\n        for (let item in initialState.products) {\n          if (initialState.products[item].name.includes(action.payload)) {\n            newProducts[item] = initialState.products[item];\n          }\n        }\n\n        return { ...state,\n          products: { ...newProducts\n          }\n        };\n      }\n\n    case TOGGLE_SELECTED_STATE:\n      {\n        const prods = { ...state.products\n        };\n        prods[action.payload].selected = !prods[action.payload].selected;\n        const newSelectedProducts = {};\n\n        for (let item in initialState.products) {\n          if (initialState.products[item].selected) {\n            newSelectedProducts[item] = initialState.products[item];\n          }\n        }\n\n        console.log(newSelectedProducts);\n        return { ...state,\n          products: prods,\n          selectedProducts: newSelectedProducts\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main-app/src/store/products/reducer.js"],"names":["TOGGLE_SELECTED_STATE","FILTER_PRODUCTS","initialState","products","name","selected","selectedProducts","productsReducer","state","action","type","newProducts","item","includes","payload","prods","newSelectedProducts","console","log"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,WAAtC;AACA,SAASC,eAAT,QAAgC,WAAhC;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AACN,OAAG;AACCC,MAAAA,IAAI,EAAE,QADP;AAECC,MAAAA,QAAQ,EAAE;AAFX,KADG;AAKN,OAAG;AACCD,MAAAA,IAAI,EAAE,OADP;AAECC,MAAAA,QAAQ,EAAE;AAFX,KALG;AASN,OAAG;AACCD,MAAAA,IAAI,EAAE,SADP;AAECC,MAAAA,QAAQ,EAAE;AAFX;AATG,GADO;AAejBC,EAAAA,gBAAgB,EAAE;AAfD,CAArB;AAkBA,OAAO,MAAMC,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAL;AAAsB;AAClB,cAAMU,WAAW,GAAG,EAApB;;AACA,aAAK,IAAIC,IAAT,IAAiBV,YAAY,CAACC,QAA9B,EAAwC;AACpC,cAAID,YAAY,CAACC,QAAb,CAAsBS,IAAtB,EAA4BR,IAA5B,CAAiCS,QAAjC,CAA0CJ,MAAM,CAACK,OAAjD,CAAJ,EAA+D;AAC3DH,YAAAA,WAAW,CAACC,IAAD,CAAX,GAAoBV,YAAY,CAACC,QAAb,CAAsBS,IAAtB,CAApB;AACH;AACJ;;AACD,eAAO,EACH,GAAGJ,KADA;AAEHL,UAAAA,QAAQ,EAAE,EACN,GAAGQ;AADG;AAFP,SAAP;AAMH;;AACD,SAAKX,qBAAL;AAA4B;AACxB,cAAMe,KAAK,GAAG,EAAC,GAAGP,KAAK,CAACL;AAAV,SAAd;AACAY,QAAAA,KAAK,CAACN,MAAM,CAACK,OAAR,CAAL,CAAsBT,QAAtB,GAAiC,CAACU,KAAK,CAACN,MAAM,CAACK,OAAR,CAAL,CAAsBT,QAAxD;AAEA,cAAMW,mBAAmB,GAAG,EAA5B;;AACA,aAAK,IAAIJ,IAAT,IAAiBV,YAAY,CAACC,QAA9B,EAAwC;AACpC,cAAID,YAAY,CAACC,QAAb,CAAsBS,IAAtB,EAA4BP,QAAhC,EAA0C;AACtCW,YAAAA,mBAAmB,CAACJ,IAAD,CAAnB,GAA4BV,YAAY,CAACC,QAAb,CAAsBS,IAAtB,CAA5B;AACH;AACJ;;AACDK,QAAAA,OAAO,CAACC,GAAR,CAAYF,mBAAZ;AAEA,eAAO,EACH,GAAGR,KADA;AAEHL,UAAAA,QAAQ,EAAEY,KAFP;AAGHT,UAAAA,gBAAgB,EAAEU;AAHf,SAAP;AAKH;;AACD;AAAS;AACL,eAAOR,KAAP;AACH;AAnCL;AAqCH,CAtCM","sourcesContent":["import { TOGGLE_SELECTED_STATE } from './actions';\nimport { FILTER_PRODUCTS } from './actions';\n\n\nconst initialState = {\n    products: {\n        1: {\n            name: 'яблоко',\n            selected: false\n        },\n        2: {\n            name: 'орехи',\n            selected: false\n        },\n        3: {\n            name: 'печенье',\n            selected: false\n        },\n    },\n    selectedProducts: {}\n}\n\nexport const productsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FILTER_PRODUCTS: {\n            const newProducts = {}\n            for (let item in initialState.products) {\n                if (initialState.products[item].name.includes(action.payload)) {\n                    newProducts[item] = initialState.products[item]\n                }\n            }\n            return {\n                ...state,\n                products: {\n                    ...newProducts\n                }\n            }\n        }\n        case TOGGLE_SELECTED_STATE: {\n            const prods = {...state.products}\n            prods[action.payload].selected = !prods[action.payload].selected\n\n            const newSelectedProducts = {}\n            for (let item in initialState.products) {\n                if (initialState.products[item].selected) {\n                    newSelectedProducts[item] = initialState.products[item]\n                }\n            }\n            console.log(newSelectedProducts)\n\n            return {\n                ...state,\n                products: prods,\n                selectedProducts: newSelectedProducts\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}