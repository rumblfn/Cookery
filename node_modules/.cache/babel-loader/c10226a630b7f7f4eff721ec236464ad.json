{"ast":null,"code":"import { ADD_NEW_RECIPE, SET_RECIPES, SET_RECIPES_ALL, CLEAR_REDUCER, STAR_RECIPE, SET_STARRED_RECIPES } from './actions';\nimport Axios from 'axios';\nimport { nanoid } from 'nanoid';\nconst initialState = {\n  userRecipes: {},\n  recipes: {},\n  starred_recipes: {}\n};\nexport const recipesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case STAR_RECIPE:\n      {\n        switch (action.payload.starred) {\n          case true:\n            {\n              let userRecipeCopy = { ...state.userRecipes\n              };\n              let recipesCopy = { ...state.recipes\n              };\n              const recipeId = action.payload.recipeId;\n\n              if (recipeId in userRecipeCopy) {\n                userRecipeCopy[recipeId].rating -= 1;\n              }\n\n              if (recipeId in recipesCopy) {\n                recipesCopy[recipeId].rating -= 1;\n              }\n\n              return { ...state,\n                userRecipes: userRecipeCopy,\n                recipes: recipesCopy\n              };\n            }\n\n          case false:\n            {\n              let userRecipeCopy = { ...state.userRecipes\n              };\n              let recipesCopy = { ...state.recipes\n              };\n              const recipeId = action.payload.recipeId;\n\n              if (recipeId in userRecipeCopy) {\n                userRecipeCopy[recipeId].rating += 1;\n              }\n\n              if (recipeId in recipesCopy) {\n                recipesCopy[recipeId].rating += 1;\n              }\n\n              return { ...state,\n                userRecipes: userRecipeCopy,\n                recipes: recipesCopy\n              };\n            }\n\n          default:\n            {\n              return state;\n            }\n        }\n      }\n\n    case SET_RECIPES_ALL:\n      {\n        const settedRecipes = {};\n        action.payload.forEach(item => {\n          settedRecipes[item.id] = {\n            comments: JSON.parse(item.comments),\n            cook: JSON.parse(item.cook),\n            description: JSON.parse(item.description),\n            id: item.id,\n            images: JSON.parse(item.images) || [],\n            lstOfProducts: JSON.parse(item.lstOfProducts),\n            products: JSON.parse(item.products),\n            rating: item.rating,\n            time: item.time,\n            title: item.title,\n            userId: item.userId\n          };\n        });\n        return { ...state,\n          recipes: { ...state.recipes,\n            ...settedRecipes\n          }\n        };\n      }\n\n    case SET_STARRED_RECIPES:\n      {\n        const settedUserStarredRecipes = {};\n\n        if (action.payload) {\n          action.payload.forEach(item => {\n            settedUserStarredRecipes[item.id] = {\n              comments: JSON.parse(item.comments),\n              cook: JSON.parse(item.cook),\n              description: JSON.parse(item.description),\n              id: item.id,\n              images: JSON.parse(item.images) || {},\n              lstOfProducts: JSON.parse(item.lstOfProducts),\n              products: JSON.parse(item.products),\n              rating: item.rating,\n              time: item.time,\n              title: item.title,\n              userId: item.userId\n            };\n          });\n          return { ...state,\n            starred_recipes: { ...settedUserStarredRecipes\n            }\n          };\n        }\n\n        return state;\n      }\n\n    case SET_RECIPES:\n      {\n        const settedUserRecipes = {};\n        action.payload.forEach(item => {\n          settedUserRecipes[item.id] = {\n            comments: JSON.parse(item.comments),\n            cook: JSON.parse(item.cook),\n            description: JSON.parse(item.description),\n            id: item.id,\n            images: JSON.parse(item.images) || {},\n            lstOfProducts: JSON.parse(item.lstOfProducts),\n            products: JSON.parse(item.products),\n            rating: item.rating,\n            time: item.time,\n            title: item.title,\n            userId: item.userId\n          };\n        });\n        return { ...state,\n          userRecipes: { ...state.userRecipes,\n            ...settedUserRecipes\n          }\n        };\n      }\n\n    case ADD_NEW_RECIPE:\n      {\n        const images = [];\n        Object.keys(action.payload.images).forEach(item => {\n          console.log(key);\n          images.push(`${nanoid(8)}${key}`);\n        });\n        console.log(images);\n        Axios.post('/reciepes/insert', { ...action.payload,\n          images: JSON.stringify(images)\n        }).then(res => {\n          if (res) {}\n        });\n        return { ...state,\n          userRecipes: { ...state.userRecipes,\n            [action.payload.id]: { ...action.payload,\n              images: [...images]\n            }\n          }\n        };\n      }\n\n    case CLEAR_REDUCER:\n      {\n        return { ...state,\n          userRecipes: {}\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/store/recipes/reducer.js"],"names":["ADD_NEW_RECIPE","SET_RECIPES","SET_RECIPES_ALL","CLEAR_REDUCER","STAR_RECIPE","SET_STARRED_RECIPES","Axios","nanoid","initialState","userRecipes","recipes","starred_recipes","recipesReducer","state","action","type","payload","starred","userRecipeCopy","recipesCopy","recipeId","rating","settedRecipes","forEach","item","id","comments","JSON","parse","cook","description","images","lstOfProducts","products","time","title","userId","settedUserStarredRecipes","settedUserRecipes","Object","keys","console","log","key","push","post","stringify","then","res"],"mappings":"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","sourcesContent":["import { ADD_NEW_RECIPE, SET_RECIPES, SET_RECIPES_ALL, CLEAR_REDUCER, STAR_RECIPE, SET_STARRED_RECIPES } from './actions';\nimport Axios from 'axios';\nimport { nanoid } from 'nanoid'\n\nconst initialState = {\n    userRecipes: {},\n    recipes: {},\n    starred_recipes: {},\n}\n\nexport const recipesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case STAR_RECIPE: {\n            switch (action.payload.starred) {\n                case true: {\n                    let userRecipeCopy = {...state.userRecipes}\n                    let recipesCopy = {...state.recipes}\n                    const recipeId = action.payload.recipeId\n                    if (recipeId in userRecipeCopy) {\n                        userRecipeCopy[recipeId].rating -= 1;\n                    }\n                    if (recipeId in recipesCopy) {\n                        recipesCopy[recipeId].rating -= 1;\n                    }\n                    return {...state, userRecipes: userRecipeCopy, recipes: recipesCopy}\n                }\n                case false: {\n                    let userRecipeCopy = {...state.userRecipes}\n                    let recipesCopy = {...state.recipes}\n                    const recipeId = action.payload.recipeId\n                    if (recipeId in userRecipeCopy) {\n                        userRecipeCopy[recipeId].rating += 1;\n                    }\n                    if (recipeId in recipesCopy) {\n                        recipesCopy[recipeId].rating += 1;\n                    }\n                    return {...state, userRecipes: userRecipeCopy, recipes: recipesCopy}\n                }\n                default: {\n                    return state\n                }\n            }\n        }\n        case SET_RECIPES_ALL: {\n            const settedRecipes = {}\n            action.payload.forEach((item) => {\n                settedRecipes[item.id] = {\n                    comments: JSON.parse(item.comments),\n                    cook: JSON.parse(item.cook),\n                    description: JSON.parse(item.description),\n                    id: item.id,\n                    images: JSON.parse(item.images) || [],\n                    lstOfProducts: JSON.parse(item.lstOfProducts),\n                    products: JSON.parse(item.products),\n                    rating: item.rating,\n                    time: item.time,\n                    title: item.title,\n                    userId: item.userId\n                }\n            })\n            return {...state, recipes: {...state.recipes, ...settedRecipes}}\n        }\n        case SET_STARRED_RECIPES: {\n            const settedUserStarredRecipes = {}\n            if (action.payload) {\n                action.payload.forEach((item) => {\n                    settedUserStarredRecipes[item.id] = {\n                        comments: JSON.parse(item.comments),\n                        cook: JSON.parse(item.cook),\n                        description: JSON.parse(item.description),\n                        id: item.id,\n                        images: JSON.parse(item.images) || {},\n                        lstOfProducts: JSON.parse(item.lstOfProducts),\n                        products: JSON.parse(item.products),\n                        rating: item.rating,\n                        time: item.time,\n                        title: item.title,\n                        userId: item.userId\n                    }\n                })\n                return {...state, starred_recipes: {...settedUserStarredRecipes}}\n            }\n            return state\n        }\n        case SET_RECIPES: {\n            const settedUserRecipes = {}\n            action.payload.forEach((item) => {\n                settedUserRecipes[item.id] = {\n                    comments: JSON.parse(item.comments),\n                    cook: JSON.parse(item.cook),\n                    description: JSON.parse(item.description),\n                    id: item.id,\n                    images: JSON.parse(item.images) || {},\n                    lstOfProducts: JSON.parse(item.lstOfProducts),\n                    products: JSON.parse(item.products),\n                    rating: item.rating,\n                    time: item.time,\n                    title: item.title,\n                    userId: item.userId\n                }\n            })\n            return {...state, userRecipes: {...state.userRecipes, ...settedUserRecipes}}\n        }\n        case ADD_NEW_RECIPE: {\n            const images = []\n            Object.keys(action.payload.images).forEach(item => {\n                console.log(key)\n                images.push(`${nanoid(8)}${key}`)\n            })\n            console.log(images)\n            Axios.post('/reciepes/insert', {\n                ...action.payload, images: JSON.stringify(images)\n            }).then((res) => {\n                if (res) {\n\n                }\n            })\n            return {\n                ...state,\n                userRecipes: {...state.userRecipes, [action.payload.id]: {...action.payload, images: [...images]}}\n            }\n        }\n        case CLEAR_REDUCER: {\n            return {...state, userRecipes: {}}\n        }\n        default: {\n            return state\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}