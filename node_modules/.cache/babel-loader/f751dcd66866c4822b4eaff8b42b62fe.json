{"ast":null,"code":"import { TOGGLE_SELECTED_STATE } from './actions';\nimport { FILTER_PRODUCTS } from './actions';\nimport { ADD_ALL_PRODUCTS } from './actions';\nconst initialState = {\n  products: {},\n  initialProducts: {},\n  selectedProducts: {},\n  selectedProductsNames: []\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ALL_PRODUCTS:\n      {\n        return { ...state,\n          products: { ...state.products,\n            ...action.payload\n          },\n          initialProducts: { ...state.products,\n            ...action.payload\n          }\n        };\n      }\n\n    case FILTER_PRODUCTS:\n      {\n        const newProducts = {};\n        console.log(initialState);\n\n        for (let item in initialState.initialProducts) {\n          if (initialState.initialProducts[item].name.includes(action.payload)) {\n            newProducts[item] = initialState.initialProducts[item];\n          }\n        }\n\n        return { ...state,\n          products: { ...newProducts\n          }\n        };\n      }\n\n    case TOGGLE_SELECTED_STATE:\n      {\n        const prods = { ...initialState.products\n        };\n        prods[action.payload].selected = !prods[action.payload].selected;\n        const newSelectedProducts = {};\n        const newSelectedProductsNames = [];\n\n        for (let item in initialState.products) {\n          if (initialState.products[item].selected) {\n            newSelectedProducts[item] = initialState.products[item];\n            newSelectedProductsNames.push(initialState.products[item].name);\n          }\n        }\n\n        return { ...state,\n          products: prods,\n          selectedProducts: newSelectedProducts,\n          selectedProductsNames: newSelectedProductsNames\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/store/products/reducer.js"],"names":["TOGGLE_SELECTED_STATE","FILTER_PRODUCTS","ADD_ALL_PRODUCTS","initialState","products","initialProducts","selectedProducts","selectedProductsNames","productsReducer","state","action","type","payload","newProducts","console","log","item","name","includes","prods","selected","newSelectedProducts","newSelectedProductsNames","push"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,WAAtC;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,eAAe,EAAE,EAFA;AAGjBC,EAAAA,gBAAgB,EAAE,EAHD;AAIjBC,EAAAA,qBAAqB,EAAE;AAJN,CAArB;AAOA,OAAO,MAAMC,eAAe,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGO,KADA;AAEHL,UAAAA,QAAQ,EAAE,EAAC,GAAGK,KAAK,CAACL,QAAV;AAAoB,eAAGM,MAAM,CAACE;AAA9B,WAFP;AAGHP,UAAAA,eAAe,EAAE,EAAC,GAAGI,KAAK,CAACL,QAAV;AAAoB,eAAGM,MAAM,CAACE;AAA9B;AAHd,SAAP;AAKH;;AACD,SAAKX,eAAL;AAAsB;AAClB,cAAMY,WAAW,GAAG,EAApB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;;AACA,aAAK,IAAIa,IAAT,IAAiBb,YAAY,CAACE,eAA9B,EAA+C;AAC3C,cAAIF,YAAY,CAACE,eAAb,CAA6BW,IAA7B,EAAmCC,IAAnC,CAAwCC,QAAxC,CAAiDR,MAAM,CAACE,OAAxD,CAAJ,EAAsE;AAClEC,YAAAA,WAAW,CAACG,IAAD,CAAX,GAAoBb,YAAY,CAACE,eAAb,CAA6BW,IAA7B,CAApB;AACH;AACJ;;AACD,eAAO,EACH,GAAGP,KADA;AAEHL,UAAAA,QAAQ,EAAE,EACN,GAAGS;AADG;AAFP,SAAP;AAMH;;AACD,SAAKb,qBAAL;AAA4B;AACxB,cAAMmB,KAAK,GAAG,EAAC,GAAGhB,YAAY,CAACC;AAAjB,SAAd;AACAe,QAAAA,KAAK,CAACT,MAAM,CAACE,OAAR,CAAL,CAAsBQ,QAAtB,GAAiC,CAACD,KAAK,CAACT,MAAM,CAACE,OAAR,CAAL,CAAsBQ,QAAxD;AAEA,cAAMC,mBAAmB,GAAG,EAA5B;AACA,cAAMC,wBAAwB,GAAG,EAAjC;;AACA,aAAK,IAAIN,IAAT,IAAiBb,YAAY,CAACC,QAA9B,EAAwC;AACpC,cAAID,YAAY,CAACC,QAAb,CAAsBY,IAAtB,EAA4BI,QAAhC,EAA0C;AACtCC,YAAAA,mBAAmB,CAACL,IAAD,CAAnB,GAA4Bb,YAAY,CAACC,QAAb,CAAsBY,IAAtB,CAA5B;AACAM,YAAAA,wBAAwB,CAACC,IAAzB,CAA8BpB,YAAY,CAACC,QAAb,CAAsBY,IAAtB,EAA4BC,IAA1D;AACH;AACJ;;AAED,eAAO,EACH,GAAGR,KADA;AAEHL,UAAAA,QAAQ,EAAEe,KAFP;AAGHb,UAAAA,gBAAgB,EAAEe,mBAHf;AAIHd,UAAAA,qBAAqB,EAAEe;AAJpB,SAAP;AAMH;;AACD;AAAS;AACL,eAAOb,KAAP;AACH;AA7CL;AA+CH,CAhDM","sourcesContent":["import { TOGGLE_SELECTED_STATE } from './actions';\nimport { FILTER_PRODUCTS } from './actions';\nimport { ADD_ALL_PRODUCTS } from './actions';\n\nconst initialState = {\n    products: {},\n    initialProducts: {},\n    selectedProducts: {},\n    selectedProductsNames: []\n}\n\nexport const productsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALL_PRODUCTS: {\n            return {\n                ...state, \n                products: {...state.products, ...action.payload}, \n                initialProducts: {...state.products, ...action.payload},\n            }\n        }\n        case FILTER_PRODUCTS: {\n            const newProducts = {}\n            console.log(initialState)\n            for (let item in initialState.initialProducts) {\n                if (initialState.initialProducts[item].name.includes(action.payload)) {\n                    newProducts[item] = initialState.initialProducts[item]\n                }\n            }\n            return {\n                ...state,\n                products: {\n                    ...newProducts\n                }\n            }\n        }\n        case TOGGLE_SELECTED_STATE: {\n            const prods = {...initialState.products}\n            prods[action.payload].selected = !prods[action.payload].selected\n\n            const newSelectedProducts = {}\n            const newSelectedProductsNames = []\n            for (let item in initialState.products) {\n                if (initialState.products[item].selected) {\n                    newSelectedProducts[item] = initialState.products[item]\n                    newSelectedProductsNames.push(initialState.products[item].name)\n                }\n            }\n\n            return {\n                ...state,\n                products: prods,\n                selectedProducts: newSelectedProducts,\n                selectedProductsNames: newSelectedProductsNames\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}