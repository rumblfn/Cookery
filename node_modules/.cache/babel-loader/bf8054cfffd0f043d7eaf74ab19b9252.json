{"ast":null,"code":"var util = require('../util');\n\nfunction JsonParser() {}\n\nJsonParser.prototype.parse = function (value, shape) {\n  return translate(JSON.parse(value), shape);\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined) return undefined;\n\n  switch (shape.type) {\n    case 'structure':\n      return translateStructure(value, shape);\n\n    case 'map':\n      return translateMap(value, shape);\n\n    case 'list':\n      return translateList(value, shape);\n\n    default:\n      return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  if (structure == null) return undefined;\n  if (shape.isDocument) return structure;\n  var struct = {};\n  var shapeMembers = shape.members;\n  util.each(shapeMembers, function (name, memberShape) {\n    var locationName = memberShape.isLocationName ? memberShape.name : name;\n\n    if (Object.prototype.hasOwnProperty.call(structure, locationName)) {\n      var value = structure[locationName];\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  if (list == null) return undefined;\n  var out = [];\n  util.arrayEach(list, function (value) {\n    var result = translate(value, shape.member);\n    if (result === undefined) out.push(null);else out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  if (map == null) return undefined;\n  var out = {};\n  util.each(map, function (key, value) {\n    var result = translate(value, shape.value);\n    if (result === undefined) out[key] = null;else out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toType(value);\n}\n/**\n * @api private\n */\n\n\nmodule.exports = JsonParser;","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/node_modules/aws-sdk/lib/json/parser.js"],"names":["util","require","JsonParser","prototype","parse","value","shape","translate","JSON","undefined","type","translateStructure","translateMap","translateList","translateScalar","structure","isDocument","struct","shapeMembers","members","each","name","memberShape","locationName","isLocationName","Object","hasOwnProperty","call","result","list","out","arrayEach","member","push","map","key","toType","module","exports"],"mappings":"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","sourcesContent":["var util = require('../util');\n\nfunction JsonParser() { }\n\nJsonParser.prototype.parse = function(value, shape) {\n  return translate(JSON.parse(value), shape);\n};\n\nfunction translate(value, shape) {\n  if (!shape || value === undefined) return undefined;\n\n  switch (shape.type) {\n    case 'structure': return translateStructure(value, shape);\n    case 'map': return translateMap(value, shape);\n    case 'list': return translateList(value, shape);\n    default: return translateScalar(value, shape);\n  }\n}\n\nfunction translateStructure(structure, shape) {\n  if (structure == null) return undefined;\n  if (shape.isDocument) return structure;\n\n  var struct = {};\n  var shapeMembers = shape.members;\n  util.each(shapeMembers, function(name, memberShape) {\n    var locationName = memberShape.isLocationName ? memberShape.name : name;\n    if (Object.prototype.hasOwnProperty.call(structure, locationName)) {\n      var value = structure[locationName];\n      var result = translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n}\n\nfunction translateList(list, shape) {\n  if (list == null) return undefined;\n\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = translate(value, shape.member);\n    if (result === undefined) out.push(null);\n    else out.push(result);\n  });\n  return out;\n}\n\nfunction translateMap(map, shape) {\n  if (map == null) return undefined;\n\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = translate(value, shape.value);\n    if (result === undefined) out[key] = null;\n    else out[key] = result;\n  });\n  return out;\n}\n\nfunction translateScalar(value, shape) {\n  return shape.toType(value);\n}\n\n/**\n * @api private\n */\nmodule.exports = JsonParser;\n"]},"metadata":{},"sourceType":"script"}