{"ast":null,"code":"import { ADD_NEW_RECIPE, SET_RECIPES, SET_RECIPES_ALL, CLEAR_REDUCER, STAR_RECIPE } from './actions';\nimport Axios from 'axios';\nconst initialState = {\n  userRecipes: [],\n  recipes: []\n};\nexport const recipesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case STAR_RECIPE:\n      {\n        switch (action.payload.starred) {\n          case true:\n            {\n              let userRecipeCopy = [...state.userRecipes];\n              let recipesCopy = [...state.recipes];\n              let foundIndex = userRecipeCopy.findIndex(x => x.id == action.payload.recipeId);\n\n              if (foundIndex > -1) {\n                userRecipeCopy[foundIndex].rating -= 1;\n              }\n\n              foundIndex = recipesCopy.findIndex(x => x.id == action.payload.recipeId);\n\n              if (foundIndex > -1) {\n                recipesCopy[foundIndex].rating -= 1;\n              }\n\n              return {\n                userRecipes: userRecipeCopy,\n                recipes: recipesCopy\n              };\n            }\n\n          case false:\n            {\n              let userRecipeCopy = [...state.userRecipes];\n              let recipesCopy = [...state.recipes];\n              let foundIndex = userRecipeCopy.findIndex(x => x.id == action.payload.recipeId);\n\n              if (foundIndex > -1) {\n                userRecipeCopy[foundIndex].rating += 1;\n              }\n\n              foundIndex = recipesCopy.findIndex(x => x.id == action.payload.recipeId);\n\n              if (foundIndex > -1) {\n                recipesCopy[foundIndex].rating += 1;\n              }\n\n              return {\n                userRecipes: userRecipeCopy,\n                recipes: recipesCopy\n              };\n            }\n\n          default:\n            {\n              return state;\n            }\n        }\n      }\n\n    case SET_RECIPES_ALL:\n      {\n        const settedRecipes = [];\n        Object.values(action.payload).forEach(item => {\n          settedRecipes.push({\n            comments: JSON.parse(item.comments),\n            cook: JSON.parse(item.cook),\n            description: JSON.parse(item.description),\n            id: item.id,\n            images: item.images || [],\n            lstOfProducts: JSON.parse(item.lstOfProducts),\n            products: JSON.parse(item.products),\n            rating: item.rating,\n            time: item.time,\n            title: item.title,\n            userId: item.userId\n          });\n        });\n        return { ...state,\n          recipes: [...state.recipes, ...settedRecipes]\n        };\n      }\n\n    case SET_RECIPES:\n      {\n        const settedUserRecipes = [];\n        Object.values(action.payload).forEach(item => {\n          settedUserRecipes.push({\n            comments: JSON.parse(item.comments),\n            cook: JSON.parse(item.cook),\n            description: JSON.parse(item.description),\n            id: item.id,\n            images: item.images || [],\n            lstOfProducts: JSON.parse(item.lstOfProducts),\n            products: JSON.parse(item.products),\n            rating: item.rating,\n            time: item.time,\n            title: item.title,\n            userId: item.userId\n          });\n        });\n        return { ...state,\n          userRecipes: [...settedUserRecipes]\n        };\n      }\n\n    case ADD_NEW_RECIPE:\n      {\n        Axios.post('http://localhost:3001/reciepes/insert', { ...action.payload\n        }).then(() => {});\n        return { ...state,\n          userRecipes: [...state.userRecipes, action.payload],\n          recipes: [...state.recipes, action.payload]\n        };\n      }\n\n    case CLEAR_REDUCER:\n      {\n        return { ...state,\n          userRecipes: []\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/store/recipes/reducer.js"],"names":["ADD_NEW_RECIPE","SET_RECIPES","SET_RECIPES_ALL","CLEAR_REDUCER","STAR_RECIPE","Axios","initialState","userRecipes","recipes","recipesReducer","state","action","type","payload","starred","userRecipeCopy","recipesCopy","foundIndex","findIndex","x","id","recipeId","rating","settedRecipes","Object","values","forEach","item","push","comments","JSON","parse","cook","description","images","lstOfProducts","products","time","title","userId","settedUserRecipes","post","then"],"mappings":"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","sourcesContent":["import { ADD_NEW_RECIPE, SET_RECIPES, SET_RECIPES_ALL, CLEAR_REDUCER, STAR_RECIPE } from './actions';\nimport Axios from 'axios';\n\nconst initialState = {\n    userRecipes: [],\n    recipes: [],\n}\n\nexport const recipesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case STAR_RECIPE: {\n            switch (action.payload.starred) {\n                case true: {\n                    let userRecipeCopy = [...state.userRecipes]\n                    let recipesCopy = [...state.recipes]\n                    let foundIndex = userRecipeCopy.findIndex(x => x.id == action.payload.recipeId);\n                    if (foundIndex > -1) {\n                        userRecipeCopy[foundIndex].rating -= 1;\n                    }\n                    foundIndex = recipesCopy.findIndex(x => x.id == action.payload.recipeId);\n                    if (foundIndex > -1) {\n                        recipesCopy[foundIndex].rating -= 1;\n                    }\n                    return {userRecipes: userRecipeCopy, recipes: recipesCopy}\n                }\n                case false: {\n                    let userRecipeCopy = [...state.userRecipes]\n                    let recipesCopy = [...state.recipes]\n                    let foundIndex = userRecipeCopy.findIndex(x => x.id == action.payload.recipeId);\n                    if (foundIndex > -1) {\n                        userRecipeCopy[foundIndex].rating += 1;\n                    }\n                    foundIndex = recipesCopy.findIndex(x => x.id == action.payload.recipeId);\n                    if (foundIndex > -1) {\n                        recipesCopy[foundIndex].rating += 1;\n                    }\n                    return {userRecipes: userRecipeCopy, recipes: recipesCopy}\n                }\n                default: {\n                    return state\n                }\n            }\n        }\n        case SET_RECIPES_ALL: {\n            const settedRecipes = []\n            Object.values(action.payload).forEach((item) => {\n                settedRecipes.push(\n                    {\n                        comments: JSON.parse(item.comments),\n                        cook: JSON.parse(item.cook),\n                        description: JSON.parse(item.description),\n                        id: item.id,\n                        images: item.images || [],\n                        lstOfProducts: JSON.parse(item.lstOfProducts),\n                        products: JSON.parse(item.products),\n                        rating: item.rating,\n                        time: item.time,\n                        title: item.title,\n                        userId: item.userId\n                    }\n                )\n            })\n            return {...state, recipes: [...state.recipes, ...settedRecipes]}\n        }\n        case SET_RECIPES: {\n            const settedUserRecipes = []\n            Object.values(action.payload).forEach((item) => {\n                settedUserRecipes.push(\n                    {\n                        comments: JSON.parse(item.comments),\n                        cook: JSON.parse(item.cook),\n                        description: JSON.parse(item.description),\n                        id: item.id,\n                        images: item.images || [],\n                        lstOfProducts: JSON.parse(item.lstOfProducts),\n                        products: JSON.parse(item.products),\n                        rating: item.rating,\n                        time: item.time,\n                        title: item.title,\n                        userId: item.userId\n                    }\n                )\n            })\n            return {...state, userRecipes: [...settedUserRecipes]}\n        }\n        case ADD_NEW_RECIPE: {\n            Axios.post('http://localhost:3001/reciepes/insert', {\n                ...action.payload\n            }).then(() => {})\n            return {\n                ...state,\n                userRecipes: [...state.userRecipes, action.payload],\n                recipes: [...state.recipes, action.payload]\n            }\n        }\n        case CLEAR_REDUCER: {\n            return {...state, userRecipes: []}\n        }\n        default: {\n            return state\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}