{"ast":null,"code":"/**\n * Module exports.\n */\nmodule.exports = exports = gyp;\n/**\n * Module dependencies.\n */\n\nvar fs = require('graceful-fs'),\n    path = require('path'),\n    nopt = require('nopt'),\n    log = require('npmlog'),\n    child_process = require('child_process'),\n    EE = require('events').EventEmitter,\n    inherits = require('util').inherits,\n    commands = [// Module build commands\n'build', 'clean', 'configure', 'rebuild' // Development Header File management commands\n, 'install', 'list', 'remove'],\n    aliases = {\n  'ls': 'list',\n  'rm': 'remove'\n}; // differentiate node-gyp's logs from npm's\n\n\nlog.heading = 'gyp';\n/**\n * The `gyp` function.\n */\n\nfunction gyp() {\n  return new Gyp();\n}\n\nfunction Gyp() {\n  var self = this;\n  this.devDir = '';\n  this.commands = {};\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv);\n      return require('./' + command)(self, argv, callback);\n    };\n  });\n}\n\ninherits(Gyp, EE);\nexports.Gyp = Gyp;\nvar proto = Gyp.prototype;\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package');\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n  help: Boolean // everywhere\n  ,\n  arch: String // 'configure'\n  ,\n  cafile: String // 'install'\n  ,\n  debug: Boolean // 'build'\n  ,\n  directory: String // bin\n  ,\n  make: String // 'build'\n  ,\n  msvs_version: String // 'configure'\n  ,\n  ensure: Boolean // 'install'\n  ,\n  solution: String // 'build' (windows only)\n  ,\n  proxy: String // 'install'\n  ,\n  devdir: String // everywhere\n  ,\n  nodedir: String // 'configure'\n  ,\n  loglevel: String // everywhere\n  ,\n  python: String // 'configure'\n  ,\n  'dist-url': String // 'install'\n  ,\n  'tarball': String // 'install'\n  ,\n  jobs: String // 'build'\n  ,\n  thin: String // 'configure'\n\n};\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n  release: '--no-debug',\n  C: '--directory',\n  debug: '--debug',\n  j: '--jobs',\n  silly: '--loglevel=silly',\n  verbose: '--loglevel=verbose',\n  silent: '--loglevel=silent'\n};\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases;\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts(argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv);\n  this.argv = this.opts.argv.remain.slice();\n  var commands = this.todo = []; // create a copy of the argv array with aliases mapped\n\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg];\n    }\n\n    return arg;\n  }, this); // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg));\n      argv.shift();\n\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args;\n      }\n\n      commands.push({\n        name: arg,\n        args: []\n      });\n    }\n  }, this);\n\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0);\n  } // support for inheriting config env variables from npm\n\n\n  var npm_config_prefix = 'npm_config_';\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npm_config_prefix) !== 0) return;\n    var val = process.env[name];\n\n    if (name === npm_config_prefix + 'loglevel') {\n      log.level = val;\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npm_config_prefix.length); // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n\n      if (name) this.opts[name] = val;\n    }\n  }, this);\n\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel;\n  }\n\n  log.resume();\n};\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\n\nproto.spawn = function spawn(command, args, opts) {\n  if (!opts) opts = {};\n\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [0, 1, 2];\n  }\n\n  var cp = child_process.spawn(command, args, opts);\n  log.info('spawn', command);\n  log.info('spawn args', args);\n  return cp;\n};\n/**\n * Returns the usage instructions for node-gyp.\n */\n\n\nproto.usage = function usage() {\n  var str = ['', '  Usage: node-gyp <command> [options]', '', '  where <command> is one of:', commands.map(function (c) {\n    return '    - ' + c + ' - ' + require('./' + c).usage;\n  }).join('\\n'), '', 'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..'), 'node@' + process.versions.node].join('\\n');\n  return str;\n};\n/**\n * Version number getter.\n */\n\n\nObject.defineProperty(proto, 'version', {\n  get: function () {\n    return this.package.version;\n  },\n  enumerable: true\n});","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/node_modules/node-gyp/lib/node-gyp.js"],"names":["module","exports","gyp","fs","require","path","nopt","log","child_process","EE","EventEmitter","inherits","commands","aliases","heading","Gyp","self","devDir","forEach","command","argv","callback","verbose","proto","prototype","package","configDefs","help","Boolean","arch","String","cafile","debug","directory","make","msvs_version","ensure","solution","proxy","devdir","nodedir","loglevel","python","jobs","thin","shorthands","release","C","j","silly","silent","parseArgv","parseOpts","opts","remain","slice","todo","map","arg","args","splice","indexOf","shift","length","push","name","npm_config_prefix","Object","keys","process","env","val","level","substring","resume","spawn","stdio","cp","info","usage","str","c","join","version","resolve","__dirname","versions","node","defineProperty","get","enumerable"],"mappings":"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","sourcesContent":["\n/**\n * Module exports.\n */\n\nmodule.exports = exports = gyp\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('graceful-fs')\n  , path = require('path')\n  , nopt = require('nopt')\n  , log = require('npmlog')\n  , child_process = require('child_process')\n  , EE = require('events').EventEmitter\n  , inherits = require('util').inherits\n  , commands = [\n      // Module build commands\n        'build'\n      , 'clean'\n      , 'configure'\n      , 'rebuild'\n      // Development Header File management commands\n      , 'install'\n      , 'list'\n      , 'remove'\n    ]\n  , aliases = {\n        'ls': 'list'\n      , 'rm': 'remove'\n    }\n\n// differentiate node-gyp's logs from npm's\nlog.heading = 'gyp'\n\n/**\n * The `gyp` function.\n */\n\nfunction gyp () {\n  return new Gyp()\n}\n\nfunction Gyp () {\n  var self = this\n\n  this.devDir = ''\n  this.commands = {}\n\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv)\n      return require('./' + command)(self, argv, callback)\n    }\n  })\n}\ninherits(Gyp, EE)\nexports.Gyp = Gyp\nvar proto = Gyp.prototype\n\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package')\n\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n    help: Boolean     // everywhere\n  , arch: String      // 'configure'\n  , cafile: String    // 'install'\n  , debug: Boolean    // 'build'\n  , directory: String // bin\n  , make: String      // 'build'\n  , msvs_version: String // 'configure'\n  , ensure: Boolean   // 'install'\n  , solution: String  // 'build' (windows only)\n  , proxy: String     // 'install'\n  , devdir: String   // everywhere\n  , nodedir: String   // 'configure'\n  , loglevel: String  // everywhere\n  , python: String    // 'configure'\n  , 'dist-url': String // 'install'\n  , 'tarball': String // 'install'\n  , jobs: String      // 'build'\n  , thin: String      // 'configure'\n}\n\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n    release: '--no-debug'\n  , C: '--directory'\n  , debug: '--debug'\n  , j: '--jobs'\n  , silly: '--loglevel=silly'\n  , verbose: '--loglevel=verbose'\n  , silent: '--loglevel=silent'\n}\n\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases\n\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts (argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv)\n  this.argv = this.opts.argv.remain.slice()\n\n  var commands = this.todo = []\n\n  // create a copy of the argv array with aliases mapped\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg]\n    }\n    return arg\n  }, this)\n\n  // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg))\n      argv.shift()\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args\n      }\n      commands.push({ name: arg, args: [] })\n    }\n  }, this)\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0)\n  }\n\n  // support for inheriting config env variables from npm\n  var npm_config_prefix = 'npm_config_'\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npm_config_prefix) !== 0) return\n    var val = process.env[name]\n    if (name === npm_config_prefix + 'loglevel') {\n      log.level = val\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npm_config_prefix.length)\n      // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n      if (name) this.opts[name] = val\n    }\n  }, this)\n\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel\n  }\n  log.resume()\n}\n\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\nproto.spawn = function spawn (command, args, opts) {\n  if (!opts) opts = {}\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [ 0, 1, 2 ]\n  }\n  var cp = child_process.spawn(command, args, opts)\n  log.info('spawn', command)\n  log.info('spawn args', args)\n  return cp\n}\n\n/**\n * Returns the usage instructions for node-gyp.\n */\n\nproto.usage = function usage () {\n  var str = [\n      ''\n    , '  Usage: node-gyp <command> [options]'\n    , ''\n    , '  where <command> is one of:'\n    , commands.map(function (c) {\n        return '    - ' + c + ' - ' + require('./' + c).usage\n      }).join('\\n')\n    , ''\n    , 'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..')\n    , 'node@' + process.versions.node\n  ].join('\\n')\n  return str\n}\n\n/**\n * Version number getter.\n */\n\nObject.defineProperty(proto, 'version', {\n    get: function () {\n      return this.package.version\n    }\n  , enumerable: true\n})\n\n"]},"metadata":{},"sourceType":"script"}