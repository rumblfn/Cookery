{"ast":null,"code":"var _jsxFileName = \"/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main-app/src/components/HomePage/listOfSelectedProducts/listOfSelectedProducts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Paper from '@mui/material/Paper';\nimport { selectedProductsConnect } from '../../../connect/selectedProducts/selectedProducts';\nimport Button from \"@mui/material/Button\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport { useState } from 'react';\nimport InputBase from \"@mui/material/InputBase\";\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ShowSelectedProducts = _ref => {\n  let {\n    setIconImages,\n    iconImage\n  } = _ref;\n\n  const show = () => {\n    setIconImages(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      color: '#000000',\n      border: 'none',\n      marginBottom: '2%'\n    },\n    variant: \"outlined\",\n    type: \"submit\",\n    onClick: () => show(),\n    children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u044B \", iconImage ? /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 65\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = ShowSelectedProducts;\nexport const SelectedProducts = selectedProductsConnect(_c2 = _s(_ref2 => {\n  _s();\n\n  let {\n    creating,\n    products,\n    changeSelectedState,\n    show,\n    setProducts,\n    lstOfProductsNames\n  } = _ref2;\n  let css = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: '32px'\n  };\n  let css_paper = {\n    borderRadius: '7px',\n    padding: '10px',\n    marginRight: '10px',\n    marginBottom: '10px',\n    display: 'flex'\n  };\n\n  const checkProduct = item => {\n    changeSelectedState(item);\n  };\n\n  if (setProducts) {\n    setProducts([...lstOfProductsNames]);\n  }\n\n  console.log(products);\n\n  if (creating) {\n    css = {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr',\n      gap: '2%'\n    };\n    css_paper = {\n      borderRadius: '7px',\n      padding: '10px'\n    };\n\n    if (useMediaQuery('(max-width:1024px)')) {\n      css.gridTemplateColumns = '1fr 1fr';\n    }\n\n    if (useMediaQuery('(max-width:768px)')) {\n      css.gridTemplateColumns = '1fr 1fr 1fr';\n    }\n  }\n\n  if (!show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: css,\n      children: Object.keys(products).map(elKey => /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        style: css_paper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: 'auto',\n              marginBottom: 'auto'\n            },\n            children: products[elKey].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => checkProduct(elKey),\n            style: {\n              maxWidth: '30px',\n              maxHeight: '30px',\n              minWidth: '30px',\n              minHeight: '30px',\n              color: 'black'\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseRoundedIcon, {\n              style: {\n                color: 'inherit'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), creating ? /*#__PURE__*/_jsxDEV(InputBase, {\n          autoFocus: true,\n          sx: {\n            width: '100%'\n          },\n          style: {\n            borderBottom: '2px solid black'\n          },\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this) : null]\n      }, elKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}, \"/m3s25lKv5F66nN1w2ystRyo6FI=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n}));\n_c3 = SelectedProducts;\nexport const ListOfSelectedProducts = _ref3 => {\n  _s2();\n\n  let {\n    creating\n  } = _ref3;\n  const [iconImage, setIconImages] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ShowSelectedProducts, {\n      iconImage: iconImage,\n      setIconImages: setIconImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectedProducts, {\n      creating: creating,\n      show: iconImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(ListOfSelectedProducts, \"/uu58rl1eA4HYrRBQKrzsACUwus=\");\n\n_c4 = ListOfSelectedProducts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShowSelectedProducts\");\n$RefreshReg$(_c2, \"SelectedProducts$selectedProductsConnect\");\n$RefreshReg$(_c3, \"SelectedProducts\");\n$RefreshReg$(_c4, \"ListOfSelectedProducts\");","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main-app/src/components/HomePage/listOfSelectedProducts/listOfSelectedProducts.js"],"names":["Paper","selectedProductsConnect","Button","ArrowDropDownIcon","ArrowDropUpIcon","useState","InputBase","CloseRoundedIcon","useMediaQuery","ShowSelectedProducts","setIconImages","iconImage","show","prevState","color","border","marginBottom","SelectedProducts","creating","products","changeSelectedState","setProducts","lstOfProductsNames","css","display","flexWrap","css_paper","borderRadius","padding","marginRight","checkProduct","item","console","log","gridTemplateColumns","gap","Object","keys","map","elKey","justifyContent","marginTop","name","maxWidth","maxHeight","minWidth","minHeight","width","borderBottom","ListOfSelectedProducts"],"mappings":"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","sourcesContent":["import Paper from '@mui/material/Paper';\nimport { selectedProductsConnect } from '../../../connect/selectedProducts/selectedProducts'\nimport Button from \"@mui/material/Button\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport { useState } from 'react';\nimport InputBase from \"@mui/material/InputBase\";\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nexport const ShowSelectedProducts = ({setIconImages, iconImage}) => {\n    const show = () => {\n        setIconImages(prevState => !prevState)\n    }\n\n    return (\n        <Button \n            style={{\n                color: '#000000',\n                border: 'none',\n                marginBottom: '2%'\n            }}\n            variant=\"outlined\" \n            type=\"submit\"\n            onClick={() => show()}\n        >Выбранные продукты {iconImage ? <ArrowDropDownIcon/> : <ArrowDropUpIcon/>}\n        </Button>\n    )\n}\n\nexport const SelectedProducts = selectedProductsConnect(({creating, products, changeSelectedState, show, setProducts, lstOfProductsNames}) => {\n    let css = {display: 'flex', flexWrap: 'wrap', marginBottom: '32px'};\n    let css_paper = {borderRadius: '7px', padding: '10px', marginRight: '10px', marginBottom: '10px', \n        display: 'flex'}\n\n    const checkProduct = (item) => {\n        changeSelectedState(item)\n    }\n\n    if (setProducts) {\n        setProducts([...lstOfProductsNames])\n    }\n\n    console.log(products)\n    if (creating) {\n        css = {display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '2%'};\n        css_paper = {borderRadius: '7px', padding: '10px'}\n        if (useMediaQuery('(max-width:1024px)')) {\n            css.gridTemplateColumns = '1fr 1fr'\n        }\n        if (useMediaQuery('(max-width:768px)')) {\n            css.gridTemplateColumns = '1fr 1fr 1fr'\n        }\n    }\n\n    if (!show) {\n        return (\n            <div style={css}>\n                {Object.keys(products).map(elKey => (\n                    <Paper elevation={2} style={css_paper}\n                            key={elKey}>\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                            <p style={{marginTop: 'auto', marginBottom: 'auto'}}>{products[elKey].name}</p>\n                            <Button onClick={() => checkProduct(elKey)} \n                                    style={{maxWidth: '30px', maxHeight: '30px', minWidth: '30px', minHeight: '30px', color: 'black'}}>\n                                <CloseRoundedIcon style={{\n                                    color: 'inherit',\n                                }}/>\n                            </Button>\n                        </div>\n                        {creating ? \n                        <InputBase\n                            autoFocus\n                            sx={{width: '100%'}}\n                            style={{borderBottom: '2px solid black'}}\n                            placeholder=\"Введите название\"/> : null}\n                    </Paper>))\n                }\n            </div>\n        );\n    } else {\n        return null;\n    }\n})\n\nexport const ListOfSelectedProducts = ({creating}) => {\n    const [iconImage, setIconImages] = useState(true)\n    return (\n        <>\n            <ShowSelectedProducts iconImage={iconImage} setIconImages={setIconImages}/>\n            <SelectedProducts creating={creating} show={iconImage}/>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}