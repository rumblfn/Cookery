{"ast":null,"code":"var _jsxFileName = \"/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/routes/StarredRecipesPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { ListOfReciepes } from '../../components/HomePage/listOfReciepes/listOfReciepes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StarredRecipesPage = () => {\n  _s();\n\n  const [IsLoading, setIsLoading] = useState(true);\n  const [emptyRecipes, setEmptyRecipes] = useState(false);\n  const [starredRecipes, setStarredRecipes] = useState([]);\n  const userData = useSelector(state => state.user);\n  console.log(userData);\n  useEffect(() => {\n    if (!userData.likedPostsIdes.length) {\n      setEmptyRecipes(true);\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n      Axios.get('http://localhost:3001/starredRecipes/get', {\n        params: {\n          recipesIdes: userData.likedPostsIdes\n        }\n      }).then(response => {\n        setStarredRecipes(prevState => [...response.data]);\n        setIsLoading(false);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(ListOfReciepes, {\n      allRecipesBool: true,\n      starredRecipes: starredRecipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StarredRecipesPage, \"NNFGBYZ0/PYY2b/r+tKmUO6CiBI=\", false, function () {\n  return [useSelector];\n});\n\n_c = StarredRecipesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StarredRecipesPage\");","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/routes/StarredRecipesPage/index.js"],"names":["useSelector","Axios","useState","useEffect","ListOfReciepes","StarredRecipesPage","IsLoading","setIsLoading","emptyRecipes","setEmptyRecipes","starredRecipes","setStarredRecipes","userData","state","user","console","log","likedPostsIdes","length","get","params","recipesIdes","then","response","prevState","data"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,yDAA/B;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAMU,QAAQ,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACS,QAAQ,CAACK,cAAT,CAAwBC,MAA7B,EAAqC;AACjCT,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHD,MAGO;AACHA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAN,MAAAA,KAAK,CAACkB,GAAN,CAAU,0CAAV,EAAsD;AAClDC,QAAAA,MAAM,EAAE;AACJC,UAAAA,WAAW,EAAET,QAAQ,CAACK;AADlB;AAD0C,OAAtD,EAIGK,IAJH,CAISC,QAAD,IAAc;AAClBZ,QAAAA,iBAAiB,CAACa,SAAS,IAAI,CAAC,GAAGD,QAAQ,CAACE,IAAb,CAAd,CAAjB;AACAlB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAPD;AAQH;AACJ,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,cAAD;AAAgB,MAAA,cAAc,EAAE,IAAhC;AAAsC,MAAA,cAAc,EAAEG;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BM;;GAAML,kB;UAIQL,W;;;KAJRK,kB","sourcesContent":["import { useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { ListOfReciepes } from '../../components/HomePage/listOfReciepes/listOfReciepes';\n\nexport const StarredRecipesPage = () => {\n    const [IsLoading, setIsLoading] = useState(true);\n    const [emptyRecipes, setEmptyRecipes] = useState(false)\n    const [starredRecipes, setStarredRecipes] = useState([])\n    const userData = useSelector((state) => state.user)\n    console.log(userData)\n    useEffect(() => {\n        if (!userData.likedPostsIdes.length) {\n            setEmptyRecipes(true)\n            setIsLoading(false)\n        } else {\n            setIsLoading(true)\n            Axios.get('http://localhost:3001/starredRecipes/get', {\n                params: {\n                    recipesIdes: userData.likedPostsIdes\n                }\n            }).then((response) => {\n                setStarredRecipes(prevState => [...response.data])\n                setIsLoading(false)\n            })\n        }\n    }, [])\n\n    return (\n        <div className='container'>\n            <ListOfReciepes allRecipesBool={true} starredRecipes={starredRecipes}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}