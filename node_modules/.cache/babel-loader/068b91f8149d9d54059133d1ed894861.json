{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { productsReducer } from './products';\nimport { recipesReducer } from './recipes';\nimport { userReducer } from './user/reducer';\nimport { userRecipeReducer } from './newRecipe/reducer';\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport persistStore from \"redux-persist/es/persistStore\";\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['user']\n};\nconst rootReducer = combineReducers({\n  products: productsReducer,\n  recipes: recipesReducer,\n  user: userReducer,\n  newRecipe: userRecipeReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = createStore(persistedReducer);\nexport const persistedStore = persistStore(store);","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/local-github/Cookery/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","productsReducer","recipesReducer","userReducer","userRecipeReducer","storage","persistReducer","persistStore","persistConfig","key","whitelist","rootReducer","products","recipes","user","newRecipe","persistedReducer","store","persistedStore"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBJ,EAAAA,OAFkB;AAGlBK,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHO,CAAtB;AAMA,MAAMC,WAAW,GAAGZ,eAAe,CAAC;AAChCa,EAAAA,QAAQ,EAAEX,eADsB;AAEhCY,EAAAA,OAAO,EAAEX,cAFuB;AAGhCY,EAAAA,IAAI,EAAEX,WAH0B;AAIhCY,EAAAA,SAAS,EAAEX;AAJqB,CAAD,CAAnC;AAOA,MAAMY,gBAAgB,GAAGV,cAAc,CAACE,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMM,KAAK,GAAGnB,WAAW,CAC5BkB,gBAD4B,CAAzB;AAIP,OAAO,MAAME,cAAc,GAAGX,YAAY,CAACU,KAAD,CAAnC","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { productsReducer } from './products';\nimport { recipesReducer } from './recipes';\nimport { userReducer } from './user/reducer';\nimport { userRecipeReducer } from './newRecipe/reducer';\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport persistStore from \"redux-persist/es/persistStore\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['user']\n}\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    recipes: recipesReducer,\n    user: userReducer,\n    newRecipe: userRecipeReducer,\n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer\n)\n\nexport const persistedStore = persistStore(store)"]},"metadata":{},"sourceType":"module"}