{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import{productsReducer}from'./products';import{recipesReducer}from'./recipes';import{userReducer}from'./user/reducer';import{userRecipeReducer}from'./newRecipe/reducer';import storage from'redux-persist/lib/storage';import persistReducer from\"redux-persist/es/persistReducer\";import persistStore from\"redux-persist/es/persistStore\";var persistConfig={key:'root',storage:storage,whitelist:['user']};var rootReducer=combineReducers({products:productsReducer,recipes:recipesReducer,user:userReducer,newRecipe:userRecipeReducer});var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=createStore(persistedReducer);export var persistedStore=persistStore(store);","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/local-github/Cookery/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","productsReducer","recipesReducer","userReducer","userRecipeReducer","storage","persistReducer","persistStore","persistConfig","key","whitelist","rootReducer","products","recipes","user","newRecipe","persistedReducer","store","persistedStore"],"mappings":"AAAA,OAAQA,WAAR,CAAqBC,eAArB,CAAsCC,eAAtC,KAA4D,OAA5D,CACA,OAASC,eAAT,KAAgC,YAAhC,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,iBAAT,KAAkC,qBAAlC,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,MADa,CAElBJ,OAAO,CAAPA,OAFkB,CAGlBK,SAAS,CAAE,CAAC,MAAD,CAHO,CAAtB,CAMA,GAAMC,CAAAA,WAAW,CAAGZ,eAAe,CAAC,CAChCa,QAAQ,CAAEX,eADsB,CAEhCY,OAAO,CAAEX,cAFuB,CAGhCY,IAAI,CAAEX,WAH0B,CAIhCY,SAAS,CAAEX,iBAJqB,CAAD,CAAnC,CAOA,GAAMY,CAAAA,gBAAgB,CAAGV,cAAc,CAACE,aAAD,CAAgBG,WAAhB,CAAvC,CAEA,MAAO,IAAMM,CAAAA,KAAK,CAAGnB,WAAW,CAC5BkB,gBAD4B,CAAzB,CAIP,MAAO,IAAME,CAAAA,cAAc,CAAGX,YAAY,CAACU,KAAD,CAAnC","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { productsReducer } from './products';\nimport { recipesReducer } from './recipes';\nimport { userReducer } from './user/reducer';\nimport { userRecipeReducer } from './newRecipe/reducer';\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport persistStore from \"redux-persist/es/persistStore\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['user']\n}\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    recipes: recipesReducer,\n    user: userReducer,\n    newRecipe: userRecipeReducer,\n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer\n)\n\nexport const persistedStore = persistStore(store)"]},"metadata":{},"sourceType":"module"}