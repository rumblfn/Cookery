{"ast":null,"code":"var _jsxFileName = \"/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main-app/src/components/HomePage/listOfReciepes/listOfReciepes.js\";\nimport { recipesConnect } from \"../../../connect/recipes/recipes\";\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const widget = _ref => {\n  let {\n    recipes,\n    selectedProducts\n  } = _ref;\n  let newRecipes = [];\n\n  const isEmpty = obj => {\n    for (let key in obj) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const checkProductsInRecipe = (recipe, prods) => {\n    for (let key in prods) {\n      if (!recipe.lstOfProducts.includes(prods[key].name.toLowerCase())) {\n        console.log(recipe.lstOfProducts, prods[key].name);\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  if (isEmpty(selectedProducts)) {\n    for (let recipe of recipes) {\n      if (checkProductsInRecipe(recipe, selectedProducts)) {\n        newRecipes.push(recipe);\n      }\n    }\n  }\n\n  console.log(newRecipes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '50% 50%'\n    },\n    children: newRecipes.map(item => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        borderRadius: '7px',\n        padding: '10px',\n        height: '200px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          borderRadius: '7px'\n        },\n        src: item.images[0],\n        alt: \"food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\nexport const ListOfReciepes = recipesConnect(widget);","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main-app/src/components/HomePage/listOfReciepes/listOfReciepes.js"],"names":["recipesConnect","Paper","widget","recipes","selectedProducts","newRecipes","isEmpty","obj","key","checkProductsInRecipe","recipe","prods","lstOfProducts","includes","name","toLowerCase","console","log","push","display","gridTemplateColumns","map","item","borderRadius","padding","height","images","title","id","ListOfReciepes"],"mappings":";AAAA,SAASA,cAAT,QAA+B,kCAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,OAAO,MAAMC,MAAM,GAAG,QAAiC;AAAA,MAAhC;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAgC;AACnD,MAAIC,UAAU,GAAG,EAAjB;;AACA,QAAMC,OAAO,GAAIC,GAAD,IAAS;AACrB,SAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACH,GALD;;AAOA,QAAME,qBAAqB,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC7C,SAAK,IAAIH,GAAT,IAAgBG,KAAhB,EAAuB;AACnB,UAAI,CAACD,MAAM,CAACE,aAAP,CAAqBC,QAArB,CAA8BF,KAAK,CAACH,GAAD,CAAL,CAAWM,IAAX,CAAgBC,WAAhB,EAA9B,CAAL,EAAmE;AAC/DC,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACE,aAAnB,EAAkCD,KAAK,CAACH,GAAD,CAAL,CAAWM,IAA7C;AACA,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GARD;;AAUA,MAAIR,OAAO,CAACF,gBAAD,CAAX,EAA+B;AAC3B,SAAK,IAAIM,MAAT,IAAmBP,OAAnB,EAA4B;AACxB,UAAIM,qBAAqB,CAACC,MAAD,EAASN,gBAAT,CAAzB,EAAqD;AACjDC,QAAAA,UAAU,CAACa,IAAX,CAAgBR,MAAhB;AACH;AACJ;AACJ;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AACRc,MAAAA,OAAO,EAAE,MADD;AAERC,MAAAA,mBAAmB,EAAE;AAFb,KAAZ;AAAA,cAIKf,UAAU,CAACgB,GAAX,CAAeC,IAAI,iBAChB,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,CAAlB;AACI,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE,KAAf;AAAsBC,QAAAA,OAAO,EAAE,MAA/B;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OADX;AAAA,8BAII;AAAK,QAAA,KAAK,EAAE;AAACF,UAAAA,YAAY,EAAE;AAAf,SAAZ;AAAmC,QAAA,GAAG,EAAED,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAxC;AAAwD,QAAA,GAAG,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAIJ,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,OAESL,IAAI,CAACM,EAFd;AAAA;AAAA;AAAA;AAAA,YADH;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA3CM;AA6CP,OAAO,MAAMC,cAAc,GAAG7B,cAAc,CAACE,MAAD,CAArC","sourcesContent":["import { recipesConnect } from \"../../../connect/recipes/recipes\"\nimport Paper from '@mui/material/Paper';\n\nexport const widget = ({recipes, selectedProducts}) => {\n    let newRecipes = []\n    const isEmpty = (obj) => {\n        for (let key in obj) {\n          return true;\n        }\n        return false;\n    }\n\n    const checkProductsInRecipe = (recipe, prods) => {\n        for (let key in prods) {\n            if (!recipe.lstOfProducts.includes(prods[key].name.toLowerCase())) {\n                console.log(recipe.lstOfProducts, prods[key].name)\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    if (isEmpty(selectedProducts)) {\n        for (let recipe of recipes) {\n            if (checkProductsInRecipe(recipe, selectedProducts)) {\n                newRecipes.push(recipe)\n            }\n        }\n    }\n    console.log(newRecipes)\n    return (\n        <div style={{\n            display: 'grid',\n            gridTemplateColumns: '50% 50%'\n        }}>\n            {newRecipes.map(item => (\n                <Paper elevation={3} \n                    style={{borderRadius: '7px', padding: '10px', height: '200px'}} \n                    key={item.id}\n                >\n                    <img style={{borderRadius: '7px'}} src={item.images[0]} alt='food'/>\n                    <p>{item.title}</p>\n                </Paper>))\n            }\n        </div>\n    )\n}\n\nexport const ListOfReciepes = recipesConnect(widget)"]},"metadata":{},"sourceType":"module"}