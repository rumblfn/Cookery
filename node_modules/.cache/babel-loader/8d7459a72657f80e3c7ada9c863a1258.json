{"ast":null,"code":"import _slicedToArray from\"/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import TextareaAutosize from'@mui/material/TextareaAutosize';import{nanoid}from'nanoid';import{recipesConnect}from\"../../connect/recipes/recipes\";import{Link}from'react-router-dom';import Button from\"@mui/material/Button\";import ArrowBackRoundedIcon from'@mui/icons-material/ArrowBackRounded';import{useState}from'react';import{useSelector}from'react-redux';import'./style.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Widget=recipesConnect(function(_ref){var userId=_ref.userId,recipeData=_ref.recipeData,images=_ref.images,description=_ref.description,setDescription=_ref.setDescription,addNewRecipe=_ref.addNewRecipe;function encodeImageFileAsURL(element){var file=element.files[0];var reader=new FileReader();reader.onloadend=function(){images.push(reader.result);};reader.readAsDataURL(file);}var handleUploadedFileImage=function handleUploadedFileImage(e){encodeImageFileAsURL(e.target);};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'16px',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',marginBottom:'16px'},children:[/*#__PURE__*/_jsx(Link,{to:\"/profile/create/checkProducts\",children:/*#__PURE__*/_jsxs(Button,{style:{borderColor:\"#000000\",color:'#000000'},variant:\"outlined\",type:\"submit\",children:[/*#__PURE__*/_jsx(ArrowBackRoundedIcon,{}),\" \\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F\"]})}),/*#__PURE__*/_jsx(Link,{to:\"/profile\",children:/*#__PURE__*/_jsx(Button,{style:{marginLeft:'16px'},variant:\"outlined\",type:\"submit\",onClick:function onClick(){document.body.style.overflow=\"scroll\";addNewRecipe({\"title\":recipeData.title,\"userId\":userId,\"id\":nanoid(),\"time\":recipeData.time,\"cook\":recipeData.actions,\"lstOfProducts\":recipeData.products,\"products\":recipeData.productsWithCount,\"description\":description,\"images\":images,\"rating\":0,\"comments\":[]});},children:\"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'rgba(0,0,0,.3)',borderRadius:'5px',width:'100%',height:'50vh',border:'2px solid black',display:'flex',justifyContent:'center',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Button,{style:{margin:'4%',borderColor:\"#000000\",color:'#000000'},variant:\"outlined\",type:\"submit\",children:[\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\",/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload__post\",className:\"custom-file-upload__post\"})]}),/*#__PURE__*/_jsx(\"input\",{id:\"file-upload__post\",type:\"file\",onChange:function onChange(e){handleUploadedFileImage(e);}})]}),/*#__PURE__*/_jsx(TextareaAutosize,{style:{border:'none',margin:'10px 16px',maxHeight:'40vh'},\"aria-label\":\"textarea\",placeholder:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",autoFocus:true,onChange:function onChange(e){setDescription(e.target.value);}})]})]});});export var ToPost=function ToPost(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),images=_useState2[0],setImages=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var recipeData=useSelector(function(state){return state.newRecipe;});var userId=useSelector(function(state){return state.user.id;});return/*#__PURE__*/_jsx(Widget,{userId:userId,recipeData:recipeData,images:images,description:description,setDescription:setDescription});};","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/components/CreateRecipeBlock/WidgetToPost.js"],"names":["TextareaAutosize","nanoid","recipesConnect","Link","Button","ArrowBackRoundedIcon","useState","useSelector","Widget","userId","recipeData","images","description","setDescription","addNewRecipe","encodeImageFileAsURL","element","file","files","reader","FileReader","onloadend","push","result","readAsDataURL","handleUploadedFileImage","e","target","padding","display","flexDirection","marginBottom","borderColor","color","marginLeft","document","body","style","overflow","title","time","actions","products","productsWithCount","background","borderRadius","width","height","border","justifyContent","alignItems","margin","maxHeight","value","ToPost","setImages","state","newRecipe","user","id"],"mappings":"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","sourcesContent":["import TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { nanoid } from 'nanoid';\nimport { recipesConnect } from \"../../connect/recipes/recipes\";\nimport { Link } from 'react-router-dom';\nimport Button from \"@mui/material/Button\";\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './style.css';\n\n\nexport const Widget = recipesConnect(({userId, recipeData, images, description, setDescription, addNewRecipe}) => {\n    function encodeImageFileAsURL(element) {\n        let file = element.files[0];\n        let reader = new FileReader();\n        reader.onloadend = function() {\n            images.push(reader.result)\n        }\n        reader.readAsDataURL(file);}\n    \n    const handleUploadedFileImage = (e) => {\n        encodeImageFileAsURL(e.target)\n    }\n\n    return (\n        <div style={{padding: '16px', display: 'flex', flexDirection: 'column'}}>\n            <div style={{display: 'flex', marginBottom: '16px'}}>\n                <Link to='/profile/create/checkProducts'>\n                    <Button \n                        style={{\n                            borderColor: \"#000000\",\n                            color: '#000000',\n                        }}\n                        variant=\"outlined\" \n                        type=\"submit\"\n                    >\n                        <ArrowBackRoundedIcon/> Вернуться\n                    </Button>\n                </Link>\n                <Link to='/profile'>\n                    <Button\n                        style={{\n                            marginLeft: '16px',\n                        }}\n                        variant=\"outlined\"\n                        type=\"submit\"\n                        onClick = {() => { \n                            document.body.style.overflow = \"scroll\";\n                            addNewRecipe({\n                                \"title\": recipeData.title, \"userId\": userId, \"id\": nanoid(),\n                                \"time\": recipeData.time, \"cook\": recipeData.actions,\n                                \"lstOfProducts\": recipeData.products, \"products\": recipeData.productsWithCount,\n                                \"description\": description, \"images\": images,\n                                \"rating\": 0, \"comments\": []})\n                        }}\n                        >Опубликовать\n                    </Button>\n                </Link>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n            <div style={{background: 'rgba(0,0,0,.3)', borderRadius: '5px',\n                width: '100%', height: '50vh', border: '2px solid black',\n                display: 'flex', justifyContent: 'center', flexDirection: 'column',\n                alignItems: 'center',\n            }}>\n                <Button\n                    style={{\n                        margin: '4%',\n                        borderColor: \"#000000\",\n                        color: '#000000',\n                    }}\n                    variant=\"outlined\" \n                    type=\"submit\"\n                >Загрузить изображение\n                    <label htmlFor=\"file-upload__post\" className=\"custom-file-upload__post\"/>\n                </Button>\n                <input id=\"file-upload__post\" type=\"file\" onChange={e => {handleUploadedFileImage(e)}}/>\n            </div>\n            <TextareaAutosize\n                style={{border: 'none', margin: '10px 16px', maxHeight: '40vh'}}\n                aria-label=\"textarea\"\n                placeholder=\"Добавьте описание\"\n                autoFocus\n                onChange={(e) => {\n                    setDescription(e.target.value);\n                }}\n            />\n            </div>\n        </div>\n    )\n})\n\nexport const ToPost = () => {\n    const [images, setImages] = useState([])\n    const [description, setDescription] = useState('')\n    const recipeData = useSelector(state => state.newRecipe)\n    const userId = useSelector(state => state.user.id)\n\n    return (\n        <Widget userId={userId} recipeData={recipeData} images={images} description={description} setDescription={setDescription}/>\n    )\n}"]},"metadata":{},"sourceType":"module"}