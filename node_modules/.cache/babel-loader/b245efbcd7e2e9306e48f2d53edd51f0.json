{"ast":null,"code":"// give it a tarball and a path, and it'll dump the contents\nmodule.exports = Extract;\n\nvar tar = require(\"../tar.js\"),\n    fstream = require(\"fstream\"),\n    inherits = require(\"inherits\"),\n    path = require(\"path\");\n\nfunction Extract(opts) {\n  if (!(this instanceof Extract)) return new Extract(opts);\n  tar.Parse.apply(this);\n\n  if (typeof opts !== \"object\") {\n    opts = {\n      path: opts\n    };\n  } // better to drop in cwd? seems more standard.\n\n\n  opts.path = opts.path || path.resolve(\"node-tar-extract\");\n  opts.type = \"Directory\";\n  opts.Directory = true; // similar to --strip or --strip-components\n\n  opts.strip = +opts.strip;\n  if (!opts.strip || opts.strip <= 0) opts.strip = 0;\n  this._fst = fstream.Writer(opts);\n  this.pause();\n  var me = this; // Hardlinks in tarballs are relative to the root\n  // of the tarball.  So, they need to be resolved against\n  // the target directory in order to be created properly.\n\n  me.on(\"entry\", function (entry) {\n    // if there's a \"strip\" argument, then strip off that many\n    // path components.\n    if (opts.strip) {\n      var p = entry.path.split(\"/\").slice(opts.strip).join(\"/\");\n      entry.path = entry.props.path = p;\n\n      if (entry.linkpath) {\n        var lp = entry.linkpath.split(\"/\").slice(opts.strip).join(\"/\");\n        entry.linkpath = entry.props.linkpath = lp;\n      }\n    }\n\n    if (entry.type === \"Link\") {\n      entry.linkpath = entry.props.linkpath = path.join(opts.path, path.join(\"/\", entry.props.linkpath));\n    }\n\n    if (entry.type === \"SymbolicLink\") {\n      var dn = path.dirname(entry.path) || \"\";\n      var linkpath = entry.props.linkpath;\n      var target = path.resolve(opts.path, dn, linkpath);\n\n      if (target.indexOf(opts.path) !== 0) {\n        linkpath = path.join(opts.path, path.join(\"/\", linkpath));\n      }\n\n      entry.linkpath = entry.props.linkpath = linkpath;\n    }\n  });\n\n  this._fst.on(\"ready\", function () {\n    me.pipe(me._fst, {\n      end: false\n    });\n    me.resume();\n  });\n\n  this._fst.on('error', function (err) {\n    me.emit('error', err);\n  });\n\n  this._fst.on('drain', function () {\n    me.emit('drain');\n  }); // this._fst.on(\"end\", function () {\n  //   console.error(\"\\nEEEE Extract End\", me._fst.path)\n  // })\n\n\n  this._fst.on(\"close\", function () {\n    // console.error(\"\\nEEEE Extract End\", me._fst.path)\n    me.emit(\"finish\");\n    me.emit(\"end\");\n    me.emit(\"close\");\n  });\n}\n\ninherits(Extract, tar.Parse);\n\nExtract.prototype._streamEnd = function () {\n  var me = this;\n  if (!me._ended || me._entry) me.error(\"unexpected eof\");\n\n  me._fst.end(); // my .end() is coming later.\n\n};","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/node_modules/node-gyp/node_modules/tar/lib/extract.js"],"names":["module","exports","Extract","tar","require","fstream","inherits","path","opts","Parse","apply","resolve","type","Directory","strip","_fst","Writer","pause","me","on","entry","p","split","slice","join","props","linkpath","lp","dn","dirname","target","indexOf","pipe","end","resume","err","emit","prototype","_streamEnd","_ended","_entry","error"],"mappings":"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","sourcesContent":["// give it a tarball and a path, and it'll dump the contents\n\nmodule.exports = Extract\n\nvar tar = require(\"../tar.js\")\n  , fstream = require(\"fstream\")\n  , inherits = require(\"inherits\")\n  , path = require(\"path\")\n\nfunction Extract (opts) {\n  if (!(this instanceof Extract)) return new Extract(opts)\n  tar.Parse.apply(this)\n\n  if (typeof opts !== \"object\") {\n    opts = { path: opts }\n  }\n\n  // better to drop in cwd? seems more standard.\n  opts.path = opts.path || path.resolve(\"node-tar-extract\")\n  opts.type = \"Directory\"\n  opts.Directory = true\n\n  // similar to --strip or --strip-components\n  opts.strip = +opts.strip\n  if (!opts.strip || opts.strip <= 0) opts.strip = 0\n\n  this._fst = fstream.Writer(opts)\n\n  this.pause()\n  var me = this\n\n  // Hardlinks in tarballs are relative to the root\n  // of the tarball.  So, they need to be resolved against\n  // the target directory in order to be created properly.\n  me.on(\"entry\", function (entry) {\n    // if there's a \"strip\" argument, then strip off that many\n    // path components.\n    if (opts.strip) {\n      var p = entry.path.split(\"/\").slice(opts.strip).join(\"/\")\n      entry.path = entry.props.path = p\n      if (entry.linkpath) {\n        var lp = entry.linkpath.split(\"/\").slice(opts.strip).join(\"/\")\n        entry.linkpath = entry.props.linkpath = lp\n      }\n    }\n    if (entry.type === \"Link\") {\n      entry.linkpath = entry.props.linkpath =\n        path.join(opts.path, path.join(\"/\", entry.props.linkpath))\n    }\n\n    if (entry.type === \"SymbolicLink\") {\n      var dn = path.dirname(entry.path) || \"\"\n      var linkpath = entry.props.linkpath\n      var target = path.resolve(opts.path, dn, linkpath)\n      if (target.indexOf(opts.path) !== 0) {\n        linkpath = path.join(opts.path, path.join(\"/\", linkpath))\n      }\n      entry.linkpath = entry.props.linkpath = linkpath\n    }\n  })\n\n  this._fst.on(\"ready\", function () {\n    me.pipe(me._fst, { end: false })\n    me.resume()\n  })\n\n  this._fst.on('error', function(err) {\n    me.emit('error', err)\n  })\n\n  this._fst.on('drain', function() {\n    me.emit('drain')\n  })\n\n  // this._fst.on(\"end\", function () {\n  //   console.error(\"\\nEEEE Extract End\", me._fst.path)\n  // })\n\n  this._fst.on(\"close\", function () {\n    // console.error(\"\\nEEEE Extract End\", me._fst.path)\n    me.emit(\"finish\")\n    me.emit(\"end\")\n    me.emit(\"close\")\n  })\n}\n\ninherits(Extract, tar.Parse)\n\nExtract.prototype._streamEnd = function () {\n  var me = this\n  if (!me._ended || me._entry) me.error(\"unexpected eof\")\n  me._fst.end()\n  // my .end() is coming later.\n}\n"]},"metadata":{},"sourceType":"script"}