{"ast":null,"code":"import _toConsumableArray from\"/Users/samilvaliahmetov/education/programming/local-github/Cookery/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/samilvaliahmetov/education/programming/local-github/Cookery/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{SET_USER_DATA,STAR_RECIPE,CHANGE_IMAGE}from'./actions';var initialState={loged:false,id:null,name:null,mail:null,likes:null,recipes:[],likedPostsIdes:[]};export var userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CHANGE_IMAGE:{return _objectSpread(_objectSpread({},state),{},{image:action.payload});}case SET_USER_DATA:{if(action.payload.likedPostsIdes===null){return _objectSpread(_objectSpread(_objectSpread({},state),action.payload),{},{loged:true,likedPostsIdes:[]});}return _objectSpread(_objectSpread(_objectSpread({},state),action.payload),{},{loged:true,likedPostsIdes:action.payload.likedPostsIdes.split(';')||[]});}case STAR_RECIPE:{switch(action.payload.starred){case true:{var likedPostIdesCopy=_toConsumableArray(state.likedPostsIdes);var index=likedPostIdesCopy.indexOf(action.payload.recipeId);if(index>-1){likedPostIdesCopy.splice(index,1);}return _objectSpread(_objectSpread({},state),{},{likedPostsIdes:likedPostIdesCopy});}case false:{return _objectSpread(_objectSpread({},state),{},{likedPostsIdes:[].concat(_toConsumableArray(state.likedPostsIdes),[action.payload.recipeId])});}default:{return state;}}}default:{return state;}}};","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/local-github/Cookery/src/store/user/reducer.js"],"names":["SET_USER_DATA","STAR_RECIPE","CHANGE_IMAGE","initialState","loged","id","name","mail","likes","recipes","likedPostsIdes","userReducer","state","action","type","image","payload","split","starred","likedPostIdesCopy","index","indexOf","recipeId","splice"],"mappings":"iTAAA,OAASA,aAAT,CAAwBC,WAAxB,CAAqCC,YAArC,KAAyD,WAAzD,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,KADU,CAEjBC,EAAE,CAAE,IAFa,CAGjBC,IAAI,CAAE,IAHW,CAIjBC,IAAI,CAAE,IAJW,CAKjBC,KAAK,CAAE,IALU,CAMjBC,OAAO,CAAE,EANQ,CAOjBC,cAAc,CAAE,EAPC,CAArB,CAUA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBT,YAAyB,IAAXU,CAAAA,MAAW,2CACzD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKZ,CAAAA,YAAL,CAAmB,CACf,sCAAWU,KAAX,MAAkBG,KAAK,CAAEF,MAAM,CAACG,OAAhC,GACH,CACD,IAAKhB,CAAAA,aAAL,CAAoB,CAChB,GAAIa,MAAM,CAACG,OAAP,CAAeN,cAAf,GAAkC,IAAtC,CAA4C,CACxC,oDAAWE,KAAX,EAAqBC,MAAM,CAACG,OAA5B,MACIZ,KAAK,CAAE,IADX,CACiBM,cAAc,CAAE,EADjC,GAEH,CAAG,oDAAWE,KAAX,EAAqBC,MAAM,CAACG,OAA5B,MACJZ,KAAK,CAAE,IADH,CACSM,cAAc,CAAEG,MAAM,CAACG,OAAP,CAAeN,cAAf,CAA8BO,KAA9B,CAAoC,GAApC,GAA4C,EADrE,GAEP,CACD,IAAKhB,CAAAA,WAAL,CAAkB,CACd,OAAQY,MAAM,CAACG,OAAP,CAAeE,OAAvB,EACI,IAAK,KAAL,CAAW,CACP,GAAIC,CAAAA,iBAAiB,oBAAOP,KAAK,CAACF,cAAb,CAArB,CACA,GAAMU,CAAAA,KAAK,CAAGD,iBAAiB,CAACE,OAAlB,CAA0BR,MAAM,CAACG,OAAP,CAAeM,QAAzC,CAAd,CACA,GAAIF,KAAK,CAAG,CAAC,CAAb,CAAgB,CACZD,iBAAiB,CAACI,MAAlB,CAAyBH,KAAzB,CAAgC,CAAhC,EACH,CACD,sCAAWR,KAAX,MAAkBF,cAAc,CAAES,iBAAlC,GACH,CACD,IAAK,MAAL,CAAY,CACR,sCAAWP,KAAX,MAAkBF,cAAc,8BAAME,KAAK,CAACF,cAAZ,GAA4BG,MAAM,CAACG,OAAP,CAAeM,QAA3C,EAAhC,GACH,CACD,QAAS,CACL,MAAOV,CAAAA,KAAP,CACH,CAdL,CAgBH,CACD,QAAS,CACL,MAAOA,CAAAA,KAAP,CACH,CA/BL,CAiCH,CAlCM","sourcesContent":["import { SET_USER_DATA, STAR_RECIPE, CHANGE_IMAGE } from './actions';\n\nconst initialState = {\n    loged: false,\n    id: null,\n    name: null,\n    mail: null,\n    likes: null,\n    recipes: [],\n    likedPostsIdes: [],\n}\n\nexport const userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_IMAGE: {\n            return {...state, image: action.payload}\n        }\n        case SET_USER_DATA: {\n            if (action.payload.likedPostsIdes === null) {\n                return {...state, ...action.payload, \n                    loged: true, likedPostsIdes: []}\n            }   return {...state, ...action.payload, \n            loged: true, likedPostsIdes: action.payload.likedPostsIdes.split(';') || []}\n        }\n        case STAR_RECIPE: {\n            switch (action.payload.starred) {\n                case true: {\n                    let likedPostIdesCopy = [...state.likedPostsIdes]\n                    const index = likedPostIdesCopy.indexOf(action.payload.recipeId);\n                    if (index > -1) {\n                        likedPostIdesCopy.splice(index, 1);\n                    }\n                    return {...state, likedPostsIdes: likedPostIdesCopy}\n                }\n                case false: {\n                    return {...state, likedPostsIdes: [...state.likedPostsIdes, action.payload.recipeId]}\n                }\n                default: {\n                    return state\n                }\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}