{"ast":null,"code":"var _jsxFileName = \"/Users/samilvaliahmetov/education/programming/local-github/Cookery/src/components/HomePage/listOfSelectedProducts/listOfSelectedProducts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Paper from '@mui/material/Paper';\nimport { selectedProductsConnect } from '../../../connect/selectedProducts/selectedProducts';\nimport Button from \"@mui/material/Button\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport { useState } from 'react';\nimport InputBase from \"@mui/material/InputBase\";\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport '../style.css';\nimport './style.css';\nimport { nanoid } from 'nanoid';\nimport { changeUserRecipeProductCountReducer } from '../../../store/newRecipe/actions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ShowSelectedProducts = _ref => {\n  let {\n    setIconImages,\n    iconImage\n  } = _ref;\n\n  const show = () => {\n    setIconImages(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    style: {\n      color: '#000000',\n      border: 'none',\n      marginBottom: '2%'\n    },\n    variant: \"outlined\",\n    type: \"submit\",\n    onClick: () => show(),\n    children: [\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u044B \", iconImage ? /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 65\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = ShowSelectedProducts;\nexport const SelectedProducts = selectedProductsConnect(_c2 = _s(_ref2 => {\n  _s();\n\n  let {\n    dispatch,\n    setToggleClass,\n    creating,\n    products,\n    changeSelectedState,\n    show,\n    setProducts,\n    lstOfProductsNames\n  } = _ref2;\n  let css = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: '32px'\n  };\n  let css_paper = {\n    borderRadius: '7px',\n    padding: '10px',\n    marginRight: '10px',\n    marginBottom: '10px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'space-between'\n  };\n\n  const checkProduct = item => {\n    changeSelectedState(item);\n  };\n\n  if (setProducts) {\n    setProducts([...lstOfProductsNames]);\n  }\n\n  const checkProducts = (text, productName) => {\n    dispatch(changeUserRecipeProductCountReducer({\n      text,\n      productName\n    }));\n  };\n\n  if (creating) {\n    css = {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr',\n      gap: '12px',\n      padding: '8px',\n      marginBottom: '32px',\n      borderRadius: '15px'\n    };\n    css_paper = {\n      padding: '10px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    };\n\n    if (useMediaQuery('(max-width:1200px)')) {\n      css.gridTemplateColumns = '1fr 1fr 1fr 1fr';\n    }\n\n    if (useMediaQuery('(max-width:1024px)')) {\n      css.gridTemplateColumns = '1fr 1fr 1fr';\n    }\n\n    if (useMediaQuery('(max-width:768px)')) {\n      css.gridTemplateColumns = '1fr 1fr 1fr';\n    }\n\n    if (useMediaQuery('(max-width:525px)')) {\n      css.gridTemplateColumns = '1fr 1fr';\n    }\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  async function toggleClass() {\n    await sleep(2000);\n    setToggleClass(false);\n  }\n\n  const changeStyle = () => {\n    setToggleClass(true);\n    toggleClass();\n  };\n\n  if (!show) {\n    if (Object.keys(products).length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: css,\n        children: Object.keys(products).map(elKey => /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          style: css_paper,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginTop: 'auto',\n                marginBottom: 'auto'\n              },\n              children: products[elKey].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"closeIcon\",\n              onClick: () => checkProduct(elKey),\n              style: {\n                maxWidth: '30px',\n                maxHeight: '30px',\n                minWidth: '30px',\n                minHeight: '30px',\n                color: 'black'\n              },\n              children: /*#__PURE__*/_jsxDEV(CloseRoundedIcon, {\n                style: {\n                  color: 'inherit'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), creating ? /*#__PURE__*/_jsxDEV(InputBase, {\n            style: {\n              width: '100%',\n              borderBottom: '2px solid black'\n            },\n            onChange: e => checkProducts(e.target.value, products[elKey].name),\n            placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this) : null]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    } else {\n      if (setToggleClass) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectedProductsEmpty\",\n          style: {\n            textAlign: 'center',\n            margin: '0 32px',\n            border: '2px dashed black',\n            borderRadius: '8px'\n          },\n          onClick: () => {\n            changeStyle();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              margin: '48px 0'\n            },\n            children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u043E\\u0432 \\u043F\\u0443\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectedProductsEmpty\",\n          style: {\n            textAlign: 'center',\n            margin: '0 32px',\n            border: '2px dashed black',\n            borderRadius: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              margin: '48px 0'\n            },\n            children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u043E\\u0432 \\u043F\\u0443\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  } else {\n    return null;\n  }\n}, \"Lr5LfCW+NQyGZk83wJB1bBcdAhU=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n}));\n_c3 = SelectedProducts;\nexport const ListOfSelectedProducts = _ref3 => {\n  _s2();\n\n  let {\n    creating,\n    setToggleClass\n  } = _ref3;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SelectedProducts, {\n      dispatch: dispatch,\n      setToggleClass: setToggleClass,\n      creating: creating,\n      show: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s2(ListOfSelectedProducts, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c4 = ListOfSelectedProducts;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShowSelectedProducts\");\n$RefreshReg$(_c2, \"SelectedProducts$selectedProductsConnect\");\n$RefreshReg$(_c3, \"SelectedProducts\");\n$RefreshReg$(_c4, \"ListOfSelectedProducts\");","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/local-github/Cookery/src/components/HomePage/listOfSelectedProducts/listOfSelectedProducts.js"],"names":["Paper","selectedProductsConnect","Button","ArrowDropDownIcon","ArrowDropUpIcon","useState","InputBase","CloseRoundedIcon","useMediaQuery","nanoid","changeUserRecipeProductCountReducer","useDispatch","ShowSelectedProducts","setIconImages","iconImage","show","prevState","color","border","marginBottom","SelectedProducts","dispatch","setToggleClass","creating","products","changeSelectedState","setProducts","lstOfProductsNames","css","display","flexWrap","css_paper","borderRadius","padding","marginRight","flexDirection","alignContent","checkProduct","item","checkProducts","text","productName","gridTemplateColumns","gap","justifyContent","sleep","ms","Promise","resolve","setTimeout","toggleClass","changeStyle","Object","keys","length","map","elKey","marginTop","name","maxWidth","maxHeight","minWidth","minHeight","width","borderBottom","e","target","value","textAlign","margin","ListOfSelectedProducts"],"mappings":"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","sourcesContent":["import Paper from '@mui/material/Paper';\nimport { selectedProductsConnect } from '../../../connect/selectedProducts/selectedProducts'\nimport Button from \"@mui/material/Button\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport { useState } from 'react';\nimport InputBase from \"@mui/material/InputBase\";\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport '../style.css';\nimport './style.css';\nimport { nanoid } from 'nanoid';\nimport { changeUserRecipeProductCountReducer } from '../../../store/newRecipe/actions';\nimport { useDispatch } from 'react-redux';\n\nexport const ShowSelectedProducts = ({setIconImages, iconImage}) => {\n    const show = () => {\n        setIconImages(prevState => !prevState)\n    }\n\n    return (\n        <Button \n            style={{\n                color: '#000000',\n                border: 'none',\n                marginBottom: '2%'\n            }}\n            variant=\"outlined\" \n            type=\"submit\"\n            onClick={() => show()}\n        >Выбранные продукты {iconImage ? <ArrowDropDownIcon/> : <ArrowDropUpIcon/>}\n        </Button>\n    )\n}\n\nexport const SelectedProducts = selectedProductsConnect(({dispatch, setToggleClass, creating, products, changeSelectedState, show, setProducts, lstOfProductsNames}) => {\n    let css = {display: 'flex', flexWrap: 'wrap', marginBottom: '32px'};\n    let css_paper = {borderRadius: '7px', padding: '10px', marginRight: '10px', marginBottom: '10px', \n        display: 'flex', flexDirection: 'column', alignContent: 'space-between'}\n\n    const checkProduct = (item) => {\n        changeSelectedState(item)\n    }\n\n    if (setProducts) {\n        setProducts([...lstOfProductsNames])\n    }\n\n    const checkProducts = (text, productName) => {\n        dispatch(changeUserRecipeProductCountReducer({text, productName}))\n    }\n    \n    if (creating) {\n        css = {display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr', gap: '12px',\n            padding: '8px', marginBottom: '32px', borderRadius: '15px'};\n        css_paper = {padding: '10px',\n            display: 'flex', flexDirection: 'column', justifyContent: 'space-between'}\n        if (useMediaQuery('(max-width:1200px)')) {\n            css.gridTemplateColumns = '1fr 1fr 1fr 1fr'\n        }\n        if (useMediaQuery('(max-width:1024px)')) {\n            css.gridTemplateColumns = '1fr 1fr 1fr'\n        }\n        if (useMediaQuery('(max-width:768px)')) {\n            css.gridTemplateColumns = '1fr 1fr 1fr'\n        }\n        if (useMediaQuery('(max-width:525px)')) {\n            css.gridTemplateColumns = '1fr 1fr'\n        }\n    }\n\n    function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    async function toggleClass () {\n        await sleep(2000)\n        setToggleClass(false)\n    }\n\n    const changeStyle = () => {\n        setToggleClass(true)\n        toggleClass()\n    }\n\n    if (!show) {\n        if (Object.keys(products).length > 0) {\n            return (\n                <div style={css}>\n                    {Object.keys(products).map(elKey => (\n                        <Paper elevation={2} style={css_paper} key={nanoid()}>\n                            <div className='button'>\n                                <p style={{marginTop: 'auto', marginBottom: 'auto'}}>{products[elKey].name}</p>\n                                <Button className='closeIcon' onClick={() => checkProduct(elKey)} \n                                        style={{maxWidth: '30px', maxHeight: '30px', minWidth: '30px', minHeight: '30px', color: 'black'}}>\n                                    <CloseRoundedIcon style={{\n                                        color: 'inherit',\n                                    }}/>\n                                </Button>\n                            </div>\n                            {creating ? \n                            <InputBase\n                                style={{width: '100%', borderBottom: '2px solid black'}}\n                                onChange={(e) => checkProducts(e.target.value, products[elKey].name)}\n                                placeholder=\"Добавьте количество\"/> : null}\n                        </Paper>))\n                    }\n                </div>\n            );\n        } else {\n            if (setToggleClass) {\n                return (\n                    <div className=\"selectedProductsEmpty\" style={{\n                        textAlign: 'center', margin: '0 32px', border: '2px dashed black', borderRadius: '8px'\n                    }} onClick={() => {changeStyle()}}>\n                        <h6 style={{margin: '48px 0'}}>Список выбранных продуктов пуст</h6>\n                    </div>)\n            } else {\n                return (\n                    <div className=\"selectedProductsEmpty\" style={{textAlign: 'center', margin: '0 32px', border: '2px dashed black', borderRadius: '8px'}}>\n                        <h6 style={{margin: '48px 0'}}>Список выбранных продуктов пуст</h6>\n                    </div>)\n            }\n        }\n    } else {\n        return null;\n    }\n})\n\nexport const ListOfSelectedProducts = ({creating, setToggleClass}) => {\n    const dispatch = useDispatch()\n    return (<>\n            <SelectedProducts dispatch={dispatch} setToggleClass={setToggleClass} creating={creating} show={false}/>\n        </>)\n}"]},"metadata":{},"sourceType":"module"}