{"ast":null,"code":"var _jsxFileName = \"/Users/samilvaliahmetov/education/programming/schoolProject/my-app/src/routes/Recipes/recipes.js\",\n    _s = $RefreshSig$();\n\nimport { Footer } from \"../../components/Footer/footer\";\nimport { useState, useEffect } from 'react'; // import './style.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resipes = () => {\n  _s();\n\n  const [collectProducts, setCollectProducts] = useState([]);\n\n  async function getRecipes() {\n    const url = 'https://raw.githubusercontent.com/rumblfn/Cookery/main/jsonSettings/recipes.json';\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n\n      for (let elem of data) {\n        let el = elem;\n        el.currentImage = 0;\n        setCollectProducts(collectProducts => [...collectProducts, el]);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  console.log(collectProducts);\n\n  const changeImageIncrease = (item, index) => {\n    item.currentImage++;\n\n    if (item.currentImage > item.images.length - 1) {\n      item.currentImage = 0;\n    }\n\n    let newArr = [...collectProducts];\n    newArr[index] = item;\n    setCollectProducts(newArr);\n  };\n\n  const changeImagedecrease = (item, index) => {\n    item.currentImage--;\n\n    if (item.currentImage < 0) {\n      item.currentImage = item.images.length - 1;\n    }\n\n    let newArr = [...collectProducts];\n    newArr[index] = item;\n    setCollectProducts(newArr);\n  };\n\n  useEffect(() => {\n    getRecipes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products_container\",\n      children: collectProducts.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => changeImagedecrease(item, index),\n          children: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.images[item.currentImage],\n          alt: \"food_image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => changeImageIncrease(item, index),\n          children: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Resipes, \"fFR1sxyr90viOka6fDBdDWL4dX0=\");\n\n_c = Resipes;\nexport default Resipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resipes\");","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/src/routes/Recipes/recipes.js"],"names":["Footer","useState","useEffect","Resipes","collectProducts","setCollectProducts","getRecipes","url","response","fetch","data","json","elem","el","currentImage","e","console","error","log","changeImageIncrease","item","index","images","length","newArr","changeImagedecrease","map","title","id"],"mappings":"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","sourcesContent":["import { Footer } from \"../../components/Footer/footer\";\nimport { useState, useEffect } from 'react';\n// import './style.css';\n\nconst Resipes = () => {\n    const [collectProducts, setCollectProducts] = useState([]);\n    async function getRecipes() {\n        const url = 'https://raw.githubusercontent.com/rumblfn/Cookery/main/jsonSettings/recipes.json';\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            for (let elem of data) {\n                let el = elem\n                el.currentImage = 0\n                setCollectProducts(collectProducts => [...collectProducts, el])\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    console.log(collectProducts)\n\n    const changeImageIncrease = (item, index) => {\n        item.currentImage++;\n        if (item.currentImage > item.images.length - 1) {\n            item.currentImage = 0;\n        }\n        let newArr = [...collectProducts];\n        newArr[index] = item\n        setCollectProducts(newArr)\n    }\n\n    const changeImagedecrease = (item, index) => {\n        item.currentImage--;\n        if (item.currentImage < 0) {\n            item.currentImage = item.images.length - 1;\n        }\n        let newArr = [...collectProducts];\n        newArr[index] = item\n        setCollectProducts(newArr)\n    }\n\n    useEffect(() => {\n        getRecipes();\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"products_container\">\n                {collectProducts.map((item, index) => (\n                    <div className=\"product_box\"\n                        key={item.id}\n                    >\n                        <button onClick={(e) => changeImagedecrease(item, index)}>\n                            left\n                        </button>\n                            <img src={item.images[item.currentImage]} alt='food_image'/>\n                        <button onClick={(e) => changeImageIncrease(item, index)}>\n                            right\n                        </button>\n                        <h3>{item.title}</h3>\n                    </div>\n                ))}\n            </div>\n\n        </div >\n    )\n}\nexport default Resipes;"]},"metadata":{},"sourceType":"module"}