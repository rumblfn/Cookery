{"ast":null,"code":"var _jsxFileName = \"/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/components/CreateRecipeBlock/WidgetToPost.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { nanoid } from 'nanoid';\nimport { recipesConnect } from \"../../connect/recipes/recipes\";\nimport { Link } from 'react-router-dom';\nimport Button from \"@mui/material/Button\";\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './style.css';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Widget = recipesConnect(_c = _s(_ref => {\n  _s();\n\n  let {\n    userId,\n    setImages,\n    recipeData,\n    images,\n    description,\n    setDescription,\n    addNewRecipe\n  } = _ref;\n  const inputRef = useRef(null);\n\n  function encodeImageFileAsURL(element) {\n    let file = element.files[0];\n    let reader = new FileReader();\n\n    reader.onloadend = function () {\n      setImages(prevState => [...prevState, reader.result]);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  const handleUploadedFileImage = e => {\n    try {\n      encodeImageFileAsURL(e.target);\n    } catch {\n      console.log('error');\n    }\n  };\n\n  useEffect(() => {\n    console.log(images);\n  }, [images]);\n\n  const inputClick = () => {\n    console.log('clicked');\n    inputRef.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '16px',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        marginBottom: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile/create/checkProducts\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            borderColor: \"#000000\",\n            color: '#000000'\n          },\n          variant: \"outlined\",\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowBackRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), \" \\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: '16px'\n          },\n          variant: \"outlined\",\n          type: \"submit\",\n          onClick: () => {\n            document.body.style.overflow = \"scroll\";\n            addNewRecipe({\n              \"title\": recipeData.title,\n              \"userId\": userId,\n              \"id\": nanoid(),\n              \"time\": recipeData.time,\n              \"cook\": recipeData.actions,\n              \"lstOfProducts\": recipeData.products,\n              \"products\": recipeData.productsWithCount,\n              \"description\": description,\n              \"images\": images,\n              \"rating\": 0,\n              \"comments\": []\n            });\n          },\n          children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: inputClick,\n        style: {\n          margin: '4%',\n          borderColor: \"#000000\",\n          color: '#000000'\n        },\n        variant: \"outlined\",\n        type: \"submit\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        id: \"file-upload__post\",\n        type: \"file\",\n        onChange: e => {\n          handleUploadedFileImage(e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        style: {\n          border: 'none',\n          margin: '10px 16px',\n          maxHeight: '40vh'\n        },\n        \"aria-label\": \"textarea\",\n        placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n        autoFocus: true,\n        onChange: e => {\n          setDescription(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}, \"cBQ6FQ+sf5H+lvNONLKqtm4aeQ8=\"));\n_c2 = Widget;\nexport const ToPost = () => {\n  _s2();\n\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const recipeData = useSelector(state => state.newRecipe);\n  const userId = useSelector(state => state.user.id);\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    userId: userId,\n    recipeData: recipeData,\n    images: images,\n    setImages: setImages,\n    description: description,\n    setDescription: setDescription\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ToPost, \"nvfNegbrPc+PJFj/Qav69cgKSlI=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c3 = ToPost;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Widget$recipesConnect\");\n$RefreshReg$(_c2, \"Widget\");\n$RefreshReg$(_c3, \"ToPost\");","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/main/client/src/components/CreateRecipeBlock/WidgetToPost.js"],"names":["TextareaAutosize","nanoid","recipesConnect","Link","Button","ArrowBackRoundedIcon","useEffect","useState","useSelector","useRef","Widget","userId","setImages","recipeData","images","description","setDescription","addNewRecipe","inputRef","encodeImageFileAsURL","element","file","files","reader","FileReader","onloadend","prevState","result","readAsDataURL","handleUploadedFileImage","e","target","console","log","inputClick","current","click","padding","display","flexDirection","marginBottom","borderColor","color","marginLeft","document","body","style","overflow","title","time","actions","products","productsWithCount","width","height","margin","border","maxHeight","value","ToPost","state","newRecipe","user","id"],"mappings":";;;;AAAA,OAAOA,gBAAP,MAA6B,gCAA7B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,aAAP;AACA,SAASC,MAAT,QAAuB,OAAvB;;AAGA,OAAO,MAAMC,MAAM,GAAGR,cAAc,SAAC,QAAwF;AAAA;;AAAA,MAAvF;AAACS,IAAAA,MAAD;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA,MAAhC;AAAwCC,IAAAA,WAAxC;AAAqDC,IAAAA,cAArD;AAAqEC,IAAAA;AAArE,GAAuF;AACzH,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;;AACA,WAASU,oBAAT,CAA8BC,OAA9B,EAAuC;AACnC,QAAIC,IAAI,GAAGD,OAAO,CAACE,KAAR,CAAc,CAAd,CAAX;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,SAAP,GAAmB,YAAW;AAC1Bb,MAAAA,SAAS,CAACc,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeH,MAAM,CAACI,MAAtB,CAAd,CAAT;AACH,KAFD;;AAGAJ,IAAAA,MAAM,CAACK,aAAP,CAAqBP,IAArB;AACH;;AAED,QAAMQ,uBAAuB,GAAIC,CAAD,IAAO;AACnC,QAAI;AACAX,MAAAA,oBAAoB,CAACW,CAAC,CAACC,MAAH,CAApB;AACH,KAFD,CAEE,MAAM;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,GAND;;AAQA3B,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,QAAMoB,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAf,IAAAA,QAAQ,CAACiB,OAAT,CAAiBC,KAAjB;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,OAAO,EAAE,MAA3B;AAAmCC,MAAAA,aAAa,EAAE;AAAlD,KAAZ;AAAA,4BACI;AAAK,MAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAE,MAAV;AAAkBE,QAAAA,YAAY,EAAE;AAAhC,OAAZ;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,+BAAT;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE,SADV;AAEHC,YAAAA,KAAK,EAAE;AAFJ,WADX;AAKI,UAAA,OAAO,EAAC,UALZ;AAMI,UAAA,IAAI,EAAC,QANT;AAAA,kCAQI,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,KAAK,EAAE;AACHC,YAAAA,UAAU,EAAE;AADT,WADX;AAII,UAAA,OAAO,EAAC,UAJZ;AAKI,UAAA,IAAI,EAAC,QALT;AAMI,UAAA,OAAO,EAAI,MAAM;AACbC,YAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,QAA/B;AACA9B,YAAAA,YAAY,CAAC;AACT,uBAASJ,UAAU,CAACmC,KADX;AACkB,wBAAUrC,MAD5B;AACoC,oBAAMV,MAAM,EADhD;AAET,sBAAQY,UAAU,CAACoC,IAFV;AAEgB,sBAAQpC,UAAU,CAACqC,OAFnC;AAGT,+BAAiBrC,UAAU,CAACsC,QAHnB;AAG6B,0BAAYtC,UAAU,CAACuC,iBAHpD;AAIT,6BAAerC,WAJN;AAImB,wBAAUD,MAJ7B;AAKT,wBAAU,CALD;AAKI,0BAAY;AALhB,aAAD,CAAZ;AAMH,WAdL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkCI;AAAK,MAAA,KAAK,EAAE;AAACuC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAAZ;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEpB,UAAjB;AACI,QAAA,KAAK,EAAE;AACHqB,UAAAA,MAAM,EAAE,IADL;AAEHd,UAAAA,WAAW,EAAE,SAFV;AAGHC,UAAAA,KAAK,EAAE;AAHJ,SADX;AAMI,QAAA,OAAO,EAAC,UANZ;AAOI,QAAA,IAAI,EAAC,QAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAO,QAAA,GAAG,EAAExB,QAAZ;AAAsB,QAAA,EAAE,EAAC,mBAAzB;AAA6C,QAAA,IAAI,EAAC,MAAlD;AAAyD,QAAA,QAAQ,EAAEY,CAAC,IAAI;AAACD,UAAAA,uBAAuB,CAACC,CAAD,CAAvB;AAA2B;AAApG;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCJ,eA+CI;AAAK,MAAA,KAAK,EAAE;AAACQ,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE;AAAjC,OAAZ;AAAA,6BACA,QAAC,gBAAD;AACI,QAAA,KAAK,EAAE;AAACiB,UAAAA,MAAM,EAAE,MAAT;AAAiBD,UAAAA,MAAM,EAAE,WAAzB;AAAsCE,UAAAA,SAAS,EAAE;AAAjD,SADX;AAEI,sBAAW,UAFf;AAGI,QAAA,WAAW,EAAC,mGAHhB;AAII,QAAA,SAAS,MAJb;AAKI,QAAA,QAAQ,EAAG3B,CAAD,IAAO;AACbd,UAAAA,cAAc,CAACc,CAAC,CAACC,MAAF,CAAS2B,KAAV,CAAd;AACH;AAPL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6DH,CAzFmC,kCAA7B;MAAMhD,M;AA2Fb,OAAO,MAAMiD,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAM,CAAC7C,MAAD,EAASF,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMM,UAAU,GAAGL,WAAW,CAACoD,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA9B;AACA,QAAMlD,MAAM,GAAGH,WAAW,CAACoD,KAAK,IAAIA,KAAK,CAACE,IAAN,CAAWC,EAArB,CAA1B;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,MAAM,EAAEpD,MAAhB;AAAwB,IAAA,UAAU,EAAEE,UAApC;AAAgD,IAAA,MAAM,EAAEC,MAAxD;AAAgE,IAAA,SAAS,EAAEF,SAA3E;AAAsF,IAAA,WAAW,EAAEG,WAAnG;AAAgH,IAAA,cAAc,EAAEC;AAAhI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CATM;;IAAM2C,M;UAGUnD,W,EACJA,W;;;MAJNmD,M","sourcesContent":["import TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { nanoid } from 'nanoid';\nimport { recipesConnect } from \"../../connect/recipes/recipes\";\nimport { Link } from 'react-router-dom';\nimport Button from \"@mui/material/Button\";\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './style.css';\nimport { useRef } from 'react';\n\n\nexport const Widget = recipesConnect(({userId, setImages, recipeData, images, description, setDescription, addNewRecipe}) => {\n    const inputRef = useRef(null)\n    function encodeImageFileAsURL(element) {\n        let file = element.files[0];\n        let reader = new FileReader();\n        reader.onloadend = function() {\n            setImages(prevState => [...prevState, reader.result])\n        }\n        reader.readAsDataURL(file);\n    }\n    \n    const handleUploadedFileImage = (e) => {\n        try {\n            encodeImageFileAsURL(e.target)\n        } catch {\n            console.log('error')\n        }\n    }\n    \n    useEffect(() => {\n        console.log(images)\n    }, [images])\n\n    const inputClick = () => {\n        console.log('clicked')\n        inputRef.current.click()\n    }\n\n    return (\n        <div style={{padding: '16px', display: 'flex', flexDirection: 'column'}}>\n            <div style={{display: 'flex', marginBottom: '16px'}}>\n                <Link to='/profile/create/checkProducts'>\n                    <Button\n                        style={{\n                            borderColor: \"#000000\",\n                            color: '#000000',\n                        }}\n                        variant=\"outlined\" \n                        type=\"submit\"\n                    >\n                        <ArrowBackRoundedIcon/> Вернуться\n                    </Button>\n                </Link>\n                <Link to='/profile'>\n                    <Button\n                        style={{\n                            marginLeft: '16px',\n                        }}\n                        variant=\"outlined\"\n                        type=\"submit\"\n                        onClick = {() => { \n                            document.body.style.overflow = \"scroll\";\n                            addNewRecipe({\n                                \"title\": recipeData.title, \"userId\": userId, \"id\": nanoid(),\n                                \"time\": recipeData.time, \"cook\": recipeData.actions,\n                                \"lstOfProducts\": recipeData.products, \"products\": recipeData.productsWithCount,\n                                \"description\": description, \"images\": images,\n                                \"rating\": 0, \"comments\": []})\n                        }}\n                        >Опубликовать\n                    </Button>\n                </Link>\n            </div>\n            <div style={{width: '100%', height: '100%'}}>\n                <Button onClick={inputClick}\n                    style={{\n                        margin: '4%',\n                        borderColor: \"#000000\",\n                        color: '#000000',\n                    }}\n                    variant=\"outlined\" \n                    type=\"submit\"\n                >Загрузить изображение\n                </Button>\n                <input ref={inputRef} id=\"file-upload__post\" type=\"file\" onChange={e => {handleUploadedFileImage(e)}}/>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n            <TextareaAutosize\n                style={{border: 'none', margin: '10px 16px', maxHeight: '40vh'}}\n                aria-label=\"textarea\"\n                placeholder=\"Добавьте описание\"\n                autoFocus\n                onChange={(e) => {\n                    setDescription(e.target.value);\n                }}\n            />\n            </div>\n        </div>\n    )\n})\n\nexport const ToPost = () => {\n    const [images, setImages] = useState([])\n    const [description, setDescription] = useState('')\n    const recipeData = useSelector(state => state.newRecipe)\n    const userId = useSelector(state => state.user.id)\n\n    return (\n        <Widget userId={userId} recipeData={recipeData} images={images} setImages={setImages} description={description} setDescription={setDescription}/>\n    )\n}"]},"metadata":{},"sourceType":"module"}