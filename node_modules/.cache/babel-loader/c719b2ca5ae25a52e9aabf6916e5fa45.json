{"ast":null,"code":"exports = module.exports = SemVer; // The debug function is excluded entirely from the minified version.\n\n/* nomin */\n\nvar debug;\n/* nomin */\n\nif (typeof process === 'object' &&\n/* nomin */\nprocess.env &&\n/* nomin */\nprocess.env.NODE_DEBUG &&\n/* nomin */\n/\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */\n  debug = function () {\n    /* nomin */\n    var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */\n\n    args.unshift('SEMVER');\n    /* nomin */\n\n    console.log.apply(console, args);\n    /* nomin */\n  };\n  /* nomin */\nelse\n  /* nomin */\n  debug = function () {}; // Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\n\nexports.SEMVER_SPEC_VERSION = '2.0.0';\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991; // The actual regexps go on exports.re\n\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0; // The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'; // ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'; // ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')'; // ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')'; // ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'; // ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'; // ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'; // ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\nsrc[FULL] = '^' + FULLPLAIN + '$'; // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\n\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)'; // Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\n\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'; // Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\n\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'; // Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\n\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'; // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'; // An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\n\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'; // this one has to use the /g flag\n\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\n\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$'; // Star ranges basically just allow anything at all.\n\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'; // Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\n\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i]) re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\n\nfunction parse(version, loose) {\n  if (version instanceof SemVer) return version;\n  if (typeof version !== 'string') return null;\n  if (version.length > MAX_LENGTH) return null;\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version)) return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\n\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\nexports.clean = clean;\n\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose) return version;else version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH) throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n  if (!(this instanceof SemVer)) return new SemVer(version, loose);\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n  if (!m) throw new TypeError('Invalid Version: ' + version);\n  this.raw = version; // these are actually numbers\n\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) throw new TypeError('Invalid major version');\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) throw new TypeError('Invalid minor version');\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) throw new TypeError('Invalid patch version'); // numberify any prerelease numeric ids\n\n  if (!m[4]) this.prerelease = [];else this.prerelease = m[4].split('.').map(function (id) {\n    if (/^[0-9]+$/.test(id)) {\n      var num = +id;\n      if (num >= 0 && num < MAX_SAFE_INTEGER) return num;\n    }\n\n    return id;\n  });\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length) this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function () {\n  return this.version;\n};\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n  return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) other = new SemVer(other, this.loose); // NOT having a prerelease is > having one\n\n  if (this.prerelease.length && !other.prerelease.length) return -1;else if (!this.prerelease.length && other.prerelease.length) return 1;else if (!this.prerelease.length && !other.prerelease.length) return 0;\n  var i = 0;\n\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined) return 0;else if (b === undefined) return 1;else if (a === undefined) return -1;else if (a === b) continue;else return compareIdentifiers(a, b);\n  } while (++i);\n}; // preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\n\n\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n\n    case 'prerelease':\n      if (this.prerelease.length === 0) this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n\n    case 'pre':\n      if (this.prerelease.length === 0) this.prerelease = [0];else {\n        var i = this.prerelease.length;\n\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) this.prerelease = [identifier, 0];\n        } else this.prerelease = [identifier, 0];\n      }\n\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\n\nfunction inc(version, release, loose, identifier) {\n  if (typeof loose === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\n\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre' + key;\n          }\n        }\n      }\n\n      return 'prerelease';\n    }\n\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\nvar numeric = /^[0-9]+$/;\n\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : a > b ? 1 : 0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\n\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\n\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\n\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\n\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\n\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\n\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\n\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\n\nfunction sort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\n\nfunction rsort(list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\n\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\n\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\n\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\n\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\n\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\n\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\n\nfunction cmp(a, op, b, loose) {\n  var ret;\n\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n\n    case '':\n    case '=':\n    case '==':\n      ret = eq(a, b, loose);\n      break;\n\n    case '!=':\n      ret = neq(a, b, loose);\n      break;\n\n    case '>':\n      ret = gt(a, b, loose);\n      break;\n\n    case '>=':\n      ret = gte(a, b, loose);\n      break;\n\n    case '<':\n      ret = lt(a, b, loose);\n      break;\n\n    case '<=':\n      ret = lte(a, b, loose);\n      break;\n\n    default:\n      throw new TypeError('Invalid operator: ' + op);\n  }\n\n  return ret;\n}\n\nexports.Comparator = Comparator;\n\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose) return comp;else comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator)) return new Comparator(comp, loose);\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n  if (this.semver === ANY) this.value = '';else this.value = this.operator + this.semver.version;\n  debug('comp', this);\n}\n\nvar ANY = {};\n\nComparator.prototype.parse = function (comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n  if (!m) throw new TypeError('Invalid comparator: ' + comp);\n  this.operator = m[1];\n  if (this.operator === '=') this.operator = ''; // if it literally is just '>' or '' then allow anything.\n\n  if (!m[2]) this.semver = ANY;else this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function () {\n  return this.value;\n};\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.loose);\n  if (this.semver === ANY) return true;\n  if (typeof version === 'string') version = new SemVer(version, this.loose);\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nexports.Range = Range;\n\nfunction Range(range, loose) {\n  if (range instanceof Range && range.loose === loose) return range;\n  if (!(this instanceof Range)) return new Range(range, loose);\n  this.loose = loose; // First, split based on boolean or ||\n\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function () {\n  return this.range;\n};\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose); // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range); // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]); // `~ 1.2.3` => `~1.2.3`\n\n  range = range.replace(re[TILDETRIM], tildeTrimReplace); // `^ 1.2.3` => `^1.2.3`\n\n  range = range.replace(re[CARETTRIM], caretTrimReplace); // normalize spaces\n\n  range = range.split(/\\s+/).join(' '); // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe);\n    });\n  }\n\n  set = set.map(function (comp) {\n    return new Comparator(comp, loose);\n  });\n  return set;\n}; // Mostly just for testing and legacy API reasons\n\n\nexports.toComparators = toComparators;\n\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n} // comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\n\n\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n} // ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\n\n\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-') pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n    } else // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n    debug('tilde return', ret);\n    return ret;\n  });\n} // ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\n\n\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n    if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) {\n      if (M === '0') ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-') pr = '-' + pr;\n\n      if (M === '0') {\n        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n      } else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n\n      if (M === '0') {\n        if (m === '0') ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n      } else ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n    }\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n    if (gtlt === '=' && anyX) gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm) m = 0;\n      if (xp) p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm) M = +M + 1;else m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n    return ret;\n  });\n} // Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\n\n\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose); // Looseness is ignored here.  star is always as loose as it gets!\n\n  return comp.trim().replace(re[STAR], '');\n} // This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\n\n\nfunction hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) from = '';else if (isX(fm)) from = '>=' + fM + '.0.0';else if (isX(fp)) from = '>=' + fM + '.' + fm + '.0';else from = '>=' + from;\n  if (isX(tM)) to = '';else if (isX(tm)) to = '<' + (+tM + 1) + '.0.0';else if (isX(tp)) to = '<' + tM + '.' + (+tm + 1) + '.0';else if (tpr) to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;else to = '<=' + to;\n  return (from + ' ' + to).trim();\n} // if ANY of the sets match ALL of its comparators, then pass\n\n\nRange.prototype.test = function (version) {\n  if (!version) return false;\n  if (typeof version === 'string') version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version)) return true;\n  }\n\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY) continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) return true;\n      }\n    } // Version has a -pre, but it's not one of the ones we like.\n\n\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\n\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\n\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function (version) {\n    return satisfies(version, range, loose);\n  }).sort(function (a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.minSatisfying = minSatisfying;\n\nfunction minSatisfying(versions, range, loose) {\n  return versions.filter(function (version) {\n    return satisfies(version, range, loose);\n  }).sort(function (a, b) {\n    return compare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\n\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n} // Determine if version is less than all the versions possible in the range\n\n\nexports.ltr = ltr;\n\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n} // Determine if version is greater than all the versions possible in the range.\n\n\nexports.gtr = gtr;\n\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\n\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n  var gtfn, ltefn, ltfn, comp, ecomp;\n\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  } // If it satisifes the range it is not outside\n\n\n  if (satisfies(version, range, loose)) {\n    return false;\n  } // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n    var high = null;\n    var low = null;\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0');\n      }\n\n      high = high || comparator;\n      low = low || comparator;\n\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    }); // If the edge version comparator has a operator then our version\n    // isn't outside it\n\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    } // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n\n\n    if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.prerelease = prerelease;\n\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n}","map":{"version":3,"sources":["/Users/samilvaliahmetov/education/programming/schoolProject/my-app/node_modules/node-gyp/node_modules/semver/semver.js"],"names":["exports","module","SemVer","debug","process","env","NODE_DEBUG","test","args","Array","prototype","slice","call","arguments","unshift","console","log","apply","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","loose","length","r","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","num","build","format","join","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","ret","Comparator","comp","value","semver","ANY","operator","Range","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","charAt","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","maxSatisfying","versions","minSatisfying","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","forEach","comparator","parsed"],"mappings":"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","sourcesContent":["exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return compare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n"]},"metadata":{},"sourceType":"script"}