{"version":3,"sources":["components/Header/header.js","store/user/actions.js","store/recipes/actions.js","store/recipes/reducer.js","store/recipes/selectors.js","store/products/actions.js","store/products/reducer.js","store/products/selectors.js","connect/recipes/recipes.js","components/Recipe/recipe.js","routes/RecipesPage/index.js","connect/products/products.js","components/HomePage/listOfProducts/listOfProducts.js","connect/selectedProducts/selectedProducts.js","store/newRecipe/actions.js","components/HomePage/listOfSelectedProducts/listOfSelectedProducts.js","components/HomePage/listOfReciepes/listOfReciepes.js","routes/HomePage/index.js","components/Login/index.js","routes/LoginPage/index.js","components/PersonalInformation/info.js","components/CreateNewRecipe/index.js","components/usersRecipes/usersRecipes.js","components/CreateRecipeBlock/WidgetToPost.js","components/CreateRecipeBlock/WidgetMain.js","components/CreateRecipeBlock/WidgetSelectedProducts.js","components/CreateRecipeBlock/index.js","routes/StarredRecipesPage/index.js","routes/ProfilePage/index.js","components/SignUp/index.js","routes/RegistrationPage/index.js","routes/OnlyRecipesPage/index.js","hocks/PrivateRoute.js","components/Footer/footer.js","App.js","store/user/reducer.js","store/newRecipe/reducer.js","store/index.js","index.js"],"names":["Item","styled","li","Overlay","div","props","open","OverlayMenu","ul","NavBarItem","link","text","menu","setBarActive","css_span","color","not_show","Typography","variant","component","fontSize","to","onClick","style","textDecoration","className","Header","tablet","useMediaQuery","bar_css","useState","bar_active","document","body","overflow","Box","sx","height","m","p","AppBar","position","background","boxShadow","Toolbar","display","justifyContent","Button","borderRadius","SET_USER_DATA","STAR_RECIPE","CHANGE_IMAGE","ADD_NEW_RECIPE","SET_RECIPES","SET_RECIPES_ALL","CLEAR_REDUCER","SET_STARRED_RECIPES","initialState","userRecipes","recipes","starred_recipes","getRecipes","state","getUserRecipes","TOGGLE_SELECTED_STATE","FILTER_PRODUCTS","ADD_ALL_PRODUCTS","toggleSelectedState","key","type","payload","products","initialProducts","selectedProducts","selectedProductsNames","getProducts","getSelectedProducts","getSelectedProductsNames","recipesConnect","connect","dispatch","addNewRecipe","item","setRicepes","data","setRicepesReducer","starRecipeRecipe","starRecipeRecipeReducer","OverlayRight","Gallery","GalleryRight","GalleryImagesOnly","RecipeInfo","page","id","user","useSelector","likedPostsIdes","indexOf","starred","setStarred","useDispatch","recipeId","selector","recipeMain","recipe","starFunction","loged","Axios","post","userId","then","response","prevState","borderBottom","title","description","map","index","Paper","elevation","padding","marginRight","marginBottom","marginTop","flexDirection","cook","images","length","margin","gridTemplateColumns","gap","width","src","alt","alignItems","rating","maxWidth","maxHeight","minWidth","minHeight","time","RecipesPage","useParams","productsConnect","changeSelectedState","filterState","filterProducts","Widget","isLoading","toggleClass","setInputValue","inputValue","checkEmail","marginRightProp","maxHeightProp","marginLeft","backgroundColor","borderColor","productName","InputBase","onChange","event","target","value","toLowerCase","placeholder","textAlign","CircularProgress","Object","keys","elKey","name","hidden","selected","nanoid","ListOfProducts","userData","setCheckEmail","setIsLoading","useEffect","mail","get","prod","Boolean","selectedProductsConnect","lstOfProductsNames","SET_USER_RECIPE_NEW_DATA","CHANGE_NEW_RECIPE_PRODUCT_COUNT","setUserRecipeNewDataReducer","ShowSelectedProducts","setIconImages","iconImage","border","SelectedProducts","setToggleClass","creating","show","setProducts","css","flexWrap","css_paper","alignContent","checkProducts","sleep","ms","Promise","resolve","setTimeout","a","overflowY","changeStyle","e","ListOfSelectedProducts","searchField","setSearchField","format","allRecipesBool","newRecipes","checkProductsInRecipe","prods","lstOfProducts","includes","obj","isEmpty","values","objectFit","class","ListOfReciepes","css_desc","css_laptop","css_tablet","css_tablet2","css_mobile","HomePage","default_size","laptop","tablet2","Login","navigate","useNavigate","email","setEmail","password","setPassword","error","setError","userDataHandler","setUserDataReducer","handleSubmit","preventDefault","params","userEmail","userPassword","onSubmit","TextField","label","mt","mb","Alert","severity","LoginPage","PersonalInformation","image","likes","encodeImageFileAsURL","element","file","files","reader","FileReader","onloadend","result","imageBase64","readAsDataURL","err","htmlFor","handleUploadedFileImage","SavedRecipes","loadingDivCss","UserRecipes","largePhone","setImages","recipeData","setDescription","inputRef","useRef","actions","productsWithCount","current","click","ref","aspectRatio","TextareaAutosize","autoFocus","ToPost","newRecipe","WidgetMain","setTitle","setTime","required","WidgetSelectedProducts","newAction","setNewAction","setActions","newProds","push","focus","css_desc_main","top","left","css_desc_block","css_tablet_main","css_tablet_block","CreateRecipeBlock","css_1","css_2","right","path","StarredRecipesPage","setEmptyRecipes","recipesIdes","ProfilePage","ProfilePageRoutes","Registration","setName","nameError","setNameError","passwordError","setPasswordError","emailError","setEmailError","mediumRegex","RegExp","test","signUp","userName","res","errno","SignUp","AllRecipesPage","PrivateRoute","authed","children","Footer","paddingBottom","App","userIsLoged","backgroundImage","comments","persistConfig","storage","whitelist","rootReducer","combineReducers","action","newProducts","newSelectedProducts","newSelectedProductsNames","userRecipeCopy","recipesCopy","settedRecipes","forEach","JSON","parse","settedUserStarredRecipes","settedUserRecipes","stringify","split","likedPostIdesCopy","splice","product","persistedReducer","persistReducer","store","createStore","persistedStore","persistStore","ReactDOM","render","StrictMode","persistor","getElementById"],"mappings":"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","file":"static/js/main.0d421d92.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography, Box } from '@mui/material'\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport './style.css'\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen';\nimport Button from \"@mui/material/Button\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useState } from 'react';\nimport styled from \"styled-components\";\n\nconst Item = styled.li``;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  height: ${props => (props.open ? \"100vh\" : \"0\")};\n  width: 100vw;\n  background: ${props => (props.open ? \"black\" : \"black\")};\n  transition: all 0.4s ease-in-out;\n  z-index: 2;\n\n  @media (min-width: 769px) {\n    display: none;\n  }\n`;\n\nconst OverlayMenu = styled.ul`\n  list-style: none;\n  position: absolute;\n  left: 50%;\n  top: 45%;\n  transform: translate(-50%, -50%);\n\n  li {\n    opacity: ${props => (props.open ? 1 : 0)};\n    font-size: 25px;\n    margin: 50px 0px;\n    transition: opacity 0.4s ease-in-out;\n  }\n\n  li:nth-child(2) {\n    margin: 50px 0px;\n  }\n`;\n\nconst NavBarItem = ({link, text, menu, setBarActive, not_show}) => {\n    let css_span = {}\n    if (menu) { css_span = { color: 'white' }}\n\n    if (not_show) { return null }\n    return (\n        <Typography variant=\"h6\" component=\"span\" fontSize='24px'>\n            <Link to={link} onClick={() => setBarActive(false)} style={{ textDecoration: 'none', color: 'white' }}>\n                <span className='gradient-text' style={css_span}>{text}</span>\n            </Link>\n        </Typography>\n    )\n}\n\nexport const Header = () => {\n    const tablet = useMediaQuery('(max-width:768px)');\n\n    const bar_css = {color: 'black', fontSize: '36px'}\n    const [bar_active, setBarActive] = useState(false);\n\n    const changeIcon = () => {\n        setBarActive(!bar_active);\n    }\n\n    if (bar_active) { document.body.style.overflow = \"hidden\";\n    } else { document.body.style.overflow = \"scroll\"; }\n\n    return (\n        <Box sx={{height: '64px', m: 0, p: 0}}>\n            <AppBar className='container' position=\"static\" sx={{ background: 'white', boxShadow: 'none'}}>\n                <Toolbar sx={{ display: \"flex\", justifyContent: 'space-between' }}>\n                    <div>\n                        <Typography variant=\"h6\" component=\"span\" fontSize='30px'>\n                            <Link to=\"/\" onClick={() => setBarActive(false)} style={{ textDecoration: 'none', color: 'black' }}>\n                                <span className='gradient-text heading'>Cookery</span>\n                            </Link>\n                        </Typography>\n                    </div>\n                    {tablet ? \n                    <div>\n                        <Button className=\"menuIcon\" style={{ color: 'black', borderRadius: '20px' }} onClick={() => changeIcon()}>\n                            {bar_active ? <MenuOpenIcon style={bar_css}/> : <MenuIcon style={bar_css}/>}\n                        </Button>\n                    </div> :\n                    <div>\n                        <NavBarItem link={\"/login\"} text={\"Login / \"} setBarActive={setBarActive}/>\n                        <NavBarItem link={\"/allRecipes\"} text={\"All recipes / \"} setBarActive={setBarActive}/>\n                        <NavBarItem link={\"/profile\"} text={\"Profile / \"} setBarActive={setBarActive}/>\n                    </div>}\n                </Toolbar>\n                <Overlay open={bar_active}>\n                    <OverlayMenu open={bar_active}>\n                        <Item>\n                            <NavBarItem link={\"/allRecipes\"} text={\"All recipes\"} menu={true} \n                                        setBarActive={setBarActive} not_show={!bar_active}/>\n                        </Item>\n                        <Item>\n                            <NavBarItem link={\"/profile\"} text={\"Profile\"} menu={true} \n                                        setBarActive={setBarActive} not_show={!bar_active}/>\n                        </Item>\n                        <Item>\n                            <NavBarItem link={\"/login\"} text={\"Login\"} menu={true}\n                                        setBarActive={setBarActive} not_show={!bar_active}/>\n                        </Item>\n                    </OverlayMenu>\n                </Overlay>\n            </AppBar>\n        </Box >\n    )\n}","export const SET_USER_DATA = 'SET_USER_DATA';\nexport const STAR_RECIPE = 'STAR_RECIPE';\nexport const CHANGE_IMAGE = 'CHANGE_IMAGE';\n\nexport const setUserDataReducer = (data) => ({\n    type: SET_USER_DATA,\n    payload: data,\n})\n\nexport const starRecipeUserReducer = (data)  => ({\n    type: STAR_RECIPE,\n    payload: data,\n})\n\nexport const setUserProfileImage = (payload) => ({\n    type: CHANGE_IMAGE,\n    payload\n})","export const ADD_NEW_RECIPE = 'ADD_NEW_RECIPE';\nexport const SET_RECIPES = 'SET_RECIPES';\nexport const SET_RECIPES_ALL = 'SET_RECIPES_ALL';\nexport const CLEAR_REDUCER = 'CLEAR_REDUCER';\nexport const STAR_RECIPE = 'STAR_RECIPE';\nexport const SET_STARRED_RECIPES ='SET_STARRED_RECIPES';\n\nexport const addNewRecipeReducer = (recipe) => ({\n    type: ADD_NEW_RECIPE,\n    payload: recipe,\n})\n\nexport const setRecipesWithAPI = (recipes) => ({\n    type: SET_RECIPES,\n    payload: recipes,\n})\n\nexport const setRicepesReducer = (data) => ({\n    type: SET_RECIPES_ALL,\n    payload: data\n})\n\nexport const clearReducer = () => ({\n    type: CLEAR_REDUCER\n})\n\nexport const starRecipeRecipeReducer = (data)  => ({\n    type: STAR_RECIPE,\n    payload: data,\n})\n\nexport const setStarredRecipes = (payload) => ({\n    type: SET_STARRED_RECIPES,\n    payload\n})","import { ADD_NEW_RECIPE, SET_RECIPES, SET_RECIPES_ALL, CLEAR_REDUCER, STAR_RECIPE, SET_STARRED_RECIPES } from './actions';\nimport Axios from 'axios';\n\nconst initialState = {\n    userRecipes: {},\n    recipes: {},\n    starred_recipes: {},\n}\n\nexport const recipesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case STAR_RECIPE: {\n            switch (action.payload.starred) {\n                case true: {\n                    let userRecipeCopy = {...state.userRecipes}\n                    let recipesCopy = {...state.recipes}\n                    const recipeId = action.payload.recipeId\n                    if (recipeId in userRecipeCopy) {\n                        userRecipeCopy[recipeId].rating -= 1;\n                    }\n                    if (recipeId in recipesCopy) {\n                        recipesCopy[recipeId].rating -= 1;\n                    }\n                    return {...state, userRecipes: userRecipeCopy, recipes: recipesCopy}\n                }\n                case false: {\n                    let userRecipeCopy = {...state.userRecipes}\n                    let recipesCopy = {...state.recipes}\n                    const recipeId = action.payload.recipeId\n                    if (recipeId in userRecipeCopy) {\n                        userRecipeCopy[recipeId].rating += 1;\n                    }\n                    if (recipeId in recipesCopy) {\n                        recipesCopy[recipeId].rating += 1;\n                    }\n                    return {...state, userRecipes: userRecipeCopy, recipes: recipesCopy}\n                }\n                default: {\n                    return state\n                }\n            }\n        }\n        case SET_RECIPES_ALL: {\n            const settedRecipes = {}\n            action.payload.forEach((item) => {\n                settedRecipes[item.id] = {\n                    comments: JSON.parse(item.comments),\n                    cook: JSON.parse(item.cook),\n                    description: JSON.parse(item.description),\n                    id: item.id,\n                    images: JSON.parse(item.images) || [],\n                    lstOfProducts: JSON.parse(item.lstOfProducts),\n                    products: JSON.parse(item.products),\n                    rating: item.rating,\n                    time: item.time,\n                    title: item.title,\n                    userId: item.userId\n                }\n            })\n            return {...state, recipes: {...state.recipes, ...settedRecipes}}\n        }\n        case SET_STARRED_RECIPES: {\n            const settedUserStarredRecipes = {}\n            action.payload.forEach((item) => {\n                settedUserStarredRecipes[item.id] = {\n                    comments: JSON.parse(item.comments),\n                    cook: JSON.parse(item.cook),\n                    description: JSON.parse(item.description),\n                    id: item.id,\n                    images: JSON.parse(item.images) || [],\n                    lstOfProducts: JSON.parse(item.lstOfProducts),\n                    products: JSON.parse(item.products),\n                    rating: item.rating,\n                    time: item.time,\n                    title: item.title,\n                    userId: item.userId\n                }\n            })\n            return {...state, starred_recipes: {...settedUserStarredRecipes}}\n        }\n        case SET_RECIPES: {\n            const settedUserRecipes = {}\n            action.payload.forEach((item) => {\n                settedUserRecipes[item.id] = {\n                    comments: JSON.parse(item.comments),\n                    cook: JSON.parse(item.cook),\n                    description: JSON.parse(item.description),\n                    id: item.id,\n                    images: JSON.parse(item.images) || [],\n                    lstOfProducts: JSON.parse(item.lstOfProducts),\n                    products: JSON.parse(item.products),\n                    rating: item.rating,\n                    time: item.time,\n                    title: item.title,\n                    userId: item.userId\n                }\n            })\n            return {...state, userRecipes: {...state.userRecipes, ...settedUserRecipes}}\n        }\n        case ADD_NEW_RECIPE: {\n            Axios.post('https://cookery-app.herokuapp.com/reciepes/insert', {\n                ...action.payload, images: JSON.stringify(action.payload.images)\n            }).then(() => {})\n            return {...state,\n                userRecipes: {...state.userRecipes, [action.payload.id]: action.payload}}\n        }\n        case CLEAR_REDUCER: {\n            return {...state, userRecipes: {}}\n        }\n        default: {\n            return state\n        }\n    }\n}","export const getRecipes = (state) => state.recipes.recipes || [];\nexport const getUserRecipes = (state) => state.recipes.userRecipes || [];","export const TOGGLE_SELECTED_STATE = 'TOGGLE_SELECTED_STATE';\nexport const FILTER_PRODUCTS = 'FILTER_PRODUCTS'\nexport const ADD_ALL_PRODUCTS = 'ADD_ALL_PRODUCTS'\n\nexport const toggleSelectedState = (key) => ({\n    type: TOGGLE_SELECTED_STATE,\n    payload: key,\n})\n\nexport const filterProducts = (text) => ({\n    type: FILTER_PRODUCTS,\n    payload: text,\n})\n\nexport const addProductsWithAPI = (payload) => ({\n    type: ADD_ALL_PRODUCTS,\n    payload\n})","import { TOGGLE_SELECTED_STATE } from './actions';\nimport { FILTER_PRODUCTS } from './actions';\nimport { ADD_ALL_PRODUCTS } from './actions';\n\nconst initialState = {\n    products: {},\n    initialProducts: {},\n    selectedProducts: {},\n    selectedProductsNames: []\n}\n\nexport const productsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ALL_PRODUCTS: {\n            return {\n                ...state, \n                products: {...state.products, ...action.payload}, \n                initialProducts: {...state.products, ...action.payload},\n            }\n        }\n        case FILTER_PRODUCTS: {\n            const newProducts = {}\n            for (let item in state.initialProducts) {\n                if (state.initialProducts[item].name.includes(action.payload)) {\n                    newProducts[item] = state.initialProducts[item]\n                }\n            }\n            return {\n                ...state,\n                products: {\n                    ...newProducts\n                }\n            }\n        }\n        case TOGGLE_SELECTED_STATE: {\n            const prods = {...state.products}\n            prods[action.payload].selected = !prods[action.payload].selected\n            \n            const newSelectedProducts = {}\n            const newSelectedProductsNames = []\n            for (let item in state.products) {\n                if (state.products[item].selected) {\n                    newSelectedProducts[item] = state.products[item]\n                    newSelectedProductsNames.push(state.products[item].name)\n                }\n            }\n\n            return {\n                ...state,\n                products: prods,\n                selectedProducts: newSelectedProducts,\n                selectedProductsNames: newSelectedProductsNames\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}","export const getProducts = (state) => state.products.products || [];\nexport const getSelectedProducts = (state) => state.products.selectedProducts || [];\nexport const getSelectedProductsNames = (state) => state.products.selectedProductsNames || [];","import {connect} from \"react-redux\";\nimport { getRecipes, getUserRecipes } from '../../store/recipes';\nimport { getSelectedProducts } from '../../store/products';\nimport { addNewRecipeReducer } from '../../store/recipes';\nimport { setRicepesReducer } from \"../../store/recipes\";\nimport { starRecipeRecipeReducer } from \"../../store/recipes\";\n\nconst mapStateToProps = (state) => ({\n    recipes: getRecipes(state),\n    userRecipes: getUserRecipes(state),\n    selectedProducts:  getSelectedProducts(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    addNewRecipe(item) {\n        return dispatch(addNewRecipeReducer(item));\n    },\n    setRicepes(data) {\n        return dispatch(setRicepesReducer(data))\n    },\n    starRecipeRecipe(data) {\n        return dispatch(starRecipeRecipeReducer(data))\n    }\n})\n\nexport const recipesConnect = connect(mapStateToProps, mapDispatchToProps);","import Paper from '@mui/material/Paper';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport StarPurple500RoundedIcon from '@mui/icons-material/StarPurple500Rounded';\nimport StarRoundedIcon from '@mui/icons-material/StarRounded';\nimport Button from \"@mui/material/Button\";\nimport { useState } from 'react';\nimport { starRecipeUserReducer } from '../../store/user/actions';\nimport { recipesConnect } from '../../connect/recipes/recipes';\nimport Axios from 'axios';\n\nconst Box = styled.div`\n    display: flex;\n    justify-content: space-between;\n    @media (max-width: 1024px) {\n        display: grid;\n        grid-template-columns: 2fr 1fr;\n    }\n    @media (max-width: 628px) {\n        grid-template-columns: 1fr;\n    }\n`\n\nconst Overlay = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: 80vh;\n    width: 60%;\n    margin-left: 15%;\n    @media (max-width: 1024px) {\n        margin-left: 5%;\n        width: 90%;\n    }\n`;\n\nconst OverlayRight = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    @media (max-width: 628px) {\n        align-items: normal;\n        margin: 5%;\n    }\n`\n\nconst Gallery = styled.div`\n    @media (max-width: 1024px) {\n        display: none;\n    }\n`\n\nconst GalleryRight = styled.div`\n    @media (min-width: 1025px) {\n        display: none;\n    }\n`\n\nconst GalleryImagesOnly = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 5%;\n    @media (max-width: 628px) {\n        grid-template-columns: 1fr 1fr;\n    }\n`\n\nexport const RecipeInfo = recipesConnect(({page, id, starRecipeRecipe}) => {\n    let user = useSelector(state => state.user)\n    const [starred, setStarred] = useState(user.likedPostsIdes.indexOf(id) === -1 ? false : true)\n    const dispatch = useDispatch()\n\n    const recipeId = id;\n    let selector = {}\n\n    page === 'profile' ? selector = useSelector(state => state.recipes.userRecipes) :\n    page === 'starred' ? selector = useSelector(state => state.recipes.starred_recipes) : \n    selector = useSelector(state => state.recipes.recipes)\n\n    let recipeMain = {};\n\n    for (let recipe in selector) {\n        if (recipe == recipeId) {\n            recipeMain = selector[recipe];\n            break;\n        }\n    }\n\n    const starFunction = () => {\n        if (user.loged) {\n            if (starred) {\n                Axios.post('https://cookery-app.herokuapp.com/recipes/likes/update', {\n                    recipeId: recipeId, type: -1, userId: user.id\n                }).then((response) => {})\n            } else {\n                Axios.post('https://cookery-app.herokuapp.com/recipes/likes/update', {\n                    recipeId: recipeId, type: 1, userId: user.id\n                }).then((response) => {})}\n        \n            setStarred(prevState => !prevState)\n            dispatch(starRecipeUserReducer({recipeId, starred}))\n        }\n    }\n\n    return (\n        <div className='container'>\n            <Box>\n                <Overlay>\n                    <h4 style={{borderBottom: '2px solid black'}}>{recipeMain.title}</h4>\n                    <p>{recipeMain.description}</p>\n                    <h5 style={{borderBottom: '2px solid black'}}>Список необходимых продуктов</h5>\n                    <div>\n                        {recipeMain.products.map((item, index) => (\n                            <Paper elevation={2} style={{\n                                    borderRadius: '7px', padding: '10px', marginRight: '10px', marginBottom: '10px'}}\n                                    key={index}>\n                                <p style={{marginTop: 'auto', marginBottom: 'auto'}}>{item[0]} - {item[1]}</p>\n                            </Paper>))\n                        }\n                    </div>\n                    <h5 style={{borderBottom: '2px solid black', marginTop: '16px'}}>Список действий</h5>\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        {recipeMain.cook.map((item, index) => (\n                            <p key={index} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                            <span>{index + 1}</span>. {item}\n                            </p>))\n                        }\n                    </div>\n                    {recipeMain.images.length > 0 ? \n                        <Gallery>\n                            <h5 style={{borderBottom: '2px solid black', margin: '16px 0'}}>Галлерея</h5>\n                            <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '5%'}}> \n                            {\n                                recipeMain.images.map((item, index) => (\n                                    <img style={{width: '100%', borderRadius: '15px'}} key={`${index}${index}`} src={item} alt='img'/>))\n                            }\n                            </div>\n                        </Gallery>\n                        : null}\n                </Overlay>\n                <OverlayRight>\n                    <div style={{\n                        display: 'flex', alignItems: 'center'\n                    }}>Rating: {recipeMain.rating}\n                        <Button sx={{color: 'black', borderRadius: '10px', m: 1, width: 'fit-content'}}\n                                style={{maxWidth: '30px', maxHeight: '30px', minWidth: '30px', minHeight: '30px'}}\n                                onClick = {() => {starFunction()}}>\n                            {starred ? <StarRoundedIcon/>: <StarPurple500RoundedIcon/>}\n                        </Button>\n                    </div>\n                    <div style={{\n                        display: 'flex', alignItems: 'center'\n                    }}>time: {recipeMain.time}\n                        <Button sx={{color: 'black', borderRadius: '10px', m: 1, width: 'fit-content'}}\n                                style={{maxWidth: '30px', maxHeight: '30px', minWidth: '30px', minHeight: '30px'}}>\n                            <AccessTimeIcon/>\n                        </Button>\n                    </div>\n                    {recipeMain.images.length > 0 ? \n                        <GalleryRight>\n                            <h5 style={{borderBottom: '2px solid black', margin: '16px 0'}}>Галлерея</h5>\n                            <GalleryImagesOnly> \n                            {\n                                recipeMain.images.map((item, index) => (\n                                    <img style={{width: '100%', borderRadius: '15px'}} key={`${index}${index}`} src={item} alt='img'/>))\n                            }\n                            </GalleryImagesOnly>\n                        </GalleryRight>\n                        : null}\n                </OverlayRight>\n            </Box>\n        </div>\n    )\n})","import { useParams } from \"react-router-dom\";\nimport { RecipeInfo } from \"../../components/Recipe/recipe\";\n\n\nexport const RecipesPage = () => {\n    const {recipeId, page} = useParams();\n    return (\n        <div>\n            <RecipeInfo page={page} id={recipeId}/>\n        </div>\n    )\n}","import {connect} from \"react-redux\";\nimport { getProducts } from '../../store/products';\nimport { toggleSelectedState } from \"../../store/products\";\nimport { filterProducts } from \"../../store/products\";\n\nconst mapStateToProps = (state) => ({\n    products: getProducts(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    changeSelectedState(item) {\n        return dispatch(toggleSelectedState(item));\n    },\n    filterState(text) {\n        return dispatch(filterProducts(text));\n    }\n})\n\nexport const productsConnect = connect(mapStateToProps, mapDispatchToProps);","import { productsConnect } from '../../../connect/products/products';\nimport CheckIcon from '@mui/icons-material/Check';\nimport './style.css';\nimport '../style.css';\nimport Paper from '@mui/material/Paper';\nimport InputBase from \"@mui/material/InputBase\";\nimport Axios from 'axios';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect } from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProductsWithAPI } from '../../../store/products';\nimport { nanoid } from 'nanoid';\n\n\nconst Widget = productsConnect(({isLoading, toggleClass, setInputValue, inputValue, checkEmail, products, changeSelectedState, filterState, marginRightProp, maxHeightProp}) => {\n    let default_size = '70vh'\n\n    const checkProduct = (item) => {\n        changeSelectedState(item)\n    }\n\n    const filterProducts = (event) => {\n        let text = event.target.value.toLowerCase()\n        setInputValue(text)\n        filterState(text);\n    }\n\n    const addNewProduct = () => {\n        Axios.post('https://cookery-app.herokuapp.com/products/insert', {\n            productName: inputValue\n        }).then(() => {\n        })\n    }\n\n    return (\n        <>\n        {checkEmail ?\n        <div style={{marginBottom: '16px', marginLeft: '16px'}}>\n            <Button variant=\"outlined\" sx={{\n                color: 'black', backgroundColor: 'white', borderColor: 'black',\n                \"&:hover\": {\n                    backgroundColor: 'rgb(17,17,50)',\n                    color: 'white',\n                    borderColor: 'white',\n                }\n            }} onClick={addNewProduct}>\n                Добавить\n            </Button>\n        </div> : null\n        }\n        <Paper className={toggleClass ? \"blob\": null} elevation={3} style={{borderRadius: '7px', padding: '10px', marginRight: marginRightProp, overflow: 'auto', maxHeight: maxHeightProp || default_size}}>\n            <div style={{display: 'flex', justifyContent: 'space-between', marginBottom: '25px'}}>\n                <InputBase\n                    onChange={filterProducts}\n                    sx={{m: 0, width: '100%', borderBottom: '2px solid black'}} placeholder=\"Введите название продукта\"\n                />\n            </div>\n            <div>\n            {isLoading ? \n            <div style={{textAlign: 'center', padding: '32px 0'}}>\n                <CircularProgress sx={{color: 'black'}}/>\n            </div> :\n            (Object.keys(products).map(elKey => (\n                <div key={nanoid()} className=\"block\" onClick={() => checkProduct(elKey)}>\n                    <p>{products[elKey].name}</p>\n                    <CheckIcon hidden={!products[elKey].selected}/>\n                </div>))\n            )}\n            </div>\n        </Paper>\n        </>\n    )\n})\n\nexport const ListOfProducts = ({toggleClass}) => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state.products.products);\n    const userData = useSelector((state) => state.user)\n\n    const [checkEmail, setCheckEmail] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const initialProducts = {}\n\n    useEffect(() => {\n        if (userData.mail === 'toshamilgis@gmail.com') {\n            setCheckEmail(true)\n        }\n\n        if (Object.keys(selector).length === 0) {\n            setIsLoading(true)\n            Axios.get('https://cookery-app.herokuapp.com/products/get').then((response) => {\n                for (let prod of response.data) {\n                    if (prod.name) {\n                        initialProducts[prod.id] = {\n                            name: prod.name,\n                            selected: Boolean(+prod.selected)\n                        }\n                    }\n                }\n                dispatch(addProductsWithAPI(initialProducts))\n                setIsLoading(false)\n            })\n        }\n    }, [])\n\n    return (\n        <Widget isLoading={isLoading} toggleClass={toggleClass} checkEmail={checkEmail} setInputValue={setInputValue} inputValue={inputValue}/>\n    )\n}","import {connect} from \"react-redux\";\nimport { getSelectedProducts, getSelectedProductsNames } from '../../store/products';\nimport { toggleSelectedState } from \"../../store/products\";\n\nconst mapStateToProps = (state) => ({\n    products: getSelectedProducts(state),\n    lstOfProductsNames: getSelectedProductsNames(state)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    changeSelectedState(item) {\n        return dispatch(toggleSelectedState(item));\n    },\n})\n\nexport const selectedProductsConnect = connect(mapStateToProps, mapDispatchToProps);","export const SET_USER_RECIPE_NEW_DATA = 'SET_USER_RECIPE_NEW_DATA';\nexport const CHANGE_NEW_RECIPE_PRODUCT_COUNT = 'CHANGE_NEW_RECIPE_PRODUCT_COUNT';\n\nexport const setUserRecipeNewDataReducer = (data) => ({\n    type: SET_USER_RECIPE_NEW_DATA,\n    payload: data,\n})\n\nexport const changeUserRecipeProductCountReducer = (data) => ({\n    type: CHANGE_NEW_RECIPE_PRODUCT_COUNT,\n    payload: data,\n})","import Paper from '@mui/material/Paper';\nimport { selectedProductsConnect } from '../../../connect/selectedProducts/selectedProducts'\nimport Button from \"@mui/material/Button\";\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport { useState } from 'react';\nimport InputBase from \"@mui/material/InputBase\";\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport '../style.css';\nimport './style.css';\nimport { nanoid } from 'nanoid';\nimport { changeUserRecipeProductCountReducer } from '../../../store/newRecipe/actions';\nimport { useDispatch } from 'react-redux';\n\nexport const ShowSelectedProducts = ({setIconImages, iconImage}) => {\n    const show = () => {\n        setIconImages(prevState => !prevState)\n    }\n\n    return (\n        <Button \n            style={{\n                color: '#000000',\n                border: 'none',\n                marginBottom: '2%'\n            }}\n            variant=\"outlined\" \n            type=\"submit\"\n            onClick={() => show()}\n        >Выбранные продукты {iconImage ? <ArrowDropDownIcon/> : <ArrowDropUpIcon/>}\n        </Button>\n    )\n}\n\nexport const SelectedProducts = selectedProductsConnect(({dispatch, setToggleClass, creating, products, changeSelectedState, show, setProducts, lstOfProductsNames}) => {\n    let css = {display: 'flex', flexWrap: 'wrap', marginBottom: '32px'};\n    let css_paper = {borderRadius: '7px', padding: '10px', marginRight: '10px', marginBottom: '10px', \n        display: 'flex', flexDirection: 'column', alignContent: 'space-between'}\n\n    const checkProduct = (item) => {\n        changeSelectedState(item)\n    }\n\n    if (setProducts) {\n        setProducts([...lstOfProductsNames])\n    }\n\n    const checkProducts = (text, productName) => {\n        dispatch(changeUserRecipeProductCountReducer({text, productName}))\n    }\n    \n    if (creating) {\n        css = {display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '2%',\n            padding: '2%', marginBottom: '32px', boxShadow: '0px 5px 10px 2px rgba(34, 60, 80, 0.2)',\n            maxHeight: '60vh', overflowY: 'scroll', borderRadius: '15px'};\n        css_paper = {borderRadius: '7px', padding: '10px',\n            display: 'flex', flexDirection: 'column', justifyContent: 'space-between'}\n        if (useMediaQuery('(max-width:1024px)')) {\n            css.gridTemplateColumns = '1fr 1fr'\n        }\n        if (useMediaQuery('(max-width:768px)')) {\n            css.gridTemplateColumns = '1fr 1fr 1fr'\n        }\n        if (useMediaQuery('(max-width:525px)')) {\n            css.gridTemplateColumns = '1fr 1fr'\n        }\n    }\n\n    function sleep(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    async function toggleClass () {\n        await sleep(2000)\n        setToggleClass(false)\n    }\n\n    const changeStyle = () => {\n        setToggleClass(true)\n        toggleClass()\n    }\n\n    if (!show) {\n        if (Object.keys(products).length > 0) {\n            return (\n                <div style={css}>\n                    {Object.keys(products).map(elKey => (\n                        <Paper elevation={2} style={css_paper}\n                                key={nanoid()}>\n                            <div className='button'>\n                                <p style={{marginTop: 'auto', marginBottom: 'auto'}}>{products[elKey].name}</p>\n                                <Button className='closeIcon' onClick={() => checkProduct(elKey)} \n                                        style={{maxWidth: '30px', maxHeight: '30px', minWidth: '30px', minHeight: '30px', color: 'black'}}>\n                                    <CloseRoundedIcon style={{\n                                        color: 'inherit',\n                                    }}/>\n                                </Button>\n                            </div>\n                            {creating ? \n                            <InputBase\n                                style={{width: '100%', borderBottom: '2px solid black'}}\n                                onChange={(e) => checkProducts(e.target.value, products[elKey].name)}\n                                placeholder=\"Добавьте количество\"/> : null}\n                        </Paper>))\n                    }\n                </div>\n            );\n        } else {\n            if (setToggleClass) {\n                return (\n                    <div className=\"selectedProductsEmpty\" style={{\n                        textAlign: 'center', margin: '0 32px', border: '2px dashed black', borderRadius: '8px'\n                    }} onClick={() => {changeStyle()}}>\n                        <h6 style={{margin: '48px 0'}}>Список выбранных продуктов пуст</h6>\n                    </div>)\n            } else {\n                return (\n                    <div className=\"selectedProductsEmpty\" style={{textAlign: 'center', margin: '0 32px', border: '2px dashed black', borderRadius: '8px'}}>\n                        <h6 style={{margin: '48px 0'}}>Список выбранных продуктов пуст</h6>\n                    </div>)\n            }\n        }\n    } else {\n        return null;\n    }\n})\n\nexport const ListOfSelectedProducts = ({creating, setToggleClass}) => {\n    const [iconImage, setIconImages] = useState(true)\n    const dispatch = useDispatch()\n    return (<>\n            <ShowSelectedProducts iconImage={iconImage} setIconImages={setIconImages}/>\n            <SelectedProducts dispatch={dispatch} setToggleClass={setToggleClass} creating={creating} show={iconImage}/>\n        </>)\n}","import { recipesConnect } from \"../../../connect/recipes/recipes\"\nimport Paper from '@mui/material/Paper';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { Search } from '../../../components/searchLine/index'\nimport { useSelector } from 'react-redux';\nimport \"./style.css\";\n\nlet css = {display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px', marginTop: '48px'}\n\nexport const Widget = recipesConnect(({searchField, setSearchField, format, allRecipesBool, userRecipes, setRicepes, setIsLoading, recipes, selectedProducts}) => {\n    let newRecipes = {}\n\n    if (allRecipesBool) {\n\n        if (format === 'computer') { css = {...css, gridTemplateColumns: '1fr 1fr 1fr 1fr'}\n        } else if (format === 'laptop') { css = {...css, gridTemplateColumns: '1fr 1fr 1fr'}\n        } else if (format === 'tablet') { css = {...css, gridTemplateColumns: '1fr 1fr 1fr'}\n        } else if (format === 'tablet2') { css = {...css, gridTemplateColumns: '1fr 1fr'}\n        } else if (format === 'phone') { css = {...css, gridTemplateColumns: '1fr'}\n        } \n\n        if (allRecipesBool === 'starred') {\n            newRecipes = useSelector(state => state.recipes.starred_recipes)\n        } else {\n            newRecipes = {...recipes}\n        }\n\n    } else {\n\n        if (format === 'computer') { css = {...css, gridTemplateColumns: '1fr 1fr 1fr'}\n        } else if (format === 'laptop') { css = {...css, gridTemplateColumns: '1fr 1fr'}\n        } else if (format === 'tablet') { css = {...css, gridTemplateColumns: '1fr 1fr'}\n        } else if (format === 'tablet2') { css = {...css, gridTemplateColumns: '1fr'}\n        } else if (format === 'phone') { css = {...css, gridTemplateColumns: '1fr'} }\n\n        useEffect(() => {\n            if (Object.keys(recipes).length <= Object.keys(userRecipes).length) {\n                setIsLoading(true)\n                Axios.get('https://cookery-app.herokuapp.com/recipes/get')\n                    .then((response) => {\n                        setRicepes(response.data)\n                        setIsLoading(false)\n                    }\n                )\n            }\n        }, [])\n    \n        const isEmpty = (obj) => { for (let key in obj) { return true } return false }\n    \n        const checkProductsInRecipe = (recipe, prods) => {\n            for (let key in prods) {\n                if (recipe.lstOfProducts.includes(prods[key].name.toLowerCase())) {\n                    return true\n                }} return false }\n        \n        if (isEmpty(selectedProducts)) {\n            for (let recipe in recipes) {\n                if (checkProductsInRecipe(recipes[recipe], selectedProducts)) {\n                    newRecipes[recipe] = {...recipes[recipe]}}}}}\n    \n    const setSearchFieldFunc = (val) => {\n        setSearchField(val)\n    }\n\n    return (\n        <div>\n            {/* { allRecipesBool ? \n            <Search setSearchFieldFunc={setSearchFieldFunc} format={format}/> \n            : null } */}\n            <div style={css}>\n                {Object.values(newRecipes).map(item => (\n                    <Link to={`/recipes/${item.id}/${allRecipesBool === 'starred' ? 'starred' : 'all'}`} key={item.id}>\n                        <Paper elevation={3} className=\"paper-recipe-box\" style={{\n                            borderRadius: '7px', height: '200px', overflow: 'hidden', position: 'relative',\n                            justifyContent: 'space-between', display: 'flex', alignItems: 'center', flexDirection: 'column'\n                        }}>\n                            {item.images[0] ? \n                                <img style={{width: '100%', height: '100%', objectFit: 'cover'}} src={item.images[0]} alt='food'/>\n                                : <div style={{backgroundColor: 'black', width: '100%', height: '100%', position: 'relative'}}/>\n                            }\n                            <div class=\"overlay\">\n                                <div class=\"text\">{item.title}</div>\n                            </div>\n                        </Paper>\n                    </Link>\n                ))}\n            </div>\n        </div>\n    )\n})\n\nexport const ListOfReciepes = ({format, allRecipesBool}) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchField, setSearchField] = useState('')\n\n    return <Widget format={format} allRecipesBool={allRecipesBool} \n                isLoading={isLoading} setIsLoading={setIsLoading}\n                searchField={searchField} setSearchField={setSearchField}/>\n}","import React, {useState} from 'react';\nimport { ListOfProducts } from '../../components/HomePage/listOfProducts/listOfProducts';\nimport { ListOfSelectedProducts } from '../../components/HomePage/listOfSelectedProducts/listOfSelectedProducts';\nimport { ListOfReciepes } from '../../components/HomePage/listOfReciepes/listOfReciepes'\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n\nconst css_desc = {\n    display: 'grid',\n    gridTemplateColumns: '3fr 7fr',\n    gap: '1%'\n}\n\nconst css_laptop = {\n    display: 'grid',\n    gridTemplateColumns: '7fr 13fr',\n    gap: '1%'\n}\n\nconst css_tablet = {\n    display: 'grid',\n    gridTemplateColumns: '2fr 3fr',\n    gap: '1%'\n}\n\nconst css_tablet2 = {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: '1%'\n}\n\nconst css_mobile = {\n    display: 'flex',\n    flexDirection: 'column',\n}\n\n\nexport const HomePage = () => {\n    const [toggleClass, setToggleClass] = useState(false)\n    let default_size = '70vh'\n    let css = css_desc\n    const laptop = useMediaQuery('(max-width:1024px)');\n    const tablet = useMediaQuery('(max-width:768px)');\n    const tablet2 = useMediaQuery('(max-width:628px)');\n    const phone = useMediaQuery('(max-width:425px)');\n    let format = 'computer'\n\n    if (phone) {\n        css = css_mobile;\n        default_size = '40vh'\n        format = 'phone'\n    } else if (tablet2) {\n        css = css_tablet2;\n        format = 'tablet2'\n    } else if (tablet) {\n        css = css_tablet;\n        format = 'tablet'\n    }else if (laptop) {\n        css = css_laptop;\n        format = 'laptop'\n    }\n    return ( \n        <div className=\"container\">\n            <div style={css}>\n                <div style={{marginBottom: '24px'}}>\n                    <ListOfProducts toggleClass={toggleClass} marginRightProp='2%' maxHeightProp={default_size}/>\n                </div>\n                <div>\n                    <ListOfSelectedProducts setToggleClass={setToggleClass} />\n                    <ListOfReciepes format={format} />\n                </div>\n            </div>\n        </div>\n    )\n}","import { useState } from \"react\";\nimport {Link} from 'react-router-dom';\nimport './loginAndSignUpStyles.css'\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Axios from 'axios';\nimport Alert from '@mui/material/Alert';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setUserDataReducer } from \"../../store/user/actions\";\nimport { clearReducer } from \"../../store/recipes\";\n\n\nexport const Login = () => {\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const userDataHandler = (data) => {\n        if (!data) {\n            setError('Неверный email или пароль')\n        } else {\n            dispatch(setUserDataReducer(data))\n            dispatch(clearReducer())\n            navigate(\"/profile\");\n        }\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(\"\");\n        if (!email) {\n            setError('Укажите почту')\n        } else if (!password) {\n            setError('Введите пароль')\n        } else {\n            try {\n                await Axios.get('https://cookery-app.herokuapp.com/users/get', {\n                    params: {\n                        userEmail: email,\n                        userPassword: password,\n                    }\n                }).then((response) => {\n                    setEmail('')\n                    setPassword('')\n                    userDataHandler(response.data[0])\n                })\n            } catch (error) {\n                setError(error);\n            }\n        }\n    };\n\n    return (\n        <div className='mainPage'>\n            <form onSubmit={handleSubmit}>\n                <h4>Авторизация</h4>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        width: '100%'\n                    }}\n                >\n                    <TextField\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        label=\"Почта\"\n                        color=\"background\"\n                        name=\"email\"\n                        type=\"email\"\n                        onChange={e => {setEmail(e.target.value);}}\n                        value={email}\n                        sx={{m: 1, mt: 3}}\n                    />\n                    <TextField\n                        sx={{m: 1, mb: 3}}\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        color=\"background\"\n                        label=\"Пароль\"\n                        name=\"password\"\n                        onChange={e => {setPassword(e.target.value);}}\n                        value={password}\n                        type=\"password\"\n                    />\n                </Box>\n                <div>\n                    {error && <Alert sx={{mb: 2}} severity=\"error\">{error}</Alert>}\n                    <Button \n                        style={{\n                            borderColor: \"#000000\",\n                            color: '#000000',\n                        }}\n                        variant=\"outlined\" \n                        type=\"submit\"\n                    >Войти\n                    </Button>\n                </div>\n                <br/>\n                <p>\n                    У вас нет аккаунта? <Link to=\"/signup\">Регистрация</Link>\n                </p>\n            </form>\n        </div>\n    );\n};","import { Login } from '../../components/Login/index';\n\n\nexport const LoginPage = () => {\n    return (\n        <div className='container'>\n            <Login />\n        </div>\n    )\n}","import Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport './style.css';\nimport Axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { setUserProfileImage } from '../../store/user/actions';\n\n\nexport const PersonalInformation = ({userId, image, mail, name, likes}) => {\n    const dispatch = useDispatch();\n    let css = { display: 'flex', justifyContent: 'space-between', margin: '1%' }\n\n    if (useMediaQuery('(max-width:525px)')) {\n        css = { display: 'flex', flexDirection: 'column', margin: '2%' }\n    }\n\n    function encodeImageFileAsURL(element) {\n        try {\n            let file = element.files[0];\n            let reader = new FileReader();\n            reader.onloadend = function() {\n            dispatch(setUserProfileImage(reader.result))\n            Axios.post('https://cookery-app.herokuapp.com/user/image/upload', {\n                imageBase64: reader.result,\n                userId\n            }).then((result) => {})}\n            reader.readAsDataURL(file);\n        } catch (err) {\n    }}\n\n    const handleUploadedFileImage = (e) => {\n        encodeImageFileAsURL(e.target)}\n\n    return (\n        <div style={css}>\n            <div>\n                <h2> Личная информация </h2>\n                <div>\n                    <Paper elevation={2} sx={{p: 2, mb: 2}}>\n                        <Typography variant=\"h6\">\n                            {mail}\n                        </Typography>\n                    </Paper>\n                </div>\n                <div>\n                    <Paper elevation={2} sx={{p: 2}}>\n                        <Typography variant=\"h6\">\n                            {name}\n                        </Typography>\n                    </Paper>\n                </div>\n            </div>\n            <div style={{marginLeft: '2%', marginTop: '3%'}}>\n                <div className='profileImgWrap'>\n                    <img className=\"profileImg\" style={{borderRadius: '15px'}}\n                        src={image ? image : \"https://picsum.photos/200\"} alt='profile' />\n                    <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n                        Загрузить\n                    </label>\n                    <input id=\"file-upload\" type=\"file\" onChange={e => {handleUploadedFileImage(e)}}/>\n                </div>\n            </div>\n        </div>\n    )\n}","import { Link } from 'react-router-dom';\n\nexport const SavedRecipes = () => {\n    return (\n        <div style={{ \n            marginTop: '24px',\n            display: 'flex',\n            alignItems: 'center',\n        }}>\n            <Link to='/profile/starred' style={{display: 'flex'}}>\n                <h4>Сохраненные рецепты</h4>\n            </Link>\n        </div>\n    )\n}","import { recipesConnect } from \"../../connect/recipes/recipes\"\nimport Paper from '@mui/material/Paper';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { setRecipesWithAPI } from \"../../store/recipes\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from \"@mui/material/Button\";\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\nimport './style.css';\n\nconst loadingDivCss = {textAlign: 'center', padding: '32px 0'}\n\nexport const Widget = ({userRecipes, largePhone}) => {\n    const userId = useSelector((state) => state.user.id);\n    const [isLoading, setIsLoading] = useState(false);\n    const selector = useSelector((state) => state.recipes.userRecipes);\n    const dispatch = useDispatch()\n\n    const css = {display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '10px'}\n    if (largePhone) { css.gridTemplateColumns = '1fr 1fr' }\n\n    useEffect(() => {\n        if (Object.values(selector).length === 0) {\n            setIsLoading(true)\n            Axios.get('https://cookery-app.herokuapp.com/user/reciepes/get', {\n                params: { id: userId }\n            }).then((response) => {\n                setIsLoading(false)\n                dispatch(setRecipesWithAPI(response.data))\n            })\n        }\n    }, [])\n\n    return (\n        <div style={{marginTop: '32px'}}>\n            <div style={{ display: 'flex', marginBottom: '16px' }}>\n            <h4>Ваши рецепты</h4>\n            <Link to='/profile/create'>\n                <Button \n                    style={{\n                        marginLeft: '12px',\n                        borderColor: \"#000000\",\n                        color: '#000000',\n                    }}\n                    variant=\"outlined\" \n                    type=\"submit\"\n                >\n                    <AddRoundedIcon/>\n                </Button>\n            </Link>\n        </div>\n            <div>\n            {Object.values(userRecipes).length ? \n                isLoading ? \n                    <div style={loadingDivCss}>\n                        <CircularProgress sx={{color: 'black'}}/>\n                    </div> \n                    :<div style={css} className=\"profile-recipes-view\">\n                        {Object.values(userRecipes).map(item => (\n                        <Link key={item.id} to={`/recipes/${item.id}/profile`}>\n                            <Paper elevation={3} className=\"paper-recipe-box\" style={{\n                                borderRadius: '7px', height: '200px', overflow: 'hidden', position: 'relative',\n                                justifyContent: 'space-between', display: 'flex', alignItems: 'center', flexDirection: 'column'\n                            }}>\n                                {item.images[0] ? \n                                    <img style={{width: '100%', height: '100%', objectFit: 'cover'}} src={item.images[0]} alt='food'/>\n                                    : <div style={{backgroundColor: 'black', width: '100%', height: '100%', position: 'relative'}}/>\n                                }\n                                <div class=\"overlay\">\n                                    <div class=\"text\">{item.title}</div>\n                                </div>\n                            </Paper>\n                        </Link>))}\n                    </div> \n                :<div className=\"selectedProductsEmpty\" style={{textAlign: 'center', margin: '1%', border: '2px dashed black', borderRadius: '8px'}}>\n                    <h6 style={{margin: '48px 0'}}>Список рецептов пуст</h6>\n                </div>}\n            </div>\n        </div>\n    )\n}\n\nexport const UserRecipes = recipesConnect(Widget)","import TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { nanoid } from 'nanoid';\nimport { recipesConnect } from \"../../connect/recipes/recipes\";\nimport { Link } from 'react-router-dom';\nimport Button from \"@mui/material/Button\";\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './style.css';\nimport { useRef } from 'react';\nimport Paper from '@mui/material/Paper';\n\n\nexport const Widget = recipesConnect(({userId, setImages, recipeData, images, description, setDescription, addNewRecipe}) => {\n    const inputRef = useRef(null)\n    function encodeImageFileAsURL(element) {\n        let file = element.files[0];\n        let reader = new FileReader();\n        reader.onloadend = function() {\n            setImages(prevState => [...prevState, reader.result])\n        }\n        reader.readAsDataURL(file);\n    }\n    \n    const handleUploadedFileImage = (e) => {\n        try {\n            encodeImageFileAsURL(e.target)\n        } catch {\n        }\n    }\n\n    const inputClick = () => {\n        inputRef.current.click()\n    }\n\n    return (\n        <div style={{padding: '16px', display: 'flex', flexDirection: 'column'}}>\n            <div style={{display: 'flex', marginBottom: '16px'}}>\n                <Link to='/profile/create/checkProducts'>\n                    <Button\n                        style={{\n                            borderColor: \"#000000\",\n                            color: '#000000',\n                        }}\n                        variant=\"outlined\" \n                        type=\"submit\"\n                    >\n                        <ArrowBackRoundedIcon/>\n                    </Button>\n                </Link>\n                <Link to='/profile'>\n                    <Button\n                        style={{\n                            marginLeft: '16px',\n                        }}\n                        variant=\"outlined\"\n                        type=\"submit\"\n                        onClick = {() => { \n                            document.body.style.overflow = \"scroll\";\n                            addNewRecipe({\n                                \"title\": recipeData.title, \"userId\": userId, \"id\": nanoid(),\n                                \"time\": recipeData.time, \"cook\": recipeData.actions,\n                                \"lstOfProducts\": recipeData.products, \"products\": recipeData.productsWithCount,\n                                \"description\": description, \"images\": images,\n                                \"rating\": 0, \"comments\": []})\n                        }}\n                        >Опубликовать\n                    </Button>\n                </Link>\n            </div>\n            <div style={{width: '100%', height: '100%'}}>\n                <Button onClick={inputClick}\n                    style={{\n                        margin: '0 4% 3%',\n                        borderColor: \"#000000\",\n                        color: '#000000',\n                    }}\n                    variant=\"outlined\" \n                    type=\"submit\"\n                >Загрузить изображение\n                </Button>\n                <input ref={inputRef} id=\"file-upload__post\" type=\"file\" onChange={e => {handleUploadedFileImage(e)}}/>\n                <div style={{display: 'grid', gap: '12px', gridTemplateColumns: '1fr 1fr'}}>\n                    {\n                        images.map(item => (\n                            <Paper elevation={3} className=\"paper-recipe-box\" style={{aspectRatio: '1 / 1',\n                                borderRadius: '7px', overflow: 'hidden', position: 'relative',\n                                justifyContent: 'space-between', display: 'flex', alignItems: 'center', flexDirection: 'column'\n                            }}>\n                                <img style={{width: '100%', height: '100%', objectFit: 'cover'}} src={item} alt='food'/>\n                            </Paper>\n                        ))\n                    }\n                </div>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n            <TextareaAutosize\n                style={{border: 'none', margin: '10px 16px', maxHeight: '40vh'}}\n                aria-label=\"textarea\"\n                placeholder=\"Добавьте описание\"\n                autoFocus\n                onChange={(e) => {\n                    setDescription(e.target.value);\n                }}\n            />\n            </div>\n        </div>\n    )\n})\n\nexport const ToPost = () => {\n    const [images, setImages] = useState([])\n    const [description, setDescription] = useState('')\n    const recipeData = useSelector(state => state.newRecipe)\n    const userId = useSelector(state => state.user.id)\n\n    return (\n        <Widget userId={userId} recipeData={recipeData} images={images} setImages={setImages} description={description} setDescription={setDescription}/>\n    )\n}","import ArrowForwardRoundedIcon from '@mui/icons-material/ArrowForwardRounded';\nimport { ListOfProducts } from '../HomePage/listOfProducts/listOfProducts';\nimport { selectedProductsConnect } from '../../connect/selectedProducts/selectedProducts';\nimport { useNavigate } from 'react-router-dom';\nimport InputBase from \"@mui/material/InputBase\";\nimport Button from \"@mui/material/Button\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { setUserRecipeNewDataReducer } from '../../store/newRecipe/actions';\n\nexport const WidgetMain = selectedProductsConnect(({products, lstOfProductsNames, tablet}) => {\n    const [title, setTitle] = useState('')\n    const [time, setTime] = useState('')\n    const navigate = useNavigate();\n    const dispatch = useDispatch()\n\n    const data = useSelector(state => state.newRecipe)\n\n    const checkForm = () => {\n        if (title && time && Object.keys(products).length) {\n            dispatch(\n                setUserRecipeNewDataReducer({\n                    time, title,\n                    products: [...lstOfProductsNames]\n                })\n            )\n            navigate(\"/profile/create/checkProducts\");\n        }\n    }\n\n    return (\n        <div>\n            <InputBase\n                    sx={{m: 2, width: '80%'}} \n                    style={{borderBottom: '2px solid black'}}\n                    placeholder=\"Введите название\"\n                    onChange={(e) => {\n                        setTitle(e.target.value);\n                    }}\n                />\n                <div style={{\n                    display: 'flex',\n                }}>\n                    <p style={{margin: '16px'}}>Введите время приготовления</p>\n                    <input \n                        style={{margin: '10px 0'}} \n                        type=\"time\" id=\"appt\" \n                        name=\"appt\" required\n                        onChange={(e) => {setTime(e.target.value)}}\n                    />\n                </div>\n                <div style={{\n                    margin: '16px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                }}>\n                    <p style={{\n                            marginBottom: '0px',\n                    }}>Выберите подходящие продукты</p>\n                    <Button \n                        style={{\n                            marginLeft: '16px'\n                        }}\n                        variant=\"outlined\" \n                        type=\"submit\"\n                        onClick={checkForm}>\n                        Дальше <ArrowForwardRoundedIcon/>\n                    </Button>\n                </div>\n                {tablet ? <ListOfProducts maxHeightProp='100%' />: <ListOfProducts maxHeightProp='60vh' />}\n        </div>\n    )\n})","import InputBase from \"@mui/material/InputBase\";\nimport Button from \"@mui/material/Button\";\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\nimport { ListOfSelectedProducts } from '../../components/HomePage/listOfSelectedProducts/listOfSelectedProducts';\nimport { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setUserRecipeNewDataReducer } from '../../store/newRecipe/actions';\nimport { useNavigate } from 'react-router-dom';\n\n\nexport const WidgetSelectedProducts = () => {\n    const [newAction, setNewAction] = useState('');\n    const [actions, setActions] = useState([]);\n    const inputRef = useRef(null);\n    const recipeData = useSelector(state => state.newRecipe)\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n\n    const checkForm = () => {\n        dispatch(setUserRecipeNewDataReducer({actions}))\n        navigate(\"/profile/create/post\");\n    }\n\n    useEffect(() => {\n        const newProds = [];\n        for (const prod of recipeData.products) {\n            newProds.push([prod, '0']);\n        }\n        dispatch(setUserRecipeNewDataReducer({productsWithCount: newProds}))\n    }, [])\n    \n    return (\n        <div style={{padding: '16px'}}>\n            <div style={{display: 'flex', marginBottom: '16px'}}>\n            <Link to='/profile/create'>\n                <Button \n                    style={{\n                        borderColor: \"#000000\",\n                        color: '#000000',\n                    }}\n                    variant=\"outlined\" \n                    type=\"submit\"\n                >\n                    <ArrowBackRoundedIcon/> Вернуться\n                </Button>\n            </Link>\n            <Button\n                    style={{\n                        marginLeft: '16px',\n                    }}\n                    variant=\"outlined\" \n                    type=\"submit\"\n                    onClick={() => {checkForm()}}\n                    >Дальше\n                </Button>\n            </div>\n            <div style={{display: 'flex'}}>\n                <h4 style={{marginRight: '2%'}}>{recipeData.title}</h4>\n                <h4 style={{marginRight: '2%'}}>{recipeData.time}</h4>\n            </div>\n            <ListOfSelectedProducts creating={true}/>\n            <h6 style={{marginTop: '8px'}}>Способ приготовления</h6>\n            <div style={{display: 'flex'}}>\n                <InputBase\n                    autoFocus\n                    inputRef={inputRef}\n                    sx={{width: '100%'}} \n                    value={newAction}\n                    style={{borderBottom: '2px solid black'}}\n                    placeholder=\"Введите название\"\n                    onChange={(e) => {setNewAction(e.target.value)}}\n                />\n                <Button \n                    style={{\n                        marginLeft: '16px',\n                        borderColor: \"#000000\",\n                        color: '#000000',\n                    }}\n                    variant=\"outlined\" \n                    type=\"submit\"\n                    onClick={() => {\n                        if (newAction) {\n                            inputRef.current.focus()\n                            setActions([...actions, newAction]);\n                            setNewAction('')\n                        }\n                    }}\n                    >Добавить\n                </Button>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'column', marginTop: '16px'}}>\n                {actions.map((item, index) => (\n                    <p key={index} style={{marginTop: 'auto', marginBottom: 'auto'}}>\n                        <span>{index + 1}</span>. {item}\n                    </p>))\n                }\n            </div>\n        </div>\n    )\n}","import CloseRoundedIcon from '@mui/icons-material/CloseRounded';\nimport { Link } from 'react-router-dom';\nimport { Routes, Route } from 'react-router-dom';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useDispatch } from 'react-redux';\nimport { ToPost } from './WidgetToPost';\nimport { WidgetMain } from './WidgetMain';\nimport { WidgetSelectedProducts } from './WidgetSelectedProducts';\n\n\nconst css_desc_main = {\n    width: '100vw',\n    height: '100vh',\n    position: 'fixed',\n    top: '0px',\n    left: '0px',\n    display: 'flex',\n    justifyContent: 'center',\n    background: 'rgba(0,0,0,.5)',\n    overflow: 'auto'\n}\n\nconst css_desc_block = {\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '10%',\n    width: '50%',\n    minHeight: '60vh',\n    borderRadius: '20px',\n}\n\nconst css_tablet_main = {\n    width: '100vw',\n    height: '100vh',\n    position: 'fixed',\n    top: '0px',\n    left: '0px',\n    display: 'flex',\n    overflow: 'auto',\n    background: 'rgb(255,255,255)'\n}\n\nconst css_tablet_block = {\n    backgroundColor: '#FFFFFF',\n    position: 'absolute',\n    top: '0',\n    width: '100%',\n    height: '100%',\n}\n\n\nexport const CreateRecipeBlock = () => {\n    let css_1 = css_desc_main\n    let css_2 = css_desc_block\n    const dispatch = useDispatch()\n\n    const tablet = useMediaQuery('(max-width:768px)');\n    if (tablet) {\n        css_1 = css_tablet_main\n        css_2 = css_tablet_block\n    }\n\n    document.body.style.overflow = \"hidden\";\n\n    return (\n        <div style={css_1}>\n            <div style={css_2}>\n                <div style={{\n                    position: 'absolute',\n                    top: '16px',\n                    right: '16px',\n                }}>\n                    <Link to='/profile' onClick={() => {document.body.style.overflow = \"scroll\";}}>\n                        <CloseRoundedIcon style={{\n                            color: '#000000',\n                        }}/>\n                    </Link>\n                </div>\n                <Routes>\n                    <Route path=\"post\" element={\n                        <ToPost dispatch={dispatch}/>\n                    } />\n                    <Route path=\"checkProducts\" element={\n                        <WidgetSelectedProducts dispatch={dispatch}/>\n                    } />\n                    <Route path=\"/*\" element={\n                        <WidgetMain dispatch={dispatch} tablet={tablet}/>\n                    } />\n                </Routes>\n            </div>\n        </div>\n    )\n}","import { useSelector } from 'react-redux';\nimport Axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { ListOfReciepes } from '../../components/HomePage/listOfReciepes/listOfReciepes';\nimport { setStarredRecipes } from '../../store/recipes';\nimport { useDispatch } from 'react-redux';\n\nexport const StarredRecipesPage = () => {\n    const [IsLoading, setIsLoading] = useState(true);\n    const [emptyRecipes, setEmptyRecipes] = useState(false)\n    const dispatch = useDispatch()\n    const userData = useSelector((state) => state.user)\n    useEffect(() => {\n        if (!userData.likedPostsIdes.length) {\n            setEmptyRecipes(true)\n            setIsLoading(false)\n        } else {\n            setIsLoading(true)\n            Axios.get('https://cookery-app.herokuapp.com/starredRecipes/get', {\n                params: {\n                    recipesIdes: userData.likedPostsIdes\n                }\n            }).then((response) => {\n                dispatch(setStarredRecipes(response.data))\n                setIsLoading(false)\n            })\n        }\n    }, [])\n\n    return (\n        <div className='container'>\n            <ListOfReciepes allRecipesBool={'starred'}/>\n        </div>\n    )\n}","import { PersonalInformation } from '../../components/PersonalInformation/info'\nimport { SavedRecipes } from '../../components/CreateNewRecipe/index'\nimport { UserRecipes } from '../../components/usersRecipes/usersRecipes'\nimport { CreateRecipeBlock } from '../../components/CreateRecipeBlock/index'\nimport { Routes, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { Navigate } from \"react-router-dom\";\nimport { StarredRecipesPage } from '../StarredRecipesPage';\n\n\nconst css_desc = {\n    marginLeft: '25%',\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '80vh',\n    width: '40%',\n}\n\nconst css_laptop = {\n    marginLeft: '25%',\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '80vh',\n    width: '40%',\n}\n\nconst css_tablet = {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '80vh',\n    width: '80%',\n    margin: '0 auto',\n}\n\nconst css_tablet2 = {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '80vh',\n    width: '100%',\n    margin: '0 auto',\n}\n\nconst css_mobile = {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '80vh',\n    width: '100%',\n    margin: '0 auto',\n}\n\n\nexport const ProfilePage = () => {\n    const userData = useSelector((state) => state.user)\n    let css = css_desc\n\n    const laptop = useMediaQuery('(max-width:1024px)');\n    const tablet = useMediaQuery('(max-width:768px)');\n    const tablet2 = useMediaQuery('(max-width:628px)');\n    const largePhone = useMediaQuery('(max-width:525px)');\n    const phone = useMediaQuery('(max-width:425px)');\n\n    if (phone) {\n        css = css_mobile;\n    } else if (tablet2) {\n        css = css_tablet2;\n    } else if (tablet) {\n        css = css_tablet;\n    }else if (laptop) {\n        css = css_laptop;\n    }\n\n    return (\n        <div className='container'>\n            {userData.loged ? <div style={css}>\n                <PersonalInformation \n                    mail={userData.mail}\n                    name={userData.name}\n                    likes={userData.likes}\n                    image={userData.image}\n                    userId={userData.id}\n                />\n                <div style={{display: 'flex', justifyContent: 'center'}}>\n                    <SavedRecipes/>\n                </div>\n                <UserRecipes largePhone={largePhone}/>\n                <Routes>\n                    <Route path=\"starred/*\" element={<StarredRecipesPage />} />\n                    <Route path=\"create/*\" element={<CreateRecipeBlock />} />\n                </Routes>\n            </div> : <Navigate to='/login'/>}\n        </div>\n    )\n}\n\n\nexport const ProfilePageRoutes = () => {\n    return (\n        <div>\n            <Routes>\n                <Route path=\"starred/*\" element={<StarredRecipesPage />} />\n                <Route path=\"*\" element={<ProfilePage />} />\n            </Routes>\n        </div>\n    )\n}","import { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport '../Login/loginAndSignUpStyles.css';\nimport Alert from '@mui/material/Alert';\nimport Button from '@mui/material/Button';\nimport Axios from 'axios';\n\nexport const Registration = () => {\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [nameError, setNameError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const mediumRegex = new RegExp(\"^(((?=.*[A-Z])(?=.*[0-9])(?=.*[a-z])))(?=.{8,})\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (name.length < 5) {\n            setNameError(\"Длина имени короче 5\");\n        }\n        if (!mediumRegex.test(password)) {\n            setPasswordError(\"Некорректно введён пароль\")\n        }\n\n        if (mediumRegex.test(password) && name.length > 4) {\n            signUp()\n        }\n    };\n\n    const signUp = () => {\n        Axios.post('https://cookery-app.herokuapp.com/users/insert', {\n            userName: name,\n            userEmail: email,\n            userPassword: password,\n        }).then((res) => {\n            if (res.data.errno === 1062) {\n                setEmailError('Пользователь с такой почтой уже существуйет, войдите')\n            }\n        })\n    }\n\n    return (\n        <div className='mainPage'>\n            <form onSubmit={handleSubmit}>\n                <h4>Регистрация</h4>\n                <Box\n                    sx={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        width: '100%'\n                    }}\n                >\n                    <TextField\n                        sx={{m: 1, mt: 3}}\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        label=\"Отображаемое имя\"\n                        name=\"name\"\n                        color=\"background\"\n                        onChange={(e) => {if (name.length > 4) {setNameError('')} setName(e.target.value)}}\n                        value={name}\n                        type=\"name\"\n                    />\n                    <TextField\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        label=\"Почта\"\n                        name=\"email\"\n                        type=\"email\"\n                        color=\"background\"\n                        onChange={(e) => {setEmail(e.target.value)}}\n                        value={email}\n                        sx={{m: 1}}\n                    />\n                    <TextField\n                        sx={{m: 1, mb: 3}}\n                        id=\"demo-helper-text-misaligned-no-helper\"\n                        label=\"Пароль\"\n                        name=\"password\"\n                        color=\"background\"\n                        onChange={(e) => {if (mediumRegex.test(password)) {setPasswordError('')} setPassword(e.target.value)}}\n                        value={password}\n                        type=\"password\"\n                    />\n                </Box>\n                <div>\n                    {emailError && <Alert sx={{mb: 2}} severity=\"error\">{emailError}</Alert>}\n                    {nameError && <Alert sx={{mb: 2}} severity=\"error\">{nameError}</Alert>}\n                    {passwordError && <Alert sx={{mb: 2}} severity=\"error\">{passwordError}</Alert>}\n                    <Button \n                        style={{\n                            borderColor: \"#000000\",\n                            color: '#000000',\n                        }}\n                        variant=\"outlined\" \n                        type=\"submit\"\n                    >Создать аккаунт\n                    </Button>\n                </div>\n                <br/>\n                <p>\n                    Уже есть аккаунт? <Link to=\"/login\">Войдите</Link>\n                </p>\n            </form>\n        </div>\n    );\n}","import { Registration } from '../../components/SignUp/index';\n\nexport const SignUp = () => {\n    return (\n        <div className='container'>\n            <Registration />\n        </div>\n    )\n}","import { ListOfReciepes } from \"../../components/HomePage/listOfReciepes/listOfReciepes\"\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nexport const AllRecipesPage = () => {\n    const laptop = useMediaQuery('(max-width:1024px)');\n    const tablet = useMediaQuery('(max-width:768px)');\n    const tablet2 = useMediaQuery('(max-width:628px)');\n    const phone = useMediaQuery('(max-width:425px)');\n    let format = 'computer'\n\n    if (phone) {\n        format = 'phone'\n    } else if (tablet2) {\n        format = 'tablet2'\n    } else if (tablet) {\n        format = 'tablet'\n    }else if (laptop) {\n        format = 'laptop'\n    }\n\n    return (\n        <div className=\"container\">\n            <ListOfReciepes format={format} allRecipesBool={true}/>\n        </div>\n    )\n}","import { Navigate } from \"react-router-dom\";\n\nexport const PrivateRoute = ({authed, children }) => {\n    return authed ? children : <Navigate to='/login'/>\n}","import { Link } from 'react-router-dom';\n\nexport const Footer = () => {\n    return (\n        <div style={{marginTop: '64px'}}>\n            <hr className=\"hr\" style={{marginTop: 0}}/>\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', paddingBottom: '30px' }}>\n                <Link to=\"/\" style={{ textDecoration: 'none', color: 'black' }}>\n                    <span className='gradient-text heading bottom-heading'>Cookery</span>\n                </Link>\n            </div>\n        </div>\n    )\n}","import { Header } from './components/Header/header';\nimport { Routes, Route } from 'react-router-dom';\nimport { RecipesPage } from './routes/RecipesPage';\nimport { HomePage } from './routes/HomePage';\nimport { LoginPage } from './routes/LoginPage';\nimport { ProfilePageRoutes } from './routes/ProfilePage';\nimport { SignUp } from './routes/RegistrationPage';\nimport { AllRecipesPage } from './routes/OnlyRecipesPage';\nimport { PrivateRoute } from \"./hocks/PrivateRoute\";\nimport { Footer } from './components/Footer/footer';\nimport { useSelector } from 'react-redux';\n\n\nexport const App = () => {\n    const userIsLoged = useSelector((state) => state.user.loged)\n\n    return (\n        <div className=\"app\">\n            <div style={{minHeight: 'calc(100vh - 80px)'}}>\n            <Header />\n            <hr style={{ margin: '0 0 48px', border: 0, height: '1px', backgroundImage: 'linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0))'}}/>\n            <div className=\"app\">\n                <Routes>\n                    <Route path=\"/login\" element={<LoginPage />} />\n                    <Route path=\"/signup\" element={<SignUp />} />\n                    <Route path=\"/allRecipes\" element={<AllRecipesPage/>}/>\n                    <Route path=\"/recipes/:recipeId/:page\" element={<RecipesPage />} />\n                    <Route path=\"/profile/*\" element={\n                        <PrivateRoute authed={userIsLoged}>\n                            <ProfilePageRoutes />\n                        </PrivateRoute>\n                    } />\n                    <Route path=\"/*\" element={<HomePage/>} />\n                </Routes>\n            </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\n","import { SET_USER_DATA, STAR_RECIPE, CHANGE_IMAGE } from './actions';\n\nconst initialState = {\n    loged: false,\n    id: null,\n    name: null,\n    mail: null,\n    likes: null,\n    recipes: [],\n    likedPostsIdes: [],\n}\n\nexport const userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_IMAGE: {\n            return {...state, image: action.payload}\n        }\n        case SET_USER_DATA: {\n            if (action.payload.likedPostsIdes === null) {\n                return {...state, ...action.payload, \n                    loged: true, likedPostsIdes: []}\n            }   return {...state, ...action.payload, \n            loged: true, likedPostsIdes: action.payload.likedPostsIdes.split(';') || []}\n        }\n        case STAR_RECIPE: {\n            switch (action.payload.starred) {\n                case true: {\n                    let likedPostIdesCopy = [...state.likedPostsIdes]\n                    const index = likedPostIdesCopy.indexOf(action.payload.recipeId);\n                    if (index > -1) {\n                        likedPostIdesCopy.splice(index, 1);\n                    }\n                    return {...state, likedPostsIdes: likedPostIdesCopy}\n                }\n                case false: {\n                    return {...state, likedPostsIdes: [...state.likedPostsIdes, action.payload.recipeId]}\n                }\n                default: {\n                    return state\n                }\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}","import { \n    SET_USER_RECIPE_NEW_DATA,\n    CHANGE_NEW_RECIPE_PRODUCT_COUNT\n} from './actions';\n\nconst initialState = {\n    time: null,\n    title: null,\n    actions: [],\n    description: null,\n    images: [],\n    products: [],\n    productsWithCount: [],\n    rating: 0,\n    comments: []\n}\n\nexport const userRecipeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_RECIPE_NEW_DATA: {\n            return {...state, ...action.payload}\n        }\n        case CHANGE_NEW_RECIPE_PRODUCT_COUNT: {\n            return {...state, productsWithCount: state.productsWithCount.map(\n                function(product) {\n                    if (product[0] === action.payload.productName) {\n                        return [product[0], action.payload.text]\n                    } return product\n                }\n            )}\n        }\n        default: {\n            return state\n        }\n    }\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { productsReducer } from './products';\nimport { recipesReducer } from './recipes';\nimport { userReducer } from './user/reducer';\nimport { userRecipeReducer } from './newRecipe/reducer';\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from \"redux-persist/es/persistReducer\";\nimport persistStore from \"redux-persist/es/persistStore\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['user']\n}\n\nconst rootReducer = combineReducers({\n    products: productsReducer,\n    recipes: recipesReducer,\n    user: userReducer,\n    newRecipe: userRecipeReducer,\n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer\n)\n\nexport const persistedStore = persistStore(store)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App'\nimport { store } from './store'\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { persistedStore } from \"./store\";\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate persistor={persistedStore}>\n              <HashRouter>\n                  <App/>\n              </HashRouter>\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}